<?xml version="1.0" encoding="UTF-8"?>
<ttFont sfntVersion="\x00\x01\x00\x00" ttLibVersion="4.26">

  <GlyphOrder>
    <!-- The 'id' attribute is only for humans; it is ignored when parsed. -->
    <GlyphID id="0" name=".notdef"/>
    <GlyphID id="1" name="space"/>
    <GlyphID id="2" name="A"/>
    <GlyphID id="3" name="B"/>
    <GlyphID id="4" name="C"/>
    <GlyphID id="5" name="D"/>
    <GlyphID id="6" name="E"/>
    <GlyphID id="7" name="F"/>
    <GlyphID id="8" name="G"/>
    <GlyphID id="9" name="H"/>
    <GlyphID id="10" name="I"/>
    <GlyphID id="11" name="J"/>
    <GlyphID id="12" name="K"/>
    <GlyphID id="13" name="L"/>
    <GlyphID id="14" name="M"/>
    <GlyphID id="15" name="N"/>
    <GlyphID id="16" name="O"/>
    <GlyphID id="17" name="P"/>
    <GlyphID id="18" name="Q"/>
    <GlyphID id="19" name="R"/>
    <GlyphID id="20" name="S"/>
    <GlyphID id="21" name="T"/>
    <GlyphID id="22" name="U"/>
    <GlyphID id="23" name="V"/>
    <GlyphID id="24" name="W"/>
    <GlyphID id="25" name="X"/>
    <GlyphID id="26" name="Y"/>
    <GlyphID id="27" name="Z"/>
    <GlyphID id="28" name="a"/>
    <GlyphID id="29" name="b"/>
    <GlyphID id="30" name="c"/>
    <GlyphID id="31" name="d"/>
    <GlyphID id="32" name="e"/>
    <GlyphID id="33" name="f"/>
    <GlyphID id="34" name="g"/>
    <GlyphID id="35" name="h"/>
    <GlyphID id="36" name="i"/>
    <GlyphID id="37" name="dotlessi"/>
    <GlyphID id="38" name="j"/>
    <GlyphID id="39" name="uni0237"/>
    <GlyphID id="40" name="k"/>
    <GlyphID id="41" name="l"/>
    <GlyphID id="42" name="m"/>
    <GlyphID id="43" name="n"/>
    <GlyphID id="44" name="o"/>
    <GlyphID id="45" name="p"/>
    <GlyphID id="46" name="q"/>
    <GlyphID id="47" name="r"/>
    <GlyphID id="48" name="s"/>
    <GlyphID id="49" name="t"/>
    <GlyphID id="50" name="u"/>
    <GlyphID id="51" name="v"/>
    <GlyphID id="52" name="w"/>
    <GlyphID id="53" name="x"/>
    <GlyphID id="54" name="y"/>
    <GlyphID id="55" name="z"/>
    <GlyphID id="56" name="uni043D"/>
    <GlyphID id="57" name="uni043E"/>
    <GlyphID id="58" name="zero"/>
    <GlyphID id="59" name="one"/>
    <GlyphID id="60" name="two"/>
    <GlyphID id="61" name="three"/>
    <GlyphID id="62" name="four"/>
    <GlyphID id="63" name="five"/>
    <GlyphID id="64" name="six"/>
    <GlyphID id="65" name="seven"/>
    <GlyphID id="66" name="eight"/>
    <GlyphID id="67" name="nine"/>
    <GlyphID id="68" name="uni2003"/>
    <GlyphID id="69" name="uni2002"/>
    <GlyphID id="70" name="period"/>
    <GlyphID id="71" name="comma"/>
    <GlyphID id="72" name="colon"/>
    <GlyphID id="73" name="semicolon"/>
    <GlyphID id="74" name="ellipsis"/>
    <GlyphID id="75" name="exclam"/>
    <GlyphID id="76" name="question"/>
    <GlyphID id="77" name="bullet"/>
    <GlyphID id="78" name="asterisk"/>
    <GlyphID id="79" name="numbersign"/>
    <GlyphID id="80" name="slash"/>
    <GlyphID id="81" name="backslash"/>
    <GlyphID id="82" name="colon.case"/>
    <GlyphID id="83" name="hyphen"/>
    <GlyphID id="84" name="endash"/>
    <GlyphID id="85" name="emdash"/>
    <GlyphID id="86" name="underscore"/>
    <GlyphID id="87" name="hyphen.case"/>
    <GlyphID id="88" name="endash.case"/>
    <GlyphID id="89" name="emdash.case"/>
    <GlyphID id="90" name="parenleft"/>
    <GlyphID id="91" name="parenright"/>
    <GlyphID id="92" name="braceleft"/>
    <GlyphID id="93" name="braceright"/>
    <GlyphID id="94" name="bracketleft"/>
    <GlyphID id="95" name="bracketright"/>
    <GlyphID id="96" name="quotesinglbase"/>
    <GlyphID id="97" name="quotedblbase"/>
    <GlyphID id="98" name="quotedblleft"/>
    <GlyphID id="99" name="quotedblright"/>
    <GlyphID id="100" name="quoteleft"/>
    <GlyphID id="101" name="quoteright"/>
    <GlyphID id="102" name="guillemotleft"/>
    <GlyphID id="103" name="guillemotright"/>
    <GlyphID id="104" name="quotedbl"/>
    <GlyphID id="105" name="quotesingle"/>
    <GlyphID id="106" name="at"/>
    <GlyphID id="107" name="ampersand"/>
    <GlyphID id="108" name="section"/>
    <GlyphID id="109" name="copyright"/>
    <GlyphID id="110" name="bar"/>
    <GlyphID id="111" name="cent"/>
    <GlyphID id="112" name="currency"/>
    <GlyphID id="113" name="dollar"/>
    <GlyphID id="114" name="Euro"/>
    <GlyphID id="115" name="uni20BD"/>
    <GlyphID id="116" name="sterling"/>
    <GlyphID id="117" name="yen"/>
    <GlyphID id="118" name="cent.bold"/>
    <GlyphID id="119" name="dollar.bold"/>
    <GlyphID id="120" name="plus"/>
    <GlyphID id="121" name="minus"/>
    <GlyphID id="122" name="multiply"/>
    <GlyphID id="123" name="divide"/>
    <GlyphID id="124" name="equal"/>
    <GlyphID id="125" name="notequal"/>
    <GlyphID id="126" name="greater"/>
    <GlyphID id="127" name="less"/>
    <GlyphID id="128" name="approxequal"/>
    <GlyphID id="129" name="asciitilde"/>
    <GlyphID id="130" name="asciicircum"/>
    <GlyphID id="131" name="percent"/>
    <GlyphID id="132" name="plus.case"/>
    <GlyphID id="133" name="minus.case"/>
    <GlyphID id="134" name="multiply.case"/>
    <GlyphID id="135" name="divide.case"/>
    <GlyphID id="136" name="equal.case"/>
    <GlyphID id="137" name="notequal.case"/>
    <GlyphID id="138" name="greater.case"/>
    <GlyphID id="139" name="less.case"/>
    <GlyphID id="140" name="approxequal.case"/>
    <GlyphID id="141" name="asciitilde.case"/>
    <GlyphID id="142" name="percent.cv01"/>
    <GlyphID id="143" name="percent.cv02"/>
    <GlyphID id="144" name="uni0306.cy"/>
    <GlyphID id="145" name="uni0308"/>
    <GlyphID id="146" name="uni0307"/>
    <GlyphID id="147" name="grave"/>
    <GlyphID id="148" name="_part.multiply"/>
  </GlyphOrder>

  <head>
    <!-- Most of this table will be recalculated by the compiler -->
    <tableVersion value="1.0"/>
    <fontRevision value="0.84999"/>
    <checkSumAdjustment value="0x2ee30d9f"/>
    <magicNumber value="0x5f0f3cf5"/>
    <flags value="00000000 00000111"/>
    <unitsPerEm value="1000"/>
    <created value="Sat Nov 28 12:14:13 2020"/>
    <modified value="Wed Sep  1 18:33:28 2021"/>
    <xMin value="-136"/>
    <yMin value="-216"/>
    <xMax value="672"/>
    <yMax value="1024"/>
    <macStyle value="00000000 00000000"/>
    <lowestRecPPEM value="7"/>
    <fontDirectionHint value="2"/>
    <indexToLocFormat value="0"/>
    <glyphDataFormat value="0"/>
  </head>

  <hhea>
    <tableVersion value="0x00010000"/>
    <ascent value="1000"/>
    <descent value="-200"/>
    <lineGap value="152"/>
    <advanceWidthMax value="700"/>
    <minLeftSideBearing value="-136"/>
    <minRightSideBearing value="-338"/>
    <xMaxExtent value="672"/>
    <caretSlopeRise value="1"/>
    <caretSlopeRun value="0"/>
    <caretOffset value="0"/>
    <reserved0 value="0"/>
    <reserved1 value="0"/>
    <reserved2 value="0"/>
    <reserved3 value="0"/>
    <metricDataFormat value="0"/>
    <numberOfHMetrics value="148"/>
  </hhea>

  <maxp>
    <!-- Most of this table will be recalculated by the compiler -->
    <tableVersion value="0x10000"/>
    <numGlyphs value="149"/>
    <maxPoints value="73"/>
    <maxContours value="10"/>
    <maxCompositePoints value="52"/>
    <maxCompositeContours value="3"/>
    <maxZones value="2"/>
    <maxTwilightPoints value="86"/>
    <maxStorage value="153"/>
    <maxFunctionDefs value="141"/>
    <maxInstructionDefs value="0"/>
    <maxStackElements value="269"/>
    <maxSizeOfInstructions value="3605"/>
    <maxComponentElements value="3"/>
    <maxComponentDepth value="2"/>
  </maxp>

  <OS_2>
    <!-- The fields 'usFirstCharIndex' and 'usLastCharIndex'
         will be recalculated by the compiler -->
    <version value="4"/>
    <xAvgCharWidth value="698"/>
    <usWeightClass value="400"/>
    <usWidthClass value="5"/>
    <fsType value="00000000 00001000"/>
    <ySubscriptXSize value="650"/>
    <ySubscriptYSize value="600"/>
    <ySubscriptXOffset value="0"/>
    <ySubscriptYOffset value="75"/>
    <ySuperscriptXSize value="650"/>
    <ySuperscriptYSize value="600"/>
    <ySuperscriptXOffset value="0"/>
    <ySuperscriptYOffset value="350"/>
    <yStrikeoutSize value="50"/>
    <yStrikeoutPosition value="300"/>
    <sFamilyClass value="0"/>
    <panose>
      <bFamilyType value="2"/>
      <bSerifStyle value="11"/>
      <bWeight value="0"/>
      <bProportion value="9"/>
      <bContrast value="2"/>
      <bStrokeVariation value="0"/>
      <bArmStyle value="0"/>
      <bLetterForm value="0"/>
      <bMidline value="0"/>
      <bXHeight value="4"/>
    </panose>
    <ulUnicodeRange1 value="10000000 00000000 00000010 01001111"/>
    <ulUnicodeRange2 value="00000000 00000000 00000000 01000010"/>
    <ulUnicodeRange3 value="00000000 00000000 00000000 00000000"/>
    <ulUnicodeRange4 value="00000000 00000000 00000000 00000000"/>
    <achVendID value="UKWN"/>
    <fsSelection value="00000000 11000000"/>
    <usFirstCharIndex value="32"/>
    <usLastCharIndex value="8800"/>
    <sTypoAscender value="848"/>
    <sTypoDescender value="-200"/>
    <sTypoLineGap value="152"/>
    <usWinAscent value="1000"/>
    <usWinDescent value="200"/>
    <ulCodePageRange1 value="00100000 00000000 00000000 00000001"/>
    <ulCodePageRange2 value="00000000 00000000 00000000 00000000"/>
    <sxHeight value="598"/>
    <sCapHeight value="800"/>
    <usDefaultChar value="0"/>
    <usBreakChar value="32"/>
    <usMaxContext value="3"/>
  </OS_2>

  <hmtx>
    <mtx name=".notdef" width="525" lsb="98"/>
    <mtx name="A" width="700" lsb="59"/>
    <mtx name="B" width="700" lsb="120"/>
    <mtx name="C" width="700" lsb="87"/>
    <mtx name="D" width="700" lsb="100"/>
    <mtx name="E" width="700" lsb="142"/>
    <mtx name="Euro" width="700" lsb="40"/>
    <mtx name="F" width="700" lsb="160"/>
    <mtx name="G" width="700" lsb="77"/>
    <mtx name="H" width="700" lsb="100"/>
    <mtx name="I" width="700" lsb="120"/>
    <mtx name="J" width="700" lsb="101"/>
    <mtx name="K" width="700" lsb="139"/>
    <mtx name="L" width="700" lsb="177"/>
    <mtx name="M" width="700" lsb="78"/>
    <mtx name="N" width="700" lsb="100"/>
    <mtx name="O" width="700" lsb="65"/>
    <mtx name="P" width="700" lsb="137"/>
    <mtx name="Q" width="700" lsb="65"/>
    <mtx name="R" width="700" lsb="121"/>
    <mtx name="S" width="700" lsb="92"/>
    <mtx name="T" width="700" lsb="80"/>
    <mtx name="U" width="700" lsb="91"/>
    <mtx name="V" width="700" lsb="59"/>
    <mtx name="W" width="700" lsb="28"/>
    <mtx name="X" width="700" lsb="59"/>
    <mtx name="Y" width="700" lsb="49"/>
    <mtx name="Z" width="700" lsb="108"/>
    <mtx name="_part.multiply" width="700" lsb="118"/>
    <mtx name="a" width="700" lsb="76"/>
    <mtx name="ampersand" width="700" lsb="90"/>
    <mtx name="approxequal" width="700" lsb="80"/>
    <mtx name="approxequal.case" width="700" lsb="80"/>
    <mtx name="asciicircum" width="700" lsb="125"/>
    <mtx name="asciitilde" width="700" lsb="80"/>
    <mtx name="asciitilde.case" width="700" lsb="80"/>
    <mtx name="asterisk" width="700" lsb="105"/>
    <mtx name="at" width="700" lsb="66"/>
    <mtx name="b" width="700" lsb="113"/>
    <mtx name="backslash" width="700" lsb="129"/>
    <mtx name="bar" width="700" lsb="309"/>
    <mtx name="braceleft" width="700" lsb="250"/>
    <mtx name="braceright" width="700" lsb="163"/>
    <mtx name="bracketleft" width="700" lsb="312"/>
    <mtx name="bracketright" width="700" lsb="163"/>
    <mtx name="bullet" width="700" lsb="168"/>
    <mtx name="c" width="700" lsb="100"/>
    <mtx name="cent" width="700" lsb="100"/>
    <mtx name="cent.bold" width="700" lsb="100"/>
    <mtx name="colon" width="700" lsb="267"/>
    <mtx name="colon.case" width="700" lsb="267"/>
    <mtx name="comma" width="700" lsb="255"/>
    <mtx name="copyright" width="700" lsb="65"/>
    <mtx name="currency" width="700" lsb="99"/>
    <mtx name="d" width="700" lsb="68"/>
    <mtx name="divide" width="700" lsb="93"/>
    <mtx name="divide.case" width="700" lsb="93"/>
    <mtx name="dollar" width="700" lsb="92"/>
    <mtx name="dollar.bold" width="700" lsb="92"/>
    <mtx name="dotlessi" width="700" lsb="151"/>
    <mtx name="e" width="700" lsb="101"/>
    <mtx name="eight" width="700" lsb="79"/>
    <mtx name="ellipsis" width="700" lsb="51"/>
    <mtx name="emdash" width="700" lsb="45"/>
    <mtx name="emdash.case" width="700" lsb="45"/>
    <mtx name="endash" width="700" lsb="75"/>
    <mtx name="endash.case" width="700" lsb="75"/>
    <mtx name="equal" width="700" lsb="90"/>
    <mtx name="equal.case" width="700" lsb="90"/>
    <mtx name="exclam" width="700" lsb="271"/>
    <mtx name="f" width="700" lsb="138"/>
    <mtx name="five" width="700" lsb="91"/>
    <mtx name="four" width="700" lsb="67"/>
    <mtx name="g" width="700" lsb="82"/>
    <mtx name="grave" width="700" lsb="198"/>
    <mtx name="greater" width="700" lsb="120"/>
    <mtx name="greater.case" width="700" lsb="120"/>
    <mtx name="guillemotleft" width="700" lsb="101"/>
    <mtx name="guillemotright" width="700" lsb="125"/>
    <mtx name="h" width="700" lsb="120"/>
    <mtx name="hyphen" width="700" lsb="93"/>
    <mtx name="hyphen.case" width="700" lsb="93"/>
    <mtx name="i" width="700" lsb="151"/>
    <mtx name="j" width="700" lsb="103"/>
    <mtx name="k" width="700" lsb="154"/>
    <mtx name="l" width="700" lsb="136"/>
    <mtx name="less" width="700" lsb="120"/>
    <mtx name="less.case" width="700" lsb="120"/>
    <mtx name="m" width="700" lsb="80"/>
    <mtx name="minus" width="700" lsb="93"/>
    <mtx name="minus.case" width="700" lsb="93"/>
    <mtx name="multiply" width="700" lsb="118"/>
    <mtx name="multiply.case" width="700" lsb="118"/>
    <mtx name="n" width="700" lsb="120"/>
    <mtx name="nine" width="700" lsb="77"/>
    <mtx name="notequal" width="700" lsb="90"/>
    <mtx name="notequal.case" width="700" lsb="90"/>
    <mtx name="numbersign" width="700" lsb="48"/>
    <mtx name="o" width="700" lsb="84"/>
    <mtx name="one" width="700" lsb="110"/>
    <mtx name="p" width="700" lsb="113"/>
    <mtx name="parenleft" width="700" lsb="250"/>
    <mtx name="parenright" width="700" lsb="150"/>
    <mtx name="percent" width="700" lsb="49"/>
    <mtx name="percent.cv01" width="700" lsb="65"/>
    <mtx name="percent.cv02" width="700" lsb="65"/>
    <mtx name="period" width="700" lsb="267"/>
    <mtx name="plus" width="700" lsb="93"/>
    <mtx name="plus.case" width="700" lsb="93"/>
    <mtx name="q" width="700" lsb="68"/>
    <mtx name="question" width="700" lsb="76"/>
    <mtx name="quotedbl" width="700" lsb="186"/>
    <mtx name="quotedblbase" width="700" lsb="116"/>
    <mtx name="quotedblleft" width="700" lsb="147"/>
    <mtx name="quotedblright" width="700" lsb="116"/>
    <mtx name="quoteleft" width="700" lsb="258"/>
    <mtx name="quoteright" width="700" lsb="255"/>
    <mtx name="quotesinglbase" width="700" lsb="255"/>
    <mtx name="quotesingle" width="700" lsb="295"/>
    <mtx name="r" width="700" lsb="97"/>
    <mtx name="s" width="700" lsb="115"/>
    <mtx name="section" width="700" lsb="121"/>
    <mtx name="semicolon" width="700" lsb="255"/>
    <mtx name="seven" width="700" lsb="90"/>
    <mtx name="six" width="700" lsb="77"/>
    <mtx name="slash" width="700" lsb="129"/>
    <mtx name="space" width="700" lsb="0"/>
    <mtx name="sterling" width="700" lsb="100"/>
    <mtx name="t" width="700" lsb="83"/>
    <mtx name="three" width="700" lsb="74"/>
    <mtx name="two" width="700" lsb="88"/>
    <mtx name="u" width="700" lsb="108"/>
    <mtx name="underscore" width="700" lsb="83"/>
    <mtx name="uni0237" width="700" lsb="103"/>
    <mtx name="uni0306.cy" width="0" lsb="6"/>
    <mtx name="uni0307" width="0" lsb="10"/>
    <mtx name="uni0308" width="0" lsb="-136"/>
    <mtx name="uni043D" width="700" lsb="120"/>
    <mtx name="uni043E" width="700" lsb="84"/>
    <mtx name="uni2002" width="700" lsb="0"/>
    <mtx name="uni2003" width="700" lsb="0"/>
    <mtx name="uni20BD" width="700" lsb="54"/>
    <mtx name="v" width="700" lsb="70"/>
    <mtx name="w" width="700" lsb="35"/>
    <mtx name="x" width="700" lsb="79"/>
    <mtx name="y" width="700" lsb="59"/>
    <mtx name="yen" width="700" lsb="49"/>
    <mtx name="z" width="700" lsb="129"/>
    <mtx name="zero" width="700" lsb="65"/>
  </hmtx>

  <cmap>
    <tableVersion version="0"/>
    <cmap_format_4 platformID="0" platEncID="3" language="0">
      <map code="0x20" name="space"/><!-- SPACE -->
      <map code="0x21" name="exclam"/><!-- EXCLAMATION MARK -->
      <map code="0x22" name="quotedbl"/><!-- QUOTATION MARK -->
      <map code="0x23" name="numbersign"/><!-- NUMBER SIGN -->
      <map code="0x24" name="dollar"/><!-- DOLLAR SIGN -->
      <map code="0x25" name="percent"/><!-- PERCENT SIGN -->
      <map code="0x26" name="ampersand"/><!-- AMPERSAND -->
      <map code="0x27" name="quotesingle"/><!-- APOSTROPHE -->
      <map code="0x28" name="parenleft"/><!-- LEFT PARENTHESIS -->
      <map code="0x29" name="parenright"/><!-- RIGHT PARENTHESIS -->
      <map code="0x2a" name="asterisk"/><!-- ASTERISK -->
      <map code="0x2b" name="plus"/><!-- PLUS SIGN -->
      <map code="0x2c" name="comma"/><!-- COMMA -->
      <map code="0x2d" name="hyphen"/><!-- HYPHEN-MINUS -->
      <map code="0x2e" name="period"/><!-- FULL STOP -->
      <map code="0x2f" name="slash"/><!-- SOLIDUS -->
      <map code="0x30" name="zero"/><!-- DIGIT ZERO -->
      <map code="0x31" name="one"/><!-- DIGIT ONE -->
      <map code="0x32" name="two"/><!-- DIGIT TWO -->
      <map code="0x33" name="three"/><!-- DIGIT THREE -->
      <map code="0x34" name="four"/><!-- DIGIT FOUR -->
      <map code="0x35" name="five"/><!-- DIGIT FIVE -->
      <map code="0x36" name="six"/><!-- DIGIT SIX -->
      <map code="0x37" name="seven"/><!-- DIGIT SEVEN -->
      <map code="0x38" name="eight"/><!-- DIGIT EIGHT -->
      <map code="0x39" name="nine"/><!-- DIGIT NINE -->
      <map code="0x3a" name="colon"/><!-- COLON -->
      <map code="0x3b" name="semicolon"/><!-- SEMICOLON -->
      <map code="0x3c" name="less"/><!-- LESS-THAN SIGN -->
      <map code="0x3d" name="equal"/><!-- EQUALS SIGN -->
      <map code="0x3e" name="greater"/><!-- GREATER-THAN SIGN -->
      <map code="0x3f" name="question"/><!-- QUESTION MARK -->
      <map code="0x40" name="at"/><!-- COMMERCIAL AT -->
      <map code="0x41" name="A"/><!-- LATIN CAPITAL LETTER A -->
      <map code="0x42" name="B"/><!-- LATIN CAPITAL LETTER B -->
      <map code="0x43" name="C"/><!-- LATIN CAPITAL LETTER C -->
      <map code="0x44" name="D"/><!-- LATIN CAPITAL LETTER D -->
      <map code="0x45" name="E"/><!-- LATIN CAPITAL LETTER E -->
      <map code="0x46" name="F"/><!-- LATIN CAPITAL LETTER F -->
      <map code="0x47" name="G"/><!-- LATIN CAPITAL LETTER G -->
      <map code="0x48" name="H"/><!-- LATIN CAPITAL LETTER H -->
      <map code="0x49" name="I"/><!-- LATIN CAPITAL LETTER I -->
      <map code="0x4a" name="J"/><!-- LATIN CAPITAL LETTER J -->
      <map code="0x4b" name="K"/><!-- LATIN CAPITAL LETTER K -->
      <map code="0x4c" name="L"/><!-- LATIN CAPITAL LETTER L -->
      <map code="0x4d" name="M"/><!-- LATIN CAPITAL LETTER M -->
      <map code="0x4e" name="N"/><!-- LATIN CAPITAL LETTER N -->
      <map code="0x4f" name="O"/><!-- LATIN CAPITAL LETTER O -->
      <map code="0x50" name="P"/><!-- LATIN CAPITAL LETTER P -->
      <map code="0x51" name="Q"/><!-- LATIN CAPITAL LETTER Q -->
      <map code="0x52" name="R"/><!-- LATIN CAPITAL LETTER R -->
      <map code="0x53" name="S"/><!-- LATIN CAPITAL LETTER S -->
      <map code="0x54" name="T"/><!-- LATIN CAPITAL LETTER T -->
      <map code="0x55" name="U"/><!-- LATIN CAPITAL LETTER U -->
      <map code="0x56" name="V"/><!-- LATIN CAPITAL LETTER V -->
      <map code="0x57" name="W"/><!-- LATIN CAPITAL LETTER W -->
      <map code="0x58" name="X"/><!-- LATIN CAPITAL LETTER X -->
      <map code="0x59" name="Y"/><!-- LATIN CAPITAL LETTER Y -->
      <map code="0x5a" name="Z"/><!-- LATIN CAPITAL LETTER Z -->
      <map code="0x5b" name="bracketleft"/><!-- LEFT SQUARE BRACKET -->
      <map code="0x5c" name="backslash"/><!-- REVERSE SOLIDUS -->
      <map code="0x5d" name="bracketright"/><!-- RIGHT SQUARE BRACKET -->
      <map code="0x5e" name="asciicircum"/><!-- CIRCUMFLEX ACCENT -->
      <map code="0x5f" name="underscore"/><!-- LOW LINE -->
      <map code="0x60" name="grave"/><!-- GRAVE ACCENT -->
      <map code="0x61" name="a"/><!-- LATIN SMALL LETTER A -->
      <map code="0x62" name="b"/><!-- LATIN SMALL LETTER B -->
      <map code="0x63" name="c"/><!-- LATIN SMALL LETTER C -->
      <map code="0x64" name="d"/><!-- LATIN SMALL LETTER D -->
      <map code="0x65" name="e"/><!-- LATIN SMALL LETTER E -->
      <map code="0x66" name="f"/><!-- LATIN SMALL LETTER F -->
      <map code="0x67" name="g"/><!-- LATIN SMALL LETTER G -->
      <map code="0x68" name="h"/><!-- LATIN SMALL LETTER H -->
      <map code="0x69" name="i"/><!-- LATIN SMALL LETTER I -->
      <map code="0x6a" name="j"/><!-- LATIN SMALL LETTER J -->
      <map code="0x6b" name="k"/><!-- LATIN SMALL LETTER K -->
      <map code="0x6c" name="l"/><!-- LATIN SMALL LETTER L -->
      <map code="0x6d" name="m"/><!-- LATIN SMALL LETTER M -->
      <map code="0x6e" name="n"/><!-- LATIN SMALL LETTER N -->
      <map code="0x6f" name="o"/><!-- LATIN SMALL LETTER O -->
      <map code="0x70" name="p"/><!-- LATIN SMALL LETTER P -->
      <map code="0x71" name="q"/><!-- LATIN SMALL LETTER Q -->
      <map code="0x72" name="r"/><!-- LATIN SMALL LETTER R -->
      <map code="0x73" name="s"/><!-- LATIN SMALL LETTER S -->
      <map code="0x74" name="t"/><!-- LATIN SMALL LETTER T -->
      <map code="0x75" name="u"/><!-- LATIN SMALL LETTER U -->
      <map code="0x76" name="v"/><!-- LATIN SMALL LETTER V -->
      <map code="0x77" name="w"/><!-- LATIN SMALL LETTER W -->
      <map code="0x78" name="x"/><!-- LATIN SMALL LETTER X -->
      <map code="0x79" name="y"/><!-- LATIN SMALL LETTER Y -->
      <map code="0x7a" name="z"/><!-- LATIN SMALL LETTER Z -->
      <map code="0x7b" name="braceleft"/><!-- LEFT CURLY BRACKET -->
      <map code="0x7c" name="bar"/><!-- VERTICAL LINE -->
      <map code="0x7d" name="braceright"/><!-- RIGHT CURLY BRACKET -->
      <map code="0x7e" name="asciitilde"/><!-- TILDE -->
      <map code="0xa0" name="space"/><!-- NO-BREAK SPACE -->
      <map code="0xa2" name="cent"/><!-- CENT SIGN -->
      <map code="0xa3" name="sterling"/><!-- POUND SIGN -->
      <map code="0xa4" name="currency"/><!-- CURRENCY SIGN -->
      <map code="0xa5" name="yen"/><!-- YEN SIGN -->
      <map code="0xa7" name="section"/><!-- SECTION SIGN -->
      <map code="0xa9" name="copyright"/><!-- COPYRIGHT SIGN -->
      <map code="0xab" name="guillemotleft"/><!-- LEFT-POINTING DOUBLE ANGLE QUOTATION MARK -->
      <map code="0xbb" name="guillemotright"/><!-- RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK -->
      <map code="0xd7" name="multiply"/><!-- MULTIPLICATION SIGN -->
      <map code="0xf7" name="divide"/><!-- DIVISION SIGN -->
      <map code="0x131" name="dotlessi"/><!-- LATIN SMALL LETTER DOTLESS I -->
      <map code="0x237" name="uni0237"/><!-- LATIN SMALL LETTER DOTLESS J -->
      <map code="0x307" name="uni0307"/><!-- COMBINING DOT ABOVE -->
      <map code="0x308" name="uni0308"/><!-- COMBINING DIAERESIS -->
      <map code="0x43d" name="uni043D"/><!-- CYRILLIC SMALL LETTER EN -->
      <map code="0x43e" name="uni043E"/><!-- CYRILLIC SMALL LETTER O -->
      <map code="0x2002" name="uni2002"/><!-- EN SPACE -->
      <map code="0x2003" name="uni2003"/><!-- EM SPACE -->
      <map code="0x2013" name="endash"/><!-- EN DASH -->
      <map code="0x2014" name="emdash"/><!-- EM DASH -->
      <map code="0x2018" name="quoteleft"/><!-- LEFT SINGLE QUOTATION MARK -->
      <map code="0x2019" name="quoteright"/><!-- RIGHT SINGLE QUOTATION MARK -->
      <map code="0x201a" name="quotesinglbase"/><!-- SINGLE LOW-9 QUOTATION MARK -->
      <map code="0x201c" name="quotedblleft"/><!-- LEFT DOUBLE QUOTATION MARK -->
      <map code="0x201d" name="quotedblright"/><!-- RIGHT DOUBLE QUOTATION MARK -->
      <map code="0x201e" name="quotedblbase"/><!-- DOUBLE LOW-9 QUOTATION MARK -->
      <map code="0x2022" name="bullet"/><!-- BULLET -->
      <map code="0x2026" name="ellipsis"/><!-- HORIZONTAL ELLIPSIS -->
      <map code="0x20ac" name="Euro"/><!-- EURO SIGN -->
      <map code="0x20bd" name="uni20BD"/><!-- RUBLE SIGN -->
      <map code="0x2212" name="minus"/><!-- MINUS SIGN -->
      <map code="0x2248" name="approxequal"/><!-- ALMOST EQUAL TO -->
      <map code="0x2260" name="notequal"/><!-- NOT EQUAL TO -->
    </cmap_format_4>
    <cmap_format_4 platformID="3" platEncID="1" language="0">
      <map code="0x20" name="space"/><!-- SPACE -->
      <map code="0x21" name="exclam"/><!-- EXCLAMATION MARK -->
      <map code="0x22" name="quotedbl"/><!-- QUOTATION MARK -->
      <map code="0x23" name="numbersign"/><!-- NUMBER SIGN -->
      <map code="0x24" name="dollar"/><!-- DOLLAR SIGN -->
      <map code="0x25" name="percent"/><!-- PERCENT SIGN -->
      <map code="0x26" name="ampersand"/><!-- AMPERSAND -->
      <map code="0x27" name="quotesingle"/><!-- APOSTROPHE -->
      <map code="0x28" name="parenleft"/><!-- LEFT PARENTHESIS -->
      <map code="0x29" name="parenright"/><!-- RIGHT PARENTHESIS -->
      <map code="0x2a" name="asterisk"/><!-- ASTERISK -->
      <map code="0x2b" name="plus"/><!-- PLUS SIGN -->
      <map code="0x2c" name="comma"/><!-- COMMA -->
      <map code="0x2d" name="hyphen"/><!-- HYPHEN-MINUS -->
      <map code="0x2e" name="period"/><!-- FULL STOP -->
      <map code="0x2f" name="slash"/><!-- SOLIDUS -->
      <map code="0x30" name="zero"/><!-- DIGIT ZERO -->
      <map code="0x31" name="one"/><!-- DIGIT ONE -->
      <map code="0x32" name="two"/><!-- DIGIT TWO -->
      <map code="0x33" name="three"/><!-- DIGIT THREE -->
      <map code="0x34" name="four"/><!-- DIGIT FOUR -->
      <map code="0x35" name="five"/><!-- DIGIT FIVE -->
      <map code="0x36" name="six"/><!-- DIGIT SIX -->
      <map code="0x37" name="seven"/><!-- DIGIT SEVEN -->
      <map code="0x38" name="eight"/><!-- DIGIT EIGHT -->
      <map code="0x39" name="nine"/><!-- DIGIT NINE -->
      <map code="0x3a" name="colon"/><!-- COLON -->
      <map code="0x3b" name="semicolon"/><!-- SEMICOLON -->
      <map code="0x3c" name="less"/><!-- LESS-THAN SIGN -->
      <map code="0x3d" name="equal"/><!-- EQUALS SIGN -->
      <map code="0x3e" name="greater"/><!-- GREATER-THAN SIGN -->
      <map code="0x3f" name="question"/><!-- QUESTION MARK -->
      <map code="0x40" name="at"/><!-- COMMERCIAL AT -->
      <map code="0x41" name="A"/><!-- LATIN CAPITAL LETTER A -->
      <map code="0x42" name="B"/><!-- LATIN CAPITAL LETTER B -->
      <map code="0x43" name="C"/><!-- LATIN CAPITAL LETTER C -->
      <map code="0x44" name="D"/><!-- LATIN CAPITAL LETTER D -->
      <map code="0x45" name="E"/><!-- LATIN CAPITAL LETTER E -->
      <map code="0x46" name="F"/><!-- LATIN CAPITAL LETTER F -->
      <map code="0x47" name="G"/><!-- LATIN CAPITAL LETTER G -->
      <map code="0x48" name="H"/><!-- LATIN CAPITAL LETTER H -->
      <map code="0x49" name="I"/><!-- LATIN CAPITAL LETTER I -->
      <map code="0x4a" name="J"/><!-- LATIN CAPITAL LETTER J -->
      <map code="0x4b" name="K"/><!-- LATIN CAPITAL LETTER K -->
      <map code="0x4c" name="L"/><!-- LATIN CAPITAL LETTER L -->
      <map code="0x4d" name="M"/><!-- LATIN CAPITAL LETTER M -->
      <map code="0x4e" name="N"/><!-- LATIN CAPITAL LETTER N -->
      <map code="0x4f" name="O"/><!-- LATIN CAPITAL LETTER O -->
      <map code="0x50" name="P"/><!-- LATIN CAPITAL LETTER P -->
      <map code="0x51" name="Q"/><!-- LATIN CAPITAL LETTER Q -->
      <map code="0x52" name="R"/><!-- LATIN CAPITAL LETTER R -->
      <map code="0x53" name="S"/><!-- LATIN CAPITAL LETTER S -->
      <map code="0x54" name="T"/><!-- LATIN CAPITAL LETTER T -->
      <map code="0x55" name="U"/><!-- LATIN CAPITAL LETTER U -->
      <map code="0x56" name="V"/><!-- LATIN CAPITAL LETTER V -->
      <map code="0x57" name="W"/><!-- LATIN CAPITAL LETTER W -->
      <map code="0x58" name="X"/><!-- LATIN CAPITAL LETTER X -->
      <map code="0x59" name="Y"/><!-- LATIN CAPITAL LETTER Y -->
      <map code="0x5a" name="Z"/><!-- LATIN CAPITAL LETTER Z -->
      <map code="0x5b" name="bracketleft"/><!-- LEFT SQUARE BRACKET -->
      <map code="0x5c" name="backslash"/><!-- REVERSE SOLIDUS -->
      <map code="0x5d" name="bracketright"/><!-- RIGHT SQUARE BRACKET -->
      <map code="0x5e" name="asciicircum"/><!-- CIRCUMFLEX ACCENT -->
      <map code="0x5f" name="underscore"/><!-- LOW LINE -->
      <map code="0x60" name="grave"/><!-- GRAVE ACCENT -->
      <map code="0x61" name="a"/><!-- LATIN SMALL LETTER A -->
      <map code="0x62" name="b"/><!-- LATIN SMALL LETTER B -->
      <map code="0x63" name="c"/><!-- LATIN SMALL LETTER C -->
      <map code="0x64" name="d"/><!-- LATIN SMALL LETTER D -->
      <map code="0x65" name="e"/><!-- LATIN SMALL LETTER E -->
      <map code="0x66" name="f"/><!-- LATIN SMALL LETTER F -->
      <map code="0x67" name="g"/><!-- LATIN SMALL LETTER G -->
      <map code="0x68" name="h"/><!-- LATIN SMALL LETTER H -->
      <map code="0x69" name="i"/><!-- LATIN SMALL LETTER I -->
      <map code="0x6a" name="j"/><!-- LATIN SMALL LETTER J -->
      <map code="0x6b" name="k"/><!-- LATIN SMALL LETTER K -->
      <map code="0x6c" name="l"/><!-- LATIN SMALL LETTER L -->
      <map code="0x6d" name="m"/><!-- LATIN SMALL LETTER M -->
      <map code="0x6e" name="n"/><!-- LATIN SMALL LETTER N -->
      <map code="0x6f" name="o"/><!-- LATIN SMALL LETTER O -->
      <map code="0x70" name="p"/><!-- LATIN SMALL LETTER P -->
      <map code="0x71" name="q"/><!-- LATIN SMALL LETTER Q -->
      <map code="0x72" name="r"/><!-- LATIN SMALL LETTER R -->
      <map code="0x73" name="s"/><!-- LATIN SMALL LETTER S -->
      <map code="0x74" name="t"/><!-- LATIN SMALL LETTER T -->
      <map code="0x75" name="u"/><!-- LATIN SMALL LETTER U -->
      <map code="0x76" name="v"/><!-- LATIN SMALL LETTER V -->
      <map code="0x77" name="w"/><!-- LATIN SMALL LETTER W -->
      <map code="0x78" name="x"/><!-- LATIN SMALL LETTER X -->
      <map code="0x79" name="y"/><!-- LATIN SMALL LETTER Y -->
      <map code="0x7a" name="z"/><!-- LATIN SMALL LETTER Z -->
      <map code="0x7b" name="braceleft"/><!-- LEFT CURLY BRACKET -->
      <map code="0x7c" name="bar"/><!-- VERTICAL LINE -->
      <map code="0x7d" name="braceright"/><!-- RIGHT CURLY BRACKET -->
      <map code="0x7e" name="asciitilde"/><!-- TILDE -->
      <map code="0xa0" name="space"/><!-- NO-BREAK SPACE -->
      <map code="0xa2" name="cent"/><!-- CENT SIGN -->
      <map code="0xa3" name="sterling"/><!-- POUND SIGN -->
      <map code="0xa4" name="currency"/><!-- CURRENCY SIGN -->
      <map code="0xa5" name="yen"/><!-- YEN SIGN -->
      <map code="0xa7" name="section"/><!-- SECTION SIGN -->
      <map code="0xa9" name="copyright"/><!-- COPYRIGHT SIGN -->
      <map code="0xab" name="guillemotleft"/><!-- LEFT-POINTING DOUBLE ANGLE QUOTATION MARK -->
      <map code="0xbb" name="guillemotright"/><!-- RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK -->
      <map code="0xd7" name="multiply"/><!-- MULTIPLICATION SIGN -->
      <map code="0xf7" name="divide"/><!-- DIVISION SIGN -->
      <map code="0x131" name="dotlessi"/><!-- LATIN SMALL LETTER DOTLESS I -->
      <map code="0x237" name="uni0237"/><!-- LATIN SMALL LETTER DOTLESS J -->
      <map code="0x307" name="uni0307"/><!-- COMBINING DOT ABOVE -->
      <map code="0x308" name="uni0308"/><!-- COMBINING DIAERESIS -->
      <map code="0x43d" name="uni043D"/><!-- CYRILLIC SMALL LETTER EN -->
      <map code="0x43e" name="uni043E"/><!-- CYRILLIC SMALL LETTER O -->
      <map code="0x2002" name="uni2002"/><!-- EN SPACE -->
      <map code="0x2003" name="uni2003"/><!-- EM SPACE -->
      <map code="0x2013" name="endash"/><!-- EN DASH -->
      <map code="0x2014" name="emdash"/><!-- EM DASH -->
      <map code="0x2018" name="quoteleft"/><!-- LEFT SINGLE QUOTATION MARK -->
      <map code="0x2019" name="quoteright"/><!-- RIGHT SINGLE QUOTATION MARK -->
      <map code="0x201a" name="quotesinglbase"/><!-- SINGLE LOW-9 QUOTATION MARK -->
      <map code="0x201c" name="quotedblleft"/><!-- LEFT DOUBLE QUOTATION MARK -->
      <map code="0x201d" name="quotedblright"/><!-- RIGHT DOUBLE QUOTATION MARK -->
      <map code="0x201e" name="quotedblbase"/><!-- DOUBLE LOW-9 QUOTATION MARK -->
      <map code="0x2022" name="bullet"/><!-- BULLET -->
      <map code="0x2026" name="ellipsis"/><!-- HORIZONTAL ELLIPSIS -->
      <map code="0x20ac" name="Euro"/><!-- EURO SIGN -->
      <map code="0x20bd" name="uni20BD"/><!-- RUBLE SIGN -->
      <map code="0x2212" name="minus"/><!-- MINUS SIGN -->
      <map code="0x2248" name="approxequal"/><!-- ALMOST EQUAL TO -->
      <map code="0x2260" name="notequal"/><!-- NOT EQUAL TO -->
    </cmap_format_4>
  </cmap>

  <fpgm>
    <assembly>
      PUSHB[ ]	/* 1 value pushed */
      0
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        NEQ[ ]	/* NotEqual */
        IF[ ]	/* If */
          RCVT[ ]	/* ReadCVT */
        EIF[ ]	/* EndIf */
        DUP[ ]	/* DuplicateTopStack */
        DUP[ ]	/* DuplicateTopStack */
        MPPEM[ ]	/* MeasurePixelPerEm */
        PUSHW[ ]	/* 1 value pushed */
        14
        LTEQ[ ]	/* LessThenOrEqual */
        MPPEM[ ]	/* MeasurePixelPerEm */
        PUSHB[ ]	/* 1 value pushed */
        6
        GTEQ[ ]	/* GreaterThanOrEqual */
        AND[ ]	/* LogicalAnd */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          52
        ELSE[ ]	/* Else */
          PUSHB[ ]	/* 1 value pushed */
          40
        EIF[ ]	/* EndIf */
        ADD[ ]	/* Add */
        FLOOR[ ]	/* Floor */
        DUP[ ]	/* DuplicateTopStack */
        ROLL[ ]	/* RollTopThreeStack */
        NEQ[ ]	/* NotEqual */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          2
          CINDEX[ ]	/* CopyXToTopStack */
          SUB[ ]	/* Subtract */
          PUSHW[ ]	/* 2 values pushed */
          2048 2048
          MUL[ ]	/* Multiply */
          MUL[ ]	/* Multiply */
          SWAP[ ]	/* SwapTopStack */
          DIV[ ]	/* Divide */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
          PUSHB[ ]	/* 1 value pushed */
          0
        EIF[ ]	/* EndIf */
        PUSHB[ ]	/* 1 value pushed */
        0
        RS[ ]	/* ReadStore */
        SWAP[ ]	/* SwapTopStack */
        WCVTP[ ]	/* WriteCVTInPixels */
        PUSHB[ ]	/* 3 values pushed */
        0 1 0
        RS[ ]	/* ReadStore */
        ADD[ ]	/* Add */
        WS[ ]	/* WriteStore */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      1
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        32
        ADD[ ]	/* Add */
        FLOOR[ ]	/* Floor */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      2
      FDEF[ ]	/* FunctionDefinition */
        SWAP[ ]	/* SwapTopStack */
        POP[ ]	/* PopTopStack */
        SWAP[ ]	/* SwapTopStack */
        POP[ ]	/* PopTopStack */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      3
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        ABS[ ]	/* Absolute */
        PUSHB[ ]	/* 4 values pushed */
        3 20 21 0
        WS[ ]	/* WriteStore */
        RS[ ]	/* ReadStore */
        PUSHB[ ]	/* 1 value pushed */
        19
        RS[ ]	/* ReadStore */
        DUP[ ]	/* DuplicateTopStack */
        ADD[ ]	/* Add */
        ADD[ ]	/* Add */
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 2 values pushed */
        2 20
        RS[ ]	/* ReadStore */
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 2 values pushed */
        37 3
        RS[ ]	/* ReadStore */
        PUSHB[ ]	/* 1 value pushed */
        2
        RS[ ]	/* ReadStore */
        EQ[ ]	/* Equal */
        JROT[ ]	/* JumpRelativeOnTrue */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        12
        SWAP[ ]	/* SwapTopStack */
        PUSHB[ ]	/* 1 value pushed */
        2
        RS[ ]	/* ReadStore */
        RS[ ]	/* ReadStore */
        SUB[ ]	/* Subtract */
        ABS[ ]	/* Absolute */
        PUSHB[ ]	/* 1 value pushed */
        4
        LT[ ]	/* LessThan */
        JROT[ ]	/* JumpRelativeOnTrue */
        PUSHB[ ]	/* 3 values pushed */
        2 2 2
        RS[ ]	/* ReadStore */
        ADD[ ]	/* Add */
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 1 value pushed */
        33
        NEG[ ]	/* Negate */
        JMPR[ ]	/* Jump */
        POP[ ]	/* PopTopStack */
        PUSHB[ ]	/* 1 value pushed */
        2
        RS[ ]	/* ReadStore */
        RS[ ]	/* ReadStore */
        PUSHB[ ]	/* 3 values pushed */
        14 21 1
        WS[ ]	/* WriteStore */
        JMPR[ ]	/* Jump */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        2
        RS[ ]	/* ReadStore */
        SWAP[ ]	/* SwapTopStack */
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 3 values pushed */
        19 1 19
        RS[ ]	/* ReadStore */
        ADD[ ]	/* Add */
        WS[ ]	/* WriteStore */
        SWAP[ ]	/* SwapTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          NEG[ ]	/* Negate */
        EIF[ ]	/* EndIf */
        PUSHB[ ]	/* 3 values pushed */
        22 1 2
        RS[ ]	/* ReadStore */
        ADD[ ]	/* Add */
        WS[ ]	/* WriteStore */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      4
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        3
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        21
        RS[ ]	/* ReadStore */
        IF[ ]	/* If */
          SWAP[ ]	/* SwapTopStack */
          POP[ ]	/* PopTopStack */
          SWAP[ ]	/* SwapTopStack */
          POP[ ]	/* PopTopStack */
          PUSHB[ ]	/* 1 value pushed */
          22
          RS[ ]	/* ReadStore */
          RS[ ]	/* ReadStore */
          SWAP[ ]	/* SwapTopStack */
          PUSHB[ ]	/* 1 value pushed */
          0
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NEG[ ]	/* Negate */
          EIF[ ]	/* EndIf */
        ELSE[ ]	/* Else */
          DUP[ ]	/* DuplicateTopStack */
          ABS[ ]	/* Absolute */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          192
          LT[ ]	/* LessThan */
          PUSHB[ ]	/* 1 value pushed */
          4
          MINDEX[ ]	/* MoveXToTopStack */
          AND[ ]	/* LogicalAnd */
          PUSHB[ ]	/* 3 values pushed */
          40 1 13
          RS[ ]	/* ReadStore */
          RCVT[ ]	/* ReadCVT */
          MUL[ ]	/* Multiply */
          RCVT[ ]	/* ReadCVT */
          PUSHB[ ]	/* 1 value pushed */
          6
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            PUSHB[ ]	/* 1 value pushed */
            3
            CINDEX[ ]	/* CopyXToTopStack */
          EIF[ ]	/* EndIf */
          GT[ ]	/* GreaterThan */
          OR[ ]	/* LogicalOr */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            SWAP[ ]	/* SwapTopStack */
            POP[ ]	/* PopTopStack */
          ELSE[ ]	/* Else */
            ROLL[ ]	/* RollTopThreeStack */
            IF[ ]	/* If */
              DUP[ ]	/* DuplicateTopStack */
              PUSHB[ ]	/* 1 value pushed */
              80
              LT[ ]	/* LessThan */
              IF[ ]	/* If */
                POP[ ]	/* PopTopStack */
                PUSHB[ ]	/* 1 value pushed */
                64
              EIF[ ]	/* EndIf */
            ELSE[ ]	/* Else */
              DUP[ ]	/* DuplicateTopStack */
              PUSHB[ ]	/* 1 value pushed */
              56
              LT[ ]	/* LessThan */
              IF[ ]	/* If */
                POP[ ]	/* PopTopStack */
                PUSHB[ ]	/* 1 value pushed */
                56
              EIF[ ]	/* EndIf */
            EIF[ ]	/* EndIf */
            DUP[ ]	/* DuplicateTopStack */
            PUSHB[ ]	/* 2 values pushed */
            1 13
            RS[ ]	/* ReadStore */
            RCVT[ ]	/* ReadCVT */
            MUL[ ]	/* Multiply */
            RCVT[ ]	/* ReadCVT */
            SUB[ ]	/* Subtract */
            ABS[ ]	/* Absolute */
            PUSHB[ ]	/* 1 value pushed */
            40
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              POP[ ]	/* PopTopStack */
              PUSHB[ ]	/* 2 values pushed */
              1 13
              RS[ ]	/* ReadStore */
              RCVT[ ]	/* ReadCVT */
              MUL[ ]	/* Multiply */
              RCVT[ ]	/* ReadCVT */
              DUP[ ]	/* DuplicateTopStack */
              PUSHB[ ]	/* 1 value pushed */
              48
              LT[ ]	/* LessThan */
              IF[ ]	/* If */
                POP[ ]	/* PopTopStack */
                PUSHB[ ]	/* 1 value pushed */
                48
              EIF[ ]	/* EndIf */
            ELSE[ ]	/* Else */
              DUP[ ]	/* DuplicateTopStack */
              PUSHB[ ]	/* 1 value pushed */
              192
              LT[ ]	/* LessThan */
              IF[ ]	/* If */
                DUP[ ]	/* DuplicateTopStack */
                FLOOR[ ]	/* Floor */
                DUP[ ]	/* DuplicateTopStack */
                ROLL[ ]	/* RollTopThreeStack */
                ROLL[ ]	/* RollTopThreeStack */
                SUB[ ]	/* Subtract */
                DUP[ ]	/* DuplicateTopStack */
                PUSHB[ ]	/* 1 value pushed */
                10
                LT[ ]	/* LessThan */
                IF[ ]	/* If */
                  ADD[ ]	/* Add */
                ELSE[ ]	/* Else */
                  DUP[ ]	/* DuplicateTopStack */
                  PUSHB[ ]	/* 1 value pushed */
                  32
                  LT[ ]	/* LessThan */
                  IF[ ]	/* If */
                    POP[ ]	/* PopTopStack */
                    PUSHB[ ]	/* 1 value pushed */
                    10
                    ADD[ ]	/* Add */
                  ELSE[ ]	/* Else */
                    DUP[ ]	/* DuplicateTopStack */
                    PUSHB[ ]	/* 1 value pushed */
                    54
                    LT[ ]	/* LessThan */
                    IF[ ]	/* If */
                      POP[ ]	/* PopTopStack */
                      PUSHB[ ]	/* 1 value pushed */
                      54
                      ADD[ ]	/* Add */
                    ELSE[ ]	/* Else */
                      ADD[ ]	/* Add */
                    EIF[ ]	/* EndIf */
                  EIF[ ]	/* EndIf */
                EIF[ ]	/* EndIf */
              ELSE[ ]	/* Else */
                PUSHB[ ]	/* 1 value pushed */
                2
                CINDEX[ ]	/* CopyXToTopStack */
                PUSHB[ ]	/* 1 value pushed */
                12
                RS[ ]	/* ReadStore */
                MUL[ ]	/* Multiply */
                PUSHB[ ]	/* 1 value pushed */
                0
                GT[ ]	/* GreaterThan */
                IF[ ]	/* If */
                  PUSHB[ ]	/* 1 value pushed */
                  0
                  MPPEM[ ]	/* MeasurePixelPerEm */
                  PUSHB[ ]	/* 1 value pushed */
                  10
                  LT[ ]	/* LessThan */
                  IF[ ]	/* If */
                    POP[ ]	/* PopTopStack */
                    PUSHB[ ]	/* 1 value pushed */
                    12
                    RS[ ]	/* ReadStore */
                  ELSE[ ]	/* Else */
                    MPPEM[ ]	/* MeasurePixelPerEm */
                    PUSHB[ ]	/* 1 value pushed */
                    30
                    LT[ ]	/* LessThan */
                    IF[ ]	/* If */
                      POP[ ]	/* PopTopStack */
                      PUSHB[ ]	/* 1 value pushed */
                      30
                      MPPEM[ ]	/* MeasurePixelPerEm */
                      SUB[ ]	/* Subtract */
                      PUSHW[ ]	/* 1 value pushed */
                      4096
                      MUL[ ]	/* Multiply */
                      PUSHB[ ]	/* 1 value pushed */
                      12
                      RS[ ]	/* ReadStore */
                      MUL[ ]	/* Multiply */
                      PUSHW[ ]	/* 1 value pushed */
                      1280
                      DIV[ ]	/* Divide */
                    EIF[ ]	/* EndIf */
                  EIF[ ]	/* EndIf */
                  ABS[ ]	/* Absolute */
                  SUB[ ]	/* Subtract */
                EIF[ ]	/* EndIf */
                PUSHB[ ]	/* 1 value pushed */
                1
                CALL[ ]	/* CallFunction */
              EIF[ ]	/* EndIf */
            EIF[ ]	/* EndIf */
            SWAP[ ]	/* SwapTopStack */
            PUSHB[ ]	/* 1 value pushed */
            0
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NEG[ ]	/* Negate */
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          DUP[ ]	/* DuplicateTopStack */
          ABS[ ]	/* Absolute */
          PUSHB[ ]	/* 1 value pushed */
          22
          RS[ ]	/* ReadStore */
          SWAP[ ]	/* SwapTopStack */
          WS[ ]	/* WriteStore */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      5
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        RCVT[ ]	/* ReadCVT */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        SUB[ ]	/* Subtract */
        ABS[ ]	/* Absolute */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        7
        RS[ ]	/* ReadStore */
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          7
          SWAP[ ]	/* SwapTopStack */
          WS[ ]	/* WriteStore */
          PUSHB[ ]	/* 1 value pushed */
          8
          SWAP[ ]	/* SwapTopStack */
          WS[ ]	/* WriteStore */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
        PUSHB[ ]	/* 1 value pushed */
        1
        ADD[ ]	/* Add */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      6
      FDEF[ ]	/* FunctionDefinition */
        SWAP[ ]	/* SwapTopStack */
        POP[ ]	/* PopTopStack */
        SWAP[ ]	/* SwapTopStack */
        POP[ ]	/* PopTopStack */
        PUSHB[ ]	/* 1 value pushed */
        3
        CALL[ ]	/* CallFunction */
        DUP[ ]	/* DuplicateTopStack */
        ABS[ ]	/* Absolute */
        PUSHB[ ]	/* 2 values pushed */
        7 98
        WS[ ]	/* WriteStore */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        8
        SWAP[ ]	/* SwapTopStack */
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 1 value pushed */
        6
        RCVT[ ]	/* ReadCVT */
        IF[ ]	/* If */
        ELSE[ ]	/* Else */
          PUSHB[ ]	/* 2 values pushed */
          1 13
          RS[ ]	/* ReadStore */
          RCVT[ ]	/* ReadCVT */
          MUL[ ]	/* Multiply */
          PUSHB[ ]	/* 2 values pushed */
          1 13
          RS[ ]	/* ReadStore */
          PUSHB[ ]	/* 1 value pushed */
          2
          ADD[ ]	/* Add */
          RCVT[ ]	/* ReadCVT */
          MUL[ ]	/* Multiply */
          PUSHB[ ]	/* 1 value pushed */
          5
          LOOPCALL[ ]	/* LoopAndCallFunction */
          POP[ ]	/* PopTopStack */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          8
          RS[ ]	/* ReadStore */
          DUP[ ]	/* DuplicateTopStack */
          ROLL[ ]	/* RollTopThreeStack */
          DUP[ ]	/* DuplicateTopStack */
          ROLL[ ]	/* RollTopThreeStack */
          PUSHB[ ]	/* 1 value pushed */
          1
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 2 values pushed */
          48 5
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          4
          MINDEX[ ]	/* MoveXToTopStack */
          LTEQ[ ]	/* LessThenOrEqual */
          IF[ ]	/* If */
            ADD[ ]	/* Add */
            LT[ ]	/* LessThan */
          ELSE[ ]	/* Else */
            SUB[ ]	/* Subtract */
            GT[ ]	/* GreaterThan */
          EIF[ ]	/* EndIf */
          IF[ ]	/* If */
            SWAP[ ]	/* SwapTopStack */
          EIF[ ]	/* EndIf */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        64
        GTEQ[ ]	/* GreaterThanOrEqual */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          1
          CALL[ ]	/* CallFunction */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          PUSHB[ ]	/* 1 value pushed */
          64
        EIF[ ]	/* EndIf */
        SWAP[ ]	/* SwapTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          NEG[ ]	/* Negate */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      7
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        9
        RS[ ]	/* ReadStore */
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 3 values pushed */
        0 2 0
        RS[ ]	/* ReadStore */
        ADD[ ]	/* Add */
        WS[ ]	/* WriteStore */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      8
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        9
        SWAP[ ]	/* SwapTopStack */
        WS[ ]	/* WriteStore */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        SWAP[ ]	/* SwapTopStack */
        WS[ ]	/* WriteStore */
        SUB[ ]	/* Subtract */
        PUSHB[ ]	/* 1 value pushed */
        2
        DIV[ ]	/* Divide */
        FLOOR[ ]	/* Floor */
        PUSHB[ ]	/* 1 value pushed */
        1
        MUL[ ]	/* Multiply */
        PUSHB[ ]	/* 1 value pushed */
        1
        ADD[ ]	/* Add */
        PUSHB[ ]	/* 1 value pushed */
        7
        LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      9
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        DUP[ ]	/* DuplicateTopStack */
        RCVT[ ]	/* ReadCVT */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        14
        RS[ ]	/* ReadStore */
        MUL[ ]	/* Multiply */
        PUSHW[ ]	/* 1 value pushed */
        1024
        DIV[ ]	/* Divide */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          64
          ADD[ ]	/* Add */
        EIF[ ]	/* EndIf */
        FLOOR[ ]	/* Floor */
        PUSHB[ ]	/* 1 value pushed */
        1
        MUL[ ]	/* Multiply */
        ADD[ ]	/* Add */
        WCVTP[ ]	/* WriteCVTInPixels */
        PUSHB[ ]	/* 1 value pushed */
        1
        ADD[ ]	/* Add */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      10
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 3 values pushed */
        9 14 0
        RS[ ]	/* ReadStore */
        RCVT[ ]	/* ReadCVT */
        WS[ ]	/* WriteStore */
        LOOPCALL[ ]	/* LoopAndCallFunction */
        POP[ ]	/* PopTopStack */
        PUSHB[ ]	/* 3 values pushed */
        0 1 0
        RS[ ]	/* ReadStore */
        ADD[ ]	/* Add */
        WS[ ]	/* WriteStore */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      11
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        0
        RS[ ]	/* ReadStore */
        SWAP[ ]	/* SwapTopStack */
        WCVTP[ ]	/* WriteCVTInPixels */
        PUSHB[ ]	/* 3 values pushed */
        0 1 0
        RS[ ]	/* ReadStore */
        ADD[ ]	/* Add */
        WS[ ]	/* WriteStore */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      12
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        DUP[ ]	/* DuplicateTopStack */
        RCVT[ ]	/* ReadCVT */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        1
        CALL[ ]	/* CallFunction */
        SWAP[ ]	/* SwapTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        RS[ ]	/* ReadStore */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        ADD[ ]	/* Add */
        DUP[ ]	/* DuplicateTopStack */
        RCVT[ ]	/* ReadCVT */
        ROLL[ ]	/* RollTopThreeStack */
        SWAP[ ]	/* SwapTopStack */
        SUB[ ]	/* Subtract */
        DUP[ ]	/* DuplicateTopStack */
        ABS[ ]	/* Absolute */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        32
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          PUSHB[ ]	/* 1 value pushed */
          0
        ELSE[ ]	/* Else */
          PUSHB[ ]	/* 1 value pushed */
          48
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            32
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 1 value pushed */
            64
          EIF[ ]	/* EndIf */
        EIF[ ]	/* EndIf */
        SWAP[ ]	/* SwapTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          NEG[ ]	/* Negate */
        EIF[ ]	/* EndIf */
        PUSHB[ ]	/* 1 value pushed */
        3
        CINDEX[ ]	/* CopyXToTopStack */
        SWAP[ ]	/* SwapTopStack */
        SUB[ ]	/* Subtract */
        WCVTP[ ]	/* WriteCVTInPixels */
        WCVTP[ ]	/* WriteCVTInPixels */
        PUSHB[ ]	/* 1 value pushed */
        1
        ADD[ ]	/* Add */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      13
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        DUP[ ]	/* DuplicateTopStack */
        RCVT[ ]	/* ReadCVT */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        1
        CALL[ ]	/* CallFunction */
        SWAP[ ]	/* SwapTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        RS[ ]	/* ReadStore */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        ADD[ ]	/* Add */
        DUP[ ]	/* DuplicateTopStack */
        RCVT[ ]	/* ReadCVT */
        ROLL[ ]	/* RollTopThreeStack */
        SWAP[ ]	/* SwapTopStack */
        SUB[ ]	/* Subtract */
        DUP[ ]	/* DuplicateTopStack */
        ABS[ ]	/* Absolute */
        PUSHB[ ]	/* 1 value pushed */
        36
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          0
        ELSE[ ]	/* Else */
          PUSHB[ ]	/* 1 value pushed */
          64
        EIF[ ]	/* EndIf */
        SWAP[ ]	/* SwapTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          NEG[ ]	/* Negate */
        EIF[ ]	/* EndIf */
        PUSHB[ ]	/* 1 value pushed */
        3
        CINDEX[ ]	/* CopyXToTopStack */
        SWAP[ ]	/* SwapTopStack */
        SUB[ ]	/* Subtract */
        WCVTP[ ]	/* WriteCVTInPixels */
        WCVTP[ ]	/* WriteCVTInPixels */
        PUSHB[ ]	/* 1 value pushed */
        1
        ADD[ ]	/* Add */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      14
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        SWAP[ ]	/* SwapTopStack */
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 4 values pushed */
        13 12 0 3
        RCVT[ ]	/* ReadCVT */
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
        ELSE[ ]	/* Else */
          SWAP[ ]	/* SwapTopStack */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
        LOOPCALL[ ]	/* LoopAndCallFunction */
        POP[ ]	/* PopTopStack */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      15
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        2 2
        RCVT[ ]	/* ReadCVT */
        PUSHB[ ]	/* 1 value pushed */
        100
        SUB[ ]	/* Subtract */
        WCVTP[ ]	/* WriteCVTInPixels */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      16
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        1
        ADD[ ]	/* Add */
        DUP[ ]	/* DuplicateTopStack */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        15
        RS[ ]	/* ReadStore */
        MD[1]	/* MeasureDistance */
        PUSHB[ ]	/* 1 value pushed */
        0
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          15
          SWAP[ ]	/* SwapTopStack */
          WS[ ]	/* WriteStore */
        EIF[ ]	/* EndIf */
        PUSHB[ ]	/* 1 value pushed */
        16
        RS[ ]	/* ReadStore */
        MD[1]	/* MeasureDistance */
        PUSHB[ ]	/* 1 value pushed */
        0
        GT[ ]	/* GreaterThan */
        IF[ ]	/* If */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          16
          SWAP[ ]	/* SwapTopStack */
          WS[ ]	/* WriteStore */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      17
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        16
        DIV[ ]	/* Divide */
        FLOOR[ ]	/* Floor */
        PUSHB[ ]	/* 1 value pushed */
        1
        MUL[ ]	/* Multiply */
        DUP[ ]	/* DuplicateTopStack */
        PUSHW[ ]	/* 1 value pushed */
        1024
        MUL[ ]	/* Multiply */
        ROLL[ ]	/* RollTopThreeStack */
        SWAP[ ]	/* SwapTopStack */
        SUB[ ]	/* Subtract */
        PUSHB[ ]	/* 1 value pushed */
        17
        RS[ ]	/* ReadStore */
        ADD[ ]	/* Add */
        DUP[ ]	/* DuplicateTopStack */
        ROLL[ ]	/* RollTopThreeStack */
        ADD[ ]	/* Add */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        17
        SWAP[ ]	/* SwapTopStack */
        WS[ ]	/* WriteStore */
        SWAP[ ]	/* SwapTopStack */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      18
      FDEF[ ]	/* FunctionDefinition */
        MPPEM[ ]	/* MeasurePixelPerEm */
        EQ[ ]	/* Equal */
        IF[ ]	/* If */
          PUSHB[ ]	/* 2 values pushed */
          4 100
          WCVTP[ ]	/* WriteCVTInPixels */
        EIF[ ]	/* EndIf */
        DEPTH[ ]	/* GetDepthStack */
        PUSHB[ ]	/* 1 value pushed */
        13
        NEG[ ]	/* Negate */
        SWAP[ ]	/* SwapTopStack */
        JROT[ ]	/* JumpRelativeOnTrue */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      19
      FDEF[ ]	/* FunctionDefinition */
        MPPEM[ ]	/* MeasurePixelPerEm */
        LTEQ[ ]	/* LessThenOrEqual */
        IF[ ]	/* If */
          MPPEM[ ]	/* MeasurePixelPerEm */
          GTEQ[ ]	/* GreaterThanOrEqual */
          IF[ ]	/* If */
            PUSHB[ ]	/* 2 values pushed */
            4 100
            WCVTP[ ]	/* WriteCVTInPixels */
          EIF[ ]	/* EndIf */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
        DEPTH[ ]	/* GetDepthStack */
        PUSHB[ ]	/* 1 value pushed */
        19
        NEG[ ]	/* Negate */
        SWAP[ ]	/* SwapTopStack */
        JROT[ ]	/* JumpRelativeOnTrue */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      20
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        0 18
        RS[ ]	/* ReadStore */
        NEQ[ ]	/* NotEqual */
        IF[ ]	/* If */
          PUSHB[ ]	/* 2 values pushed */
          18 18
          RS[ ]	/* ReadStore */
          PUSHB[ ]	/* 1 value pushed */
          1
          SUB[ ]	/* Subtract */
          WS[ ]	/* WriteStore */
          PUSHB[ ]	/* 1 value pushed */
          17
          CALL[ ]	/* CallFunction */
        EIF[ ]	/* EndIf */
        PUSHB[ ]	/* 1 value pushed */
        0
        RS[ ]	/* ReadStore */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 2 values pushed */
        15 2
        CINDEX[ ]	/* CopyXToTopStack */
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 2 values pushed */
        16 2
        CINDEX[ ]	/* CopyXToTopStack */
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 1 value pushed */
        1
        SZPS[ ]	/* SetZonePointerS */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        3
        CINDEX[ ]	/* CopyXToTopStack */
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          PUSHB[ ]	/* 2 values pushed */
          1 0
          RS[ ]	/* ReadStore */
          ADD[ ]	/* Add */
          PUSHB[ ]	/* 1 value pushed */
          4
          CINDEX[ ]	/* CopyXToTopStack */
          WS[ ]	/* WriteStore */
          ROLL[ ]	/* RollTopThreeStack */
          ROLL[ ]	/* RollTopThreeStack */
          DUP[ ]	/* DuplicateTopStack */
          ROLL[ ]	/* RollTopThreeStack */
          SWAP[ ]	/* SwapTopStack */
          SUB[ ]	/* Subtract */
          PUSHB[ ]	/* 1 value pushed */
          16
          LOOPCALL[ ]	/* LoopAndCallFunction */
          POP[ ]	/* PopTopStack */
          SWAP[ ]	/* SwapTopStack */
          PUSHB[ ]	/* 1 value pushed */
          1
          SUB[ ]	/* Subtract */
          DUP[ ]	/* DuplicateTopStack */
          ROLL[ ]	/* RollTopThreeStack */
          SWAP[ ]	/* SwapTopStack */
          SUB[ ]	/* Subtract */
          PUSHB[ ]	/* 1 value pushed */
          16
          LOOPCALL[ ]	/* LoopAndCallFunction */
          POP[ ]	/* PopTopStack */
        ELSE[ ]	/* Else */
          PUSHB[ ]	/* 2 values pushed */
          1 0
          RS[ ]	/* ReadStore */
          ADD[ ]	/* Add */
          PUSHB[ ]	/* 1 value pushed */
          2
          CINDEX[ ]	/* CopyXToTopStack */
          WS[ ]	/* WriteStore */
          PUSHB[ ]	/* 1 value pushed */
          2
          CINDEX[ ]	/* CopyXToTopStack */
          SUB[ ]	/* Subtract */
          PUSHB[ ]	/* 1 value pushed */
          16
          LOOPCALL[ ]	/* LoopAndCallFunction */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
        PUSHB[ ]	/* 1 value pushed */
        15
        RS[ ]	/* ReadStore */
        GC[1]	/* GetCoordOnPVector */
        PUSHB[ ]	/* 1 value pushed */
        16
        RS[ ]	/* ReadStore */
        GC[1]	/* GetCoordOnPVector */
        ADD[ ]	/* Add */
        PUSHB[ ]	/* 1 value pushed */
        2
        DIV[ ]	/* Divide */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          64
          ADD[ ]	/* Add */
        EIF[ ]	/* EndIf */
        FLOOR[ ]	/* Floor */
        PUSHB[ ]	/* 1 value pushed */
        1
        MUL[ ]	/* Multiply */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        14
        RS[ ]	/* ReadStore */
        MUL[ ]	/* Multiply */
        PUSHW[ ]	/* 1 value pushed */
        1024
        DIV[ ]	/* Divide */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          64
          ADD[ ]	/* Add */
        EIF[ ]	/* EndIf */
        FLOOR[ ]	/* Floor */
        PUSHB[ ]	/* 1 value pushed */
        1
        MUL[ ]	/* Multiply */
        ADD[ ]	/* Add */
        PUSHB[ ]	/* 2 values pushed */
        0 0
        SZP0[ ]	/* SetZonePointer0 */
        SWAP[ ]	/* SwapTopStack */
        WCVTP[ ]	/* WriteCVTInPixels */
        PUSHB[ ]	/* 1 value pushed */
        1
        RS[ ]	/* ReadStore */
        PUSHB[ ]	/* 1 value pushed */
        0
        MIAP[0]	/* MoveIndirectAbsPt */
        PUSHB[ ]	/* 3 values pushed */
        1 1 1
        RS[ ]	/* ReadStore */
        ADD[ ]	/* Add */
        WS[ ]	/* WriteStore */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      21
      FDEF[ ]	/* FunctionDefinition */
        SVTCA[0]	/* SetFPVectorToAxis */
        PUSHB[ ]	/* 2 values pushed */
        0 2
        RCVT[ ]	/* ReadCVT */
        EQ[ ]	/* Equal */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          18
          SWAP[ ]	/* SwapTopStack */
          WS[ ]	/* WriteStore */
          DUP[ ]	/* DuplicateTopStack */
          RCVT[ ]	/* ReadCVT */
          PUSHB[ ]	/* 1 value pushed */
          14
          SWAP[ ]	/* SwapTopStack */
          WS[ ]	/* WriteStore */
          PUSHB[ ]	/* 1 value pushed */
          13
          SWAP[ ]	/* SwapTopStack */
          PUSHB[ ]	/* 1 value pushed */
          2
          ADD[ ]	/* Add */
          WS[ ]	/* WriteStore */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          20
          SWAP[ ]	/* SwapTopStack */
          WS[ ]	/* WriteStore */
          DUP[ ]	/* DuplicateTopStack */
          ADD[ ]	/* Add */
          PUSHB[ ]	/* 1 value pushed */
          1
          SUB[ ]	/* Subtract */
          PUSHB[ ]	/* 8 values pushed */
          24 24 1 0 17 0 19 0
          WS[ ]	/* WriteStore */
          WS[ ]	/* WriteStore */
          WS[ ]	/* WriteStore */
          ROLL[ ]	/* RollTopThreeStack */
          ADD[ ]	/* Add */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          20
          RS[ ]	/* ReadStore */
          ADD[ ]	/* Add */
          PUSHB[ ]	/* 1 value pushed */
          20
          SWAP[ ]	/* SwapTopStack */
          WS[ ]	/* WriteStore */
          PUSHB[ ]	/* 2 values pushed */
          20 8
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 1 value pushed */
          139
          CALL[ ]	/* CallFunction */
        ELSE[ ]	/* Else */
          CLEAR[ ]	/* ClearStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      22
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        0 21
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      23
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        1 21
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      24
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        2 21
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      25
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        3 21
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      26
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        4 21
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      27
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        5 21
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      28
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        6 21
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      29
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        7 21
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      30
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        8 21
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      31
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        9 21
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      43
      FDEF[ ]	/* FunctionDefinition */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        16
        DIV[ ]	/* Divide */
        FLOOR[ ]	/* Floor */
        PUSHB[ ]	/* 1 value pushed */
        1
        MUL[ ]	/* Multiply */
        PUSHB[ ]	/* 1 value pushed */
        6
        ADD[ ]	/* Add */
        MPPEM[ ]	/* MeasurePixelPerEm */
        EQ[ ]	/* Equal */
        IF[ ]	/* If */
          SWAP[ ]	/* SwapTopStack */
          DUP[ ]	/* DuplicateTopStack */
          MDAP[0]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          1
          DELTAP1[ ]	/* DeltaExceptionP1 */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      44
      FDEF[ ]	/* FunctionDefinition */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        16
        DIV[ ]	/* Divide */
        FLOOR[ ]	/* Floor */
        PUSHB[ ]	/* 1 value pushed */
        1
        MUL[ ]	/* Multiply */
        PUSHB[ ]	/* 1 value pushed */
        22
        ADD[ ]	/* Add */
        MPPEM[ ]	/* MeasurePixelPerEm */
        EQ[ ]	/* Equal */
        IF[ ]	/* If */
          SWAP[ ]	/* SwapTopStack */
          DUP[ ]	/* DuplicateTopStack */
          MDAP[0]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          1
          DELTAP2[ ]	/* DeltaExceptionP2 */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      45
      FDEF[ ]	/* FunctionDefinition */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        16
        DIV[ ]	/* Divide */
        FLOOR[ ]	/* Floor */
        PUSHB[ ]	/* 1 value pushed */
        1
        MUL[ ]	/* Multiply */
        PUSHB[ ]	/* 1 value pushed */
        38
        ADD[ ]	/* Add */
        MPPEM[ ]	/* MeasurePixelPerEm */
        EQ[ ]	/* Equal */
        IF[ ]	/* If */
          SWAP[ ]	/* SwapTopStack */
          DUP[ ]	/* DuplicateTopStack */
          MDAP[0]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          1
          DELTAP3[ ]	/* DeltaExceptionP3 */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      32
      FDEF[ ]	/* FunctionDefinition */
        SVTCA[0]	/* SetFPVectorToAxis */
        PUSHB[ ]	/* 1 value pushed */
        15
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 2 values pushed */
        0 2
        RCVT[ ]	/* ReadCVT */
        EQ[ ]	/* Equal */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          18
          SWAP[ ]	/* SwapTopStack */
          WS[ ]	/* WriteStore */
          DUP[ ]	/* DuplicateTopStack */
          RCVT[ ]	/* ReadCVT */
          PUSHB[ ]	/* 1 value pushed */
          14
          SWAP[ ]	/* SwapTopStack */
          WS[ ]	/* WriteStore */
          PUSHB[ ]	/* 1 value pushed */
          13
          SWAP[ ]	/* SwapTopStack */
          PUSHB[ ]	/* 1 value pushed */
          2
          ADD[ ]	/* Add */
          WS[ ]	/* WriteStore */
          DUP[ ]	/* DuplicateTopStack */
          ADD[ ]	/* Add */
          PUSHB[ ]	/* 1 value pushed */
          1
          SUB[ ]	/* Subtract */
          PUSHB[ ]	/* 6 values pushed */
          24 24 1 0 17 0
          WS[ ]	/* WriteStore */
          WS[ ]	/* WriteStore */
          ROLL[ ]	/* RollTopThreeStack */
          ADD[ ]	/* Add */
          PUSHB[ ]	/* 2 values pushed */
          20 8
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 1 value pushed */
          139
          CALL[ ]	/* CallFunction */
        ELSE[ ]	/* Else */
          CLEAR[ ]	/* ClearStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      33
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        0 32
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      34
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        1 32
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      35
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        2 32
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      36
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        3 32
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      37
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        4 32
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      38
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        5 32
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      39
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        6 32
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      40
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        7 32
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      41
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        8 32
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      42
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        9 32
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      46
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        ALIGNRP[ ]	/* AlignRelativePt */
        PUSHB[ ]	/* 1 value pushed */
        1
        ADD[ ]	/* Add */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      47
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        ADD[ ]	/* Add */
        PUSHB[ ]	/* 1 value pushed */
        24
        ADD[ ]	/* Add */
        DUP[ ]	/* DuplicateTopStack */
        RS[ ]	/* ReadStore */
        SWAP[ ]	/* SwapTopStack */
        PUSHB[ ]	/* 1 value pushed */
        1
        ADD[ ]	/* Add */
        RS[ ]	/* ReadStore */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        SUB[ ]	/* Subtract */
        PUSHB[ ]	/* 1 value pushed */
        1
        ADD[ ]	/* Add */
        PUSHB[ ]	/* 1 value pushed */
        46
        LOOPCALL[ ]	/* LoopAndCallFunction */
        POP[ ]	/* PopTopStack */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      48
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        47
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        47
        LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      49
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        DUP[ ]	/* DuplicateTopStack */
        GC[1]	/* GetCoordOnPVector */
        DUP[ ]	/* DuplicateTopStack */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        14
        RS[ ]	/* ReadStore */
        MUL[ ]	/* Multiply */
        PUSHW[ ]	/* 1 value pushed */
        1024
        DIV[ ]	/* Divide */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          64
          ADD[ ]	/* Add */
        EIF[ ]	/* EndIf */
        FLOOR[ ]	/* Floor */
        PUSHB[ ]	/* 1 value pushed */
        1
        MUL[ ]	/* Multiply */
        ADD[ ]	/* Add */
        SWAP[ ]	/* SwapTopStack */
        SUB[ ]	/* Subtract */
        SHPIX[ ]	/* ShiftZoneByPixel */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        ROLL[ ]	/* RollTopThreeStack */
        NEQ[ ]	/* NotEqual */
        IF[ ]	/* If */
          DUP[ ]	/* DuplicateTopStack */
          GC[1]	/* GetCoordOnPVector */
          DUP[ ]	/* DuplicateTopStack */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          14
          RS[ ]	/* ReadStore */
          MUL[ ]	/* Multiply */
          PUSHW[ ]	/* 1 value pushed */
          1024
          DIV[ ]	/* Divide */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          0
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            64
            ADD[ ]	/* Add */
          EIF[ ]	/* EndIf */
          FLOOR[ ]	/* Floor */
          PUSHB[ ]	/* 1 value pushed */
          1
          MUL[ ]	/* Multiply */
          ADD[ ]	/* Add */
          SWAP[ ]	/* SwapTopStack */
          SUB[ ]	/* Subtract */
          SHPIX[ ]	/* ShiftZoneByPixel */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      50
      FDEF[ ]	/* FunctionDefinition */
        SVTCA[0]	/* SetFPVectorToAxis */
        PUSHB[ ]	/* 2 values pushed */
        0 2
        RCVT[ ]	/* ReadCVT */
        EQ[ ]	/* Equal */
        IF[ ]	/* If */
          PUSHB[ ]	/* 2 values pushed */
          14 6
          RCVT[ ]	/* ReadCVT */
          WS[ ]	/* WriteStore */
          PUSHB[ ]	/* 1 value pushed */
          1
          SZPS[ ]	/* SetZonePointerS */
          PUSHB[ ]	/* 1 value pushed */
          49
          LOOPCALL[ ]	/* LoopAndCallFunction */
          PUSHB[ ]	/* 2 values pushed */
          5 1
          SZP2[ ]	/* SetZonePointer2 */
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            IUP[0]	/* InterpolateUntPts */
          EIF[ ]	/* EndIf */
        ELSE[ ]	/* Else */
          CLEAR[ ]	/* ClearStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      51
      FDEF[ ]	/* FunctionDefinition */
        SVTCA[0]	/* SetFPVectorToAxis */
        PUSHB[ ]	/* 1 value pushed */
        15
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 2 values pushed */
        0 2
        RCVT[ ]	/* ReadCVT */
        EQ[ ]	/* Equal */
        IF[ ]	/* If */
          PUSHB[ ]	/* 2 values pushed */
          14 6
          RCVT[ ]	/* ReadCVT */
          WS[ ]	/* WriteStore */
          PUSHB[ ]	/* 1 value pushed */
          1
          SZPS[ ]	/* SetZonePointerS */
          PUSHB[ ]	/* 1 value pushed */
          49
          LOOPCALL[ ]	/* LoopAndCallFunction */
          PUSHB[ ]	/* 2 values pushed */
          5 1
          SZP2[ ]	/* SetZonePointer2 */
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            IUP[0]	/* InterpolateUntPts */
          EIF[ ]	/* EndIf */
        ELSE[ ]	/* Else */
          CLEAR[ ]	/* ClearStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      52
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        SHC[1]	/* ShiftContourByLastPt */
        PUSHB[ ]	/* 1 value pushed */
        1
        ADD[ ]	/* Add */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      53
      FDEF[ ]	/* FunctionDefinition */
        SVTCA[0]	/* SetFPVectorToAxis */
        PUSHB[ ]	/* 2 values pushed */
        14 6
        RCVT[ ]	/* ReadCVT */
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 1 value pushed */
        1
        RCVT[ ]	/* ReadCVT */
        MUL[ ]	/* Multiply */
        PUSHW[ ]	/* 1 value pushed */
        1024
        DIV[ ]	/* Divide */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          64
          ADD[ ]	/* Add */
        EIF[ ]	/* EndIf */
        FLOOR[ ]	/* Floor */
        PUSHB[ ]	/* 1 value pushed */
        1
        MUL[ ]	/* Multiply */
        PUSHB[ ]	/* 1 value pushed */
        1
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        14
        RS[ ]	/* ReadStore */
        MUL[ ]	/* Multiply */
        PUSHW[ ]	/* 1 value pushed */
        1024
        DIV[ ]	/* Divide */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          64
          ADD[ ]	/* Add */
        EIF[ ]	/* EndIf */
        FLOOR[ ]	/* Floor */
        PUSHB[ ]	/* 1 value pushed */
        1
        MUL[ ]	/* Multiply */
        PUSHB[ ]	/* 1 value pushed */
        1
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        0
        SZPS[ ]	/* SetZonePointerS */
        PUSHB[ ]	/* 5 values pushed */
        0 0 0 0 0
        WCVTP[ ]	/* WriteCVTInPixels */
        MIAP[0]	/* MoveIndirectAbsPt */
        SWAP[ ]	/* SwapTopStack */
        SHPIX[ ]	/* ShiftZoneByPixel */
        PUSHB[ ]	/* 2 values pushed */
        52 1
        SZP2[ ]	/* SetZonePointer2 */
        LOOPCALL[ ]	/* LoopAndCallFunction */
        POP[ ]	/* PopTopStack */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      54
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        ALIGNRP[ ]	/* AlignRelativePt */
        DUP[ ]	/* DuplicateTopStack */
        GC[1]	/* GetCoordOnPVector */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        14
        RS[ ]	/* ReadStore */
        MUL[ ]	/* Multiply */
        PUSHW[ ]	/* 1 value pushed */
        1024
        DIV[ ]	/* Divide */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          64
          ADD[ ]	/* Add */
        EIF[ ]	/* EndIf */
        FLOOR[ ]	/* Floor */
        PUSHB[ ]	/* 1 value pushed */
        1
        MUL[ ]	/* Multiply */
        ADD[ ]	/* Add */
        PUSHB[ ]	/* 1 value pushed */
        0
        RS[ ]	/* ReadStore */
        SUB[ ]	/* Subtract */
        SHPIX[ ]	/* ShiftZoneByPixel */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      55
      FDEF[ ]	/* FunctionDefinition */
        MDAP[0]	/* MoveDirectAbsPt */
        SLOOP[ ]	/* SetLoopVariable */
        ALIGNRP[ ]	/* AlignRelativePt */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      56
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        ALIGNRP[ ]	/* AlignRelativePt */
        DUP[ ]	/* DuplicateTopStack */
        GC[1]	/* GetCoordOnPVector */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        14
        RS[ ]	/* ReadStore */
        MUL[ ]	/* Multiply */
        PUSHW[ ]	/* 1 value pushed */
        1024
        DIV[ ]	/* Divide */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          64
          ADD[ ]	/* Add */
        EIF[ ]	/* EndIf */
        FLOOR[ ]	/* Floor */
        PUSHB[ ]	/* 1 value pushed */
        1
        MUL[ ]	/* Multiply */
        ADD[ ]	/* Add */
        PUSHB[ ]	/* 1 value pushed */
        0
        RS[ ]	/* ReadStore */
        SUB[ ]	/* Subtract */
        PUSHB[ ]	/* 1 value pushed */
        1
        RS[ ]	/* ReadStore */
        MUL[ ]	/* Multiply */
        SHPIX[ ]	/* ShiftZoneByPixel */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      57
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        2 0
        SZPS[ ]	/* SetZonePointerS */
        CINDEX[ ]	/* CopyXToTopStack */
        DUP[ ]	/* DuplicateTopStack */
        MDAP[0]	/* MoveDirectAbsPt */
        DUP[ ]	/* DuplicateTopStack */
        GC[1]	/* GetCoordOnPVector */
        PUSHB[ ]	/* 1 value pushed */
        0
        SWAP[ ]	/* SwapTopStack */
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        MD[0]	/* MeasureDistance */
        ROLL[ ]	/* RollTopThreeStack */
        ROLL[ ]	/* RollTopThreeStack */
        GC[1]	/* GetCoordOnPVector */
        SWAP[ ]	/* SwapTopStack */
        GC[1]	/* GetCoordOnPVector */
        SWAP[ ]	/* SwapTopStack */
        SUB[ ]	/* Subtract */
        DUP[ ]	/* DuplicateTopStack */
        IF[ ]	/* If */
          DIV[ ]	/* Divide */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
        PUSHB[ ]	/* 1 value pushed */
        1
        SWAP[ ]	/* SwapTopStack */
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 3 values pushed */
        56 1 1
        SZP2[ ]	/* SetZonePointer2 */
        SZP1[ ]	/* SetZonePointer1 */
        LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      58
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        0
        SZPS[ ]	/* SetZonePointerS */
        PUSHB[ ]	/* 1 value pushed */
        23
        SWAP[ ]	/* SwapTopStack */
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        GC[1]	/* GetCoordOnPVector */
        SWAP[ ]	/* SwapTopStack */
        GC[1]	/* GetCoordOnPVector */
        SWAP[ ]	/* SwapTopStack */
        SUB[ ]	/* Subtract */
        PUSHB[ ]	/* 2 values pushed */
        12 0
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 1 value pushed */
        11
        RS[ ]	/* ReadStore */
        CALL[ ]	/* CallFunction */
        NEG[ ]	/* Negate */
        ROLL[ ]	/* RollTopThreeStack */
        MDAP[0]	/* MoveDirectAbsPt */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        DUP[ ]	/* DuplicateTopStack */
        ALIGNRP[ ]	/* AlignRelativePt */
        ROLL[ ]	/* RollTopThreeStack */
        SHPIX[ ]	/* ShiftZoneByPixel */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      59
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        0
        SZPS[ ]	/* SetZonePointerS */
        PUSHB[ ]	/* 1 value pushed */
        23
        SWAP[ ]	/* SwapTopStack */
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        DUP[ ]	/* DuplicateTopStack */
        MDAP[0]	/* MoveDirectAbsPt */
        GC[1]	/* GetCoordOnPVector */
        SWAP[ ]	/* SwapTopStack */
        GC[1]	/* GetCoordOnPVector */
        SWAP[ ]	/* SwapTopStack */
        SUB[ ]	/* Subtract */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        6
        SWAP[ ]	/* SwapTopStack */
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 2 values pushed */
        12 0
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 1 value pushed */
        11
        RS[ ]	/* ReadStore */
        CALL[ ]	/* CallFunction */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        96
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          64
          LTEQ[ ]	/* LessThenOrEqual */
          IF[ ]	/* If */
            PUSHB[ ]	/* 4 values pushed */
            4 32 5 32
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 4 values pushed */
            4 38 5 26
          EIF[ ]	/* EndIf */
          WS[ ]	/* WriteStore */
          WS[ ]	/* WriteStore */
          SWAP[ ]	/* SwapTopStack */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          10
          RS[ ]	/* ReadStore */
          DUP[ ]	/* DuplicateTopStack */
          ROLL[ ]	/* RollTopThreeStack */
          SWAP[ ]	/* SwapTopStack */
          GC[1]	/* GetCoordOnPVector */
          SWAP[ ]	/* SwapTopStack */
          GC[1]	/* GetCoordOnPVector */
          SWAP[ ]	/* SwapTopStack */
          SUB[ ]	/* Subtract */
          SWAP[ ]	/* SwapTopStack */
          GC[0]	/* GetCoordOnPVector */
          ADD[ ]	/* Add */
          PUSHB[ ]	/* 1 value pushed */
          6
          RS[ ]	/* ReadStore */
          PUSHB[ ]	/* 1 value pushed */
          2
          DIV[ ]	/* Divide */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          0
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            64
            ADD[ ]	/* Add */
          EIF[ ]	/* EndIf */
          FLOOR[ ]	/* Floor */
          PUSHB[ ]	/* 1 value pushed */
          1
          MUL[ ]	/* Multiply */
          ADD[ ]	/* Add */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          1
          CALL[ ]	/* CallFunction */
          DUP[ ]	/* DuplicateTopStack */
          ROLL[ ]	/* RollTopThreeStack */
          ROLL[ ]	/* RollTopThreeStack */
          SUB[ ]	/* Subtract */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          4
          RS[ ]	/* ReadStore */
          ADD[ ]	/* Add */
          ABS[ ]	/* Absolute */
          SWAP[ ]	/* SwapTopStack */
          PUSHB[ ]	/* 1 value pushed */
          5
          RS[ ]	/* ReadStore */
          SUB[ ]	/* Subtract */
          ABS[ ]	/* Absolute */
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            4
            RS[ ]	/* ReadStore */
            SUB[ ]	/* Subtract */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 1 value pushed */
            5
            RS[ ]	/* ReadStore */
            ADD[ ]	/* Add */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          3
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          2
          DIV[ ]	/* Divide */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          0
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            64
            ADD[ ]	/* Add */
          EIF[ ]	/* EndIf */
          FLOOR[ ]	/* Floor */
          PUSHB[ ]	/* 1 value pushed */
          1
          MUL[ ]	/* Multiply */
          SUB[ ]	/* Subtract */
          SWAP[ ]	/* SwapTopStack */
          DUP[ ]	/* DuplicateTopStack */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          4
          MINDEX[ ]	/* MoveXToTopStack */
          SWAP[ ]	/* SwapTopStack */
          GC[0]	/* GetCoordOnPVector */
          SUB[ ]	/* Subtract */
          SHPIX[ ]	/* ShiftZoneByPixel */
        ELSE[ ]	/* Else */
          SWAP[ ]	/* SwapTopStack */
          PUSHB[ ]	/* 1 value pushed */
          10
          RS[ ]	/* ReadStore */
          GC[0]	/* GetCoordOnPVector */
          PUSHB[ ]	/* 1 value pushed */
          2
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          10
          RS[ ]	/* ReadStore */
          GC[1]	/* GetCoordOnPVector */
          SWAP[ ]	/* SwapTopStack */
          GC[1]	/* GetCoordOnPVector */
          SWAP[ ]	/* SwapTopStack */
          SUB[ ]	/* Subtract */
          ADD[ ]	/* Add */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          6
          RS[ ]	/* ReadStore */
          PUSHB[ ]	/* 1 value pushed */
          2
          DIV[ ]	/* Divide */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          0
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            64
            ADD[ ]	/* Add */
          EIF[ ]	/* EndIf */
          FLOOR[ ]	/* Floor */
          PUSHB[ ]	/* 1 value pushed */
          1
          MUL[ ]	/* Multiply */
          ADD[ ]	/* Add */
          SWAP[ ]	/* SwapTopStack */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          1
          CALL[ ]	/* CallFunction */
          SWAP[ ]	/* SwapTopStack */
          PUSHB[ ]	/* 1 value pushed */
          6
          RS[ ]	/* ReadStore */
          ADD[ ]	/* Add */
          PUSHB[ ]	/* 1 value pushed */
          1
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 1 value pushed */
          5
          CINDEX[ ]	/* CopyXToTopStack */
          SUB[ ]	/* Subtract */
          PUSHB[ ]	/* 1 value pushed */
          5
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          2
          DIV[ ]	/* Divide */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          0
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            64
            ADD[ ]	/* Add */
          EIF[ ]	/* EndIf */
          FLOOR[ ]	/* Floor */
          PUSHB[ ]	/* 1 value pushed */
          1
          MUL[ ]	/* Multiply */
          PUSHB[ ]	/* 1 value pushed */
          4
          MINDEX[ ]	/* MoveXToTopStack */
          SUB[ ]	/* Subtract */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          4
          CINDEX[ ]	/* CopyXToTopStack */
          ADD[ ]	/* Add */
          ABS[ ]	/* Absolute */
          SWAP[ ]	/* SwapTopStack */
          PUSHB[ ]	/* 1 value pushed */
          3
          CINDEX[ ]	/* CopyXToTopStack */
          ADD[ ]	/* Add */
          ABS[ ]	/* Absolute */
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
          ELSE[ ]	/* Else */
            SWAP[ ]	/* SwapTopStack */
            POP[ ]	/* PopTopStack */
          EIF[ ]	/* EndIf */
          SWAP[ ]	/* SwapTopStack */
          DUP[ ]	/* DuplicateTopStack */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          4
          MINDEX[ ]	/* MoveXToTopStack */
          SWAP[ ]	/* SwapTopStack */
          GC[0]	/* GetCoordOnPVector */
          SUB[ ]	/* Subtract */
          SHPIX[ ]	/* ShiftZoneByPixel */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      60
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        0
        SZPS[ ]	/* SetZonePointerS */
        PUSHB[ ]	/* 1 value pushed */
        23
        SWAP[ ]	/* SwapTopStack */
        WS[ ]	/* WriteStore */
        DUP[ ]	/* DuplicateTopStack */
        DUP[ ]	/* DuplicateTopStack */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        5
        MINDEX[ ]	/* MoveXToTopStack */
        DUP[ ]	/* DuplicateTopStack */
        MDAP[0]	/* MoveDirectAbsPt */
        GC[1]	/* GetCoordOnPVector */
        SWAP[ ]	/* SwapTopStack */
        GC[1]	/* GetCoordOnPVector */
        SWAP[ ]	/* SwapTopStack */
        SUB[ ]	/* Subtract */
        SWAP[ ]	/* SwapTopStack */
        ALIGNRP[ ]	/* AlignRelativePt */
        SHPIX[ ]	/* ShiftZoneByPixel */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      61
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        0
        SZPS[ ]	/* SetZonePointerS */
        PUSHB[ ]	/* 1 value pushed */
        23
        SWAP[ ]	/* SwapTopStack */
        WS[ ]	/* WriteStore */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        10
        SWAP[ ]	/* SwapTopStack */
        WS[ ]	/* WriteStore */
        DUP[ ]	/* DuplicateTopStack */
        DUP[ ]	/* DuplicateTopStack */
        DUP[ ]	/* DuplicateTopStack */
        GC[0]	/* GetCoordOnPVector */
        SWAP[ ]	/* SwapTopStack */
        GC[1]	/* GetCoordOnPVector */
        PUSHB[ ]	/* 1 value pushed */
        1
        CALL[ ]	/* CallFunction */
        SWAP[ ]	/* SwapTopStack */
        SUB[ ]	/* Subtract */
        SHPIX[ ]	/* ShiftZoneByPixel */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      62
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        0
        SZPS[ ]	/* SetZonePointerS */
        PUSHB[ ]	/* 1 value pushed */
        23
        SWAP[ ]	/* SwapTopStack */
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 1 value pushed */
        3
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        GC[1]	/* GetCoordOnPVector */
        SWAP[ ]	/* SwapTopStack */
        GC[1]	/* GetCoordOnPVector */
        SWAP[ ]	/* SwapTopStack */
        SUB[ ]	/* Subtract */
        PUSHB[ ]	/* 1 value pushed */
        0
        EQ[ ]	/* Equal */
        IF[ ]	/* If */
          MDAP[0]	/* MoveDirectAbsPt */
          DUP[ ]	/* DuplicateTopStack */
          ALIGNRP[ ]	/* AlignRelativePt */
          SWAP[ ]	/* SwapTopStack */
          POP[ ]	/* PopTopStack */
        ELSE[ ]	/* Else */
          PUSHB[ ]	/* 1 value pushed */
          2
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          2
          CINDEX[ ]	/* CopyXToTopStack */
          GC[1]	/* GetCoordOnPVector */
          SWAP[ ]	/* SwapTopStack */
          GC[1]	/* GetCoordOnPVector */
          SWAP[ ]	/* SwapTopStack */
          SUB[ ]	/* Subtract */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          5
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          4
          CINDEX[ ]	/* CopyXToTopStack */
          GC[1]	/* GetCoordOnPVector */
          SWAP[ ]	/* SwapTopStack */
          GC[1]	/* GetCoordOnPVector */
          SWAP[ ]	/* SwapTopStack */
          SUB[ ]	/* Subtract */
          PUSHB[ ]	/* 1 value pushed */
          6
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          5
          CINDEX[ ]	/* CopyXToTopStack */
          MD[0]	/* MeasureDistance */
          PUSHB[ ]	/* 1 value pushed */
          2
          CINDEX[ ]	/* CopyXToTopStack */
          SUB[ ]	/* Subtract */
          PUSHW[ ]	/* 2 values pushed */
          2048 2048
          MUL[ ]	/* Multiply */
          MUL[ ]	/* Multiply */
          SWAP[ ]	/* SwapTopStack */
          DUP[ ]	/* DuplicateTopStack */
          IF[ ]	/* If */
            DIV[ ]	/* Divide */
          ELSE[ ]	/* Else */
            POP[ ]	/* PopTopStack */
          EIF[ ]	/* EndIf */
          MUL[ ]	/* Multiply */
          PUSHW[ ]	/* 1 value pushed */
          1024
          DIV[ ]	/* Divide */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          0
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            64
            ADD[ ]	/* Add */
          EIF[ ]	/* EndIf */
          FLOOR[ ]	/* Floor */
          PUSHB[ ]	/* 1 value pushed */
          1
          MUL[ ]	/* Multiply */
          ADD[ ]	/* Add */
          SWAP[ ]	/* SwapTopStack */
          MDAP[0]	/* MoveDirectAbsPt */
          SWAP[ ]	/* SwapTopStack */
          DUP[ ]	/* DuplicateTopStack */
          DUP[ ]	/* DuplicateTopStack */
          ALIGNRP[ ]	/* AlignRelativePt */
          ROLL[ ]	/* RollTopThreeStack */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SWAP[ ]	/* SwapTopStack */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      63
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        0
        SZPS[ ]	/* SetZonePointerS */
        PUSHB[ ]	/* 1 value pushed */
        23
        SWAP[ ]	/* SwapTopStack */
        WS[ ]	/* WriteStore */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        10
        RS[ ]	/* ReadStore */
        DUP[ ]	/* DuplicateTopStack */
        MDAP[0]	/* MoveDirectAbsPt */
        GC[1]	/* GetCoordOnPVector */
        SWAP[ ]	/* SwapTopStack */
        GC[1]	/* GetCoordOnPVector */
        SWAP[ ]	/* SwapTopStack */
        SUB[ ]	/* Subtract */
        DUP[ ]	/* DuplicateTopStack */
        ADD[ ]	/* Add */
        PUSHB[ ]	/* 1 value pushed */
        32
        ADD[ ]	/* Add */
        FLOOR[ ]	/* Floor */
        PUSHB[ ]	/* 1 value pushed */
        2
        DIV[ ]	/* Divide */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          64
          ADD[ ]	/* Add */
        EIF[ ]	/* EndIf */
        FLOOR[ ]	/* Floor */
        PUSHB[ ]	/* 1 value pushed */
        1
        MUL[ ]	/* Multiply */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        DUP[ ]	/* DuplicateTopStack */
        ALIGNRP[ ]	/* AlignRelativePt */
        ROLL[ ]	/* RollTopThreeStack */
        SHPIX[ ]	/* ShiftZoneByPixel */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      64
      FDEF[ ]	/* FunctionDefinition */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        MDAP[0]	/* MoveDirectAbsPt */
        GC[0]	/* GetCoordOnPVector */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        GC[0]	/* GetCoordOnPVector */
        PUSHB[ ]	/* 1 value pushed */
        23
        RS[ ]	/* ReadStore */
        IF[ ]	/* If */
          LT[ ]	/* LessThan */
        ELSE[ ]	/* Else */
          GT[ ]	/* GreaterThan */
        EIF[ ]	/* EndIf */
        IF[ ]	/* If */
          DUP[ ]	/* DuplicateTopStack */
          ALIGNRP[ ]	/* AlignRelativePt */
        EIF[ ]	/* EndIf */
        MDAP[0]	/* MoveDirectAbsPt */
        PUSHB[ ]	/* 2 values pushed */
        48 1
        SZP1[ ]	/* SetZonePointer1 */
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      65
      FDEF[ ]	/* FunctionDefinition */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        MDAP[0]	/* MoveDirectAbsPt */
        GC[0]	/* GetCoordOnPVector */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        GC[0]	/* GetCoordOnPVector */
        PUSHB[ ]	/* 1 value pushed */
        23
        RS[ ]	/* ReadStore */
        IF[ ]	/* If */
          GT[ ]	/* GreaterThan */
        ELSE[ ]	/* Else */
          LT[ ]	/* LessThan */
        EIF[ ]	/* EndIf */
        IF[ ]	/* If */
          DUP[ ]	/* DuplicateTopStack */
          ALIGNRP[ ]	/* AlignRelativePt */
        EIF[ ]	/* EndIf */
        MDAP[0]	/* MoveDirectAbsPt */
        PUSHB[ ]	/* 2 values pushed */
        48 1
        SZP1[ ]	/* SetZonePointer1 */
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      66
      FDEF[ ]	/* FunctionDefinition */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        MDAP[0]	/* MoveDirectAbsPt */
        GC[0]	/* GetCoordOnPVector */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        GC[0]	/* GetCoordOnPVector */
        PUSHB[ ]	/* 1 value pushed */
        23
        RS[ ]	/* ReadStore */
        IF[ ]	/* If */
          LT[ ]	/* LessThan */
        ELSE[ ]	/* Else */
          GT[ ]	/* GreaterThan */
        EIF[ ]	/* EndIf */
        IF[ ]	/* If */
          DUP[ ]	/* DuplicateTopStack */
          ALIGNRP[ ]	/* AlignRelativePt */
        EIF[ ]	/* EndIf */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        MDAP[0]	/* MoveDirectAbsPt */
        GC[0]	/* GetCoordOnPVector */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        GC[0]	/* GetCoordOnPVector */
        PUSHB[ ]	/* 1 value pushed */
        23
        RS[ ]	/* ReadStore */
        IF[ ]	/* If */
          GT[ ]	/* GreaterThan */
        ELSE[ ]	/* Else */
          LT[ ]	/* LessThan */
        EIF[ ]	/* EndIf */
        IF[ ]	/* If */
          DUP[ ]	/* DuplicateTopStack */
          ALIGNRP[ ]	/* AlignRelativePt */
        EIF[ ]	/* EndIf */
        MDAP[0]	/* MoveDirectAbsPt */
        PUSHB[ ]	/* 2 values pushed */
        48 1
        SZP1[ ]	/* SetZonePointer1 */
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      67
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        58
        CALL[ ]	/* CallFunction */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        MDAP[0]	/* MoveDirectAbsPt */
        GC[0]	/* GetCoordOnPVector */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        GC[0]	/* GetCoordOnPVector */
        PUSHB[ ]	/* 1 value pushed */
        23
        RS[ ]	/* ReadStore */
        IF[ ]	/* If */
          LT[ ]	/* LessThan */
        ELSE[ ]	/* Else */
          GT[ ]	/* GreaterThan */
        EIF[ ]	/* EndIf */
        IF[ ]	/* If */
          DUP[ ]	/* DuplicateTopStack */
          ALIGNRP[ ]	/* AlignRelativePt */
        EIF[ ]	/* EndIf */
        MDAP[0]	/* MoveDirectAbsPt */
        PUSHB[ ]	/* 2 values pushed */
        48 1
        SZP1[ ]	/* SetZonePointer1 */
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      68
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        59
        CALL[ ]	/* CallFunction */
        ROLL[ ]	/* RollTopThreeStack */
        DUP[ ]	/* DuplicateTopStack */
        DUP[ ]	/* DuplicateTopStack */
        ALIGNRP[ ]	/* AlignRelativePt */
        PUSHB[ ]	/* 1 value pushed */
        6
        SWAP[ ]	/* SwapTopStack */
        WS[ ]	/* WriteStore */
        ROLL[ ]	/* RollTopThreeStack */
        SHPIX[ ]	/* ShiftZoneByPixel */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        MDAP[0]	/* MoveDirectAbsPt */
        GC[0]	/* GetCoordOnPVector */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        GC[0]	/* GetCoordOnPVector */
        PUSHB[ ]	/* 1 value pushed */
        23
        RS[ ]	/* ReadStore */
        IF[ ]	/* If */
          LT[ ]	/* LessThan */
        ELSE[ ]	/* Else */
          GT[ ]	/* GreaterThan */
        EIF[ ]	/* EndIf */
        IF[ ]	/* If */
          DUP[ ]	/* DuplicateTopStack */
          ALIGNRP[ ]	/* AlignRelativePt */
        EIF[ ]	/* EndIf */
        MDAP[0]	/* MoveDirectAbsPt */
        PUSHB[ ]	/* 2 values pushed */
        48 1
        SZP1[ ]	/* SetZonePointer1 */
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        6
        RS[ ]	/* ReadStore */
        MDAP[0]	/* MoveDirectAbsPt */
        PUSHB[ ]	/* 1 value pushed */
        48
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      69
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        0
        SZPS[ ]	/* SetZonePointerS */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        4
        MINDEX[ ]	/* MoveXToTopStack */
        DUP[ ]	/* DuplicateTopStack */
        DUP[ ]	/* DuplicateTopStack */
        DUP[ ]	/* DuplicateTopStack */
        GC[0]	/* GetCoordOnPVector */
        SWAP[ ]	/* SwapTopStack */
        GC[1]	/* GetCoordOnPVector */
        SUB[ ]	/* Subtract */
        PUSHB[ ]	/* 1 value pushed */
        12
        SWAP[ ]	/* SwapTopStack */
        WS[ ]	/* WriteStore */
        MDAP[0]	/* MoveDirectAbsPt */
        GC[1]	/* GetCoordOnPVector */
        SWAP[ ]	/* SwapTopStack */
        GC[1]	/* GetCoordOnPVector */
        SWAP[ ]	/* SwapTopStack */
        SUB[ ]	/* Subtract */
        PUSHB[ ]	/* 1 value pushed */
        11
        RS[ ]	/* ReadStore */
        CALL[ ]	/* CallFunction */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        ALIGNRP[ ]	/* AlignRelativePt */
        DUP[ ]	/* DuplicateTopStack */
        MDAP[0]	/* MoveDirectAbsPt */
        SWAP[ ]	/* SwapTopStack */
        SHPIX[ ]	/* ShiftZoneByPixel */
        PUSHB[ ]	/* 2 values pushed */
        48 1
        SZP1[ ]	/* SetZonePointer1 */
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      70
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        10 4
        CINDEX[ ]	/* CopyXToTopStack */
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 1 value pushed */
        0
        SZPS[ ]	/* SetZonePointerS */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        DUP[ ]	/* DuplicateTopStack */
        MDAP[0]	/* MoveDirectAbsPt */
        GC[1]	/* GetCoordOnPVector */
        SWAP[ ]	/* SwapTopStack */
        GC[1]	/* GetCoordOnPVector */
        SWAP[ ]	/* SwapTopStack */
        SUB[ ]	/* Subtract */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        6
        SWAP[ ]	/* SwapTopStack */
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 2 values pushed */
        12 0
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 1 value pushed */
        11
        RS[ ]	/* ReadStore */
        CALL[ ]	/* CallFunction */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        96
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          64
          LTEQ[ ]	/* LessThenOrEqual */
          IF[ ]	/* If */
            PUSHB[ ]	/* 4 values pushed */
            4 32 5 32
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 4 values pushed */
            4 38 5 26
          EIF[ ]	/* EndIf */
          WS[ ]	/* WriteStore */
          WS[ ]	/* WriteStore */
          SWAP[ ]	/* SwapTopStack */
          DUP[ ]	/* DuplicateTopStack */
          GC[1]	/* GetCoordOnPVector */
          PUSHB[ ]	/* 1 value pushed */
          6
          RS[ ]	/* ReadStore */
          PUSHB[ ]	/* 1 value pushed */
          2
          DIV[ ]	/* Divide */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          0
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            64
            ADD[ ]	/* Add */
          EIF[ ]	/* EndIf */
          FLOOR[ ]	/* Floor */
          PUSHB[ ]	/* 1 value pushed */
          1
          MUL[ ]	/* Multiply */
          ADD[ ]	/* Add */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          1
          CALL[ ]	/* CallFunction */
          DUP[ ]	/* DuplicateTopStack */
          ROLL[ ]	/* RollTopThreeStack */
          ROLL[ ]	/* RollTopThreeStack */
          SUB[ ]	/* Subtract */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          4
          RS[ ]	/* ReadStore */
          ADD[ ]	/* Add */
          ABS[ ]	/* Absolute */
          SWAP[ ]	/* SwapTopStack */
          PUSHB[ ]	/* 1 value pushed */
          5
          RS[ ]	/* ReadStore */
          SUB[ ]	/* Subtract */
          ABS[ ]	/* Absolute */
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            4
            RS[ ]	/* ReadStore */
            SUB[ ]	/* Subtract */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 1 value pushed */
            5
            RS[ ]	/* ReadStore */
            ADD[ ]	/* Add */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          3
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          2
          DIV[ ]	/* Divide */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          0
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            64
            ADD[ ]	/* Add */
          EIF[ ]	/* EndIf */
          FLOOR[ ]	/* Floor */
          PUSHB[ ]	/* 1 value pushed */
          1
          MUL[ ]	/* Multiply */
          SUB[ ]	/* Subtract */
          PUSHB[ ]	/* 1 value pushed */
          2
          CINDEX[ ]	/* CopyXToTopStack */
          GC[0]	/* GetCoordOnPVector */
          SUB[ ]	/* Subtract */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SWAP[ ]	/* SwapTopStack */
          DUP[ ]	/* DuplicateTopStack */
          ALIGNRP[ ]	/* AlignRelativePt */
          SWAP[ ]	/* SwapTopStack */
          SHPIX[ ]	/* ShiftZoneByPixel */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          DUP[ ]	/* DuplicateTopStack */
          DUP[ ]	/* DuplicateTopStack */
          GC[0]	/* GetCoordOnPVector */
          SWAP[ ]	/* SwapTopStack */
          GC[1]	/* GetCoordOnPVector */
          PUSHB[ ]	/* 1 value pushed */
          1
          CALL[ ]	/* CallFunction */
          SWAP[ ]	/* SwapTopStack */
          SUB[ ]	/* Subtract */
          SHPIX[ ]	/* ShiftZoneByPixel */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
        PUSHB[ ]	/* 2 values pushed */
        48 1
        SZP1[ ]	/* SetZonePointer1 */
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      71
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        0 58
        CALL[ ]	/* CallFunction */
        MDAP[0]	/* MoveDirectAbsPt */
        PUSHB[ ]	/* 2 values pushed */
        48 1
        SZP1[ ]	/* SetZonePointer1 */
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      72
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        0 59
        CALL[ ]	/* CallFunction */
        POP[ ]	/* PopTopStack */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        DUP[ ]	/* DuplicateTopStack */
        ALIGNRP[ ]	/* AlignRelativePt */
        PUSHB[ ]	/* 1 value pushed */
        6
        SWAP[ ]	/* SwapTopStack */
        WS[ ]	/* WriteStore */
        SWAP[ ]	/* SwapTopStack */
        SHPIX[ ]	/* ShiftZoneByPixel */
        PUSHB[ ]	/* 2 values pushed */
        48 1
        SZP1[ ]	/* SetZonePointer1 */
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        6
        RS[ ]	/* ReadStore */
        MDAP[0]	/* MoveDirectAbsPt */
        PUSHB[ ]	/* 1 value pushed */
        48
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      73
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        0
        SZP2[ ]	/* SetZonePointer2 */
        DUP[ ]	/* DuplicateTopStack */
        GC[1]	/* GetCoordOnPVector */
        PUSHB[ ]	/* 1 value pushed */
        0
        SWAP[ ]	/* SwapTopStack */
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 3 values pushed */
        0 1 1
        SZP2[ ]	/* SetZonePointer2 */
        SZP1[ ]	/* SetZonePointer1 */
        SZP0[ ]	/* SetZonePointer0 */
        MDAP[0]	/* MoveDirectAbsPt */
        PUSHB[ ]	/* 1 value pushed */
        54
        LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      74
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        0
        SZP2[ ]	/* SetZonePointer2 */
        DUP[ ]	/* DuplicateTopStack */
        GC[1]	/* GetCoordOnPVector */
        PUSHB[ ]	/* 1 value pushed */
        0
        SWAP[ ]	/* SwapTopStack */
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 3 values pushed */
        0 1 1
        SZP2[ ]	/* SetZonePointer2 */
        SZP1[ ]	/* SetZonePointer1 */
        SZP0[ ]	/* SetZonePointer0 */
        MDAP[0]	/* MoveDirectAbsPt */
        PUSHB[ ]	/* 1 value pushed */
        54
        LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      75
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        0 1
        SZP1[ ]	/* SetZonePointer1 */
        SZP0[ ]	/* SetZonePointer0 */
        PUSHB[ ]	/* 1 value pushed */
        55
        LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      76
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        57
        LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      77
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        0
        SZPS[ ]	/* SetZonePointerS */
        RCVT[ ]	/* ReadCVT */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        MDAP[0]	/* MoveDirectAbsPt */
        DUP[ ]	/* DuplicateTopStack */
        GC[0]	/* GetCoordOnPVector */
        ROLL[ ]	/* RollTopThreeStack */
        SWAP[ ]	/* SwapTopStack */
        SUB[ ]	/* Subtract */
        SHPIX[ ]	/* ShiftZoneByPixel */
        PUSHB[ ]	/* 2 values pushed */
        48 1
        SZP1[ ]	/* SetZonePointer1 */
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      78
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        10
        SWAP[ ]	/* SwapTopStack */
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 1 value pushed */
        77
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      79
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 3 values pushed */
        0 0 70
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      80
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 3 values pushed */
        0 1 70
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      81
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 3 values pushed */
        1 0 70
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      82
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 3 values pushed */
        1 1 70
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      83
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 3 values pushed */
        0 0 71
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      84
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 3 values pushed */
        0 1 71
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      85
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 3 values pushed */
        1 0 71
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      86
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 3 values pushed */
        1 1 71
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      87
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 4 values pushed */
        0 0 0 67
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      88
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 4 values pushed */
        0 1 0 67
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      89
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 4 values pushed */
        1 0 0 67
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      90
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 4 values pushed */
        1 1 0 67
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      91
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 4 values pushed */
        0 0 1 67
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      92
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 4 values pushed */
        0 1 1 67
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      93
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 4 values pushed */
        1 0 1 67
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      94
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 4 values pushed */
        1 1 1 67
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      95
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 3 values pushed */
        0 0 69
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      96
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 3 values pushed */
        0 1 69
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      97
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 3 values pushed */
        1 0 69
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      98
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 3 values pushed */
        1 1 69
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      99
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 3 values pushed */
        0 0 72
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      100
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 3 values pushed */
        0 1 72
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      101
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 3 values pushed */
        1 0 72
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      102
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 3 values pushed */
        1 1 72
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      103
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 4 values pushed */
        0 0 0 68
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      104
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 4 values pushed */
        0 1 0 68
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      105
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 4 values pushed */
        1 0 0 68
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      106
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 4 values pushed */
        1 1 0 68
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      107
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 4 values pushed */
        0 0 1 68
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      108
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 4 values pushed */
        0 1 1 68
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      109
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 4 values pushed */
        1 0 1 68
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      110
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 4 values pushed */
        1 1 1 68
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      111
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        0 60
        CALL[ ]	/* CallFunction */
        MDAP[0]	/* MoveDirectAbsPt */
        PUSHB[ ]	/* 2 values pushed */
        48 1
        SZP1[ ]	/* SetZonePointer1 */
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      112
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        0 60
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        64
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      113
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        0 60
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        65
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      114
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        0
        SZPS[ ]	/* SetZonePointerS */
        PUSHB[ ]	/* 2 values pushed */
        0 60
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        66
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      115
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        1 60
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        64
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      116
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        1 60
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        65
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      117
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        0
        SZPS[ ]	/* SetZonePointerS */
        PUSHB[ ]	/* 2 values pushed */
        1 60
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        66
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      118
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        0 61
        CALL[ ]	/* CallFunction */
        MDAP[0]	/* MoveDirectAbsPt */
        PUSHB[ ]	/* 2 values pushed */
        48 1
        SZP1[ ]	/* SetZonePointer1 */
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      119
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        0 61
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        64
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      120
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        0 61
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        65
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      121
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        0 61
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        66
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      122
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        1 61
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        64
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      123
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        1 61
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        65
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      124
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        1 61
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        66
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      125
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        0 62
        CALL[ ]	/* CallFunction */
        MDAP[0]	/* MoveDirectAbsPt */
        PUSHB[ ]	/* 2 values pushed */
        48 1
        SZP1[ ]	/* SetZonePointer1 */
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      126
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        0 62
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        64
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      127
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        0 62
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        65
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      128
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        0 62
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        66
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      129
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        1 62
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        64
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      130
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        1 62
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        65
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      131
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        1 62
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        66
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      132
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        0 63
        CALL[ ]	/* CallFunction */
        MDAP[0]	/* MoveDirectAbsPt */
        PUSHB[ ]	/* 2 values pushed */
        48 1
        SZP1[ ]	/* SetZonePointer1 */
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      133
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        0 63
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        64
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      134
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        0 63
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        65
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      135
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        0 63
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        66
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      136
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        1 63
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        64
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      137
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        1 63
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        65
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      138
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        1 63
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        66
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      139
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 3 values pushed */
        11 0 3
        RCVT[ ]	/* ReadCVT */
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          6
        ELSE[ ]	/* Else */
          PUSHB[ ]	/* 3 values pushed */
          4 2 3
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            SWAP[ ]	/* SwapTopStack */
            POP[ ]	/* PopTopStack */
          ELSE[ ]	/* Else */
            POP[ ]	/* PopTopStack */
          EIF[ ]	/* EndIf */
        EIF[ ]	/* EndIf */
        WS[ ]	/* WriteStore */
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        8
        NEG[ ]	/* Negate */
        PUSHB[ ]	/* 1 value pushed */
        3
        DEPTH[ ]	/* GetDepthStack */
        LT[ ]	/* LessThan */
        JROT[ ]	/* JumpRelativeOnTrue */
        PUSHB[ ]	/* 2 values pushed */
        5 1
        SZP2[ ]	/* SetZonePointer2 */
        RCVT[ ]	/* ReadCVT */
        IF[ ]	/* If */
          IUP[0]	/* InterpolateUntPts */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
    </assembly>
  </fpgm>

  <prep>
    <assembly>
      SVTCA[0]	/* SetFPVectorToAxis */
      MPPEM[ ]	/* MeasurePixelPerEm */
      PUSHW[ ]	/* 1 value pushed */
      200
      GT[ ]	/* GreaterThan */
      IF[ ]	/* If */
        PUSHB[ ]	/* 2 values pushed */
        1 1
        INSTCTRL[ ]	/* SetInstrExecControl */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      1
      PUSHW[ ]	/* 2 values pushed */
      2048 2048
      MUL[ ]	/* Multiply */
      WCVTF[ ]	/* WriteCVTInFUnits */
      PUSHB[ ]	/* 2 values pushed */
      0 7
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 4 values pushed */
      34 19 2 0
      LOOPCALL[ ]	/* LoopAndCallFunction */
      PUSHB[ ]	/* 2 values pushed */
      0 7
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 6 values pushed */
      23 8 15 4 2 10
      LOOPCALL[ ]	/* LoopAndCallFunction */
      PUSHB[ ]	/* 2 values pushed */
      0 7
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 6 values pushed */
      31 6 19 2 2 10
      LOOPCALL[ ]	/* LoopAndCallFunction */
      PUSHB[ ]	/* 2 values pushed */
      0 9
      WS[ ]	/* WriteStore */
      PUSHW[ ]	/* 4 values pushed */
      1536 1024 2 11
      LOOPCALL[ ]	/* LoopAndCallFunction */
      PUSHB[ ]	/* 2 values pushed */
      0 11
      WS[ ]	/* WriteStore */
      PUSHW[ ]	/* 4 values pushed */
      64 64 2 11
      LOOPCALL[ ]	/* LoopAndCallFunction */
      PUSHW[ ]	/* 2 values pushed */
      3 0
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 2 values pushed */
      36 1
      GETINFO[ ]	/* GetInfo */
      LTEQ[ ]	/* LessThenOrEqual */
      IF[ ]	/* If */
        PUSHB[ ]	/* 1 value pushed */
        64
        GETINFO[ ]	/* GetInfo */
        IF[ ]	/* If */
          PUSHW[ ]	/* 2 values pushed */
          3 100
          WCVTP[ ]	/* WriteCVTInPixels */
          PUSHB[ ]	/* 2 values pushed */
          40 1
          GETINFO[ ]	/* GetInfo */
          LTEQ[ ]	/* LessThenOrEqual */
          IF[ ]	/* If */
            PUSHW[ ]	/* 1 value pushed */
            2048
            GETINFO[ ]	/* GetInfo */
            IF[ ]	/* If */
              PUSHW[ ]	/* 2 values pushed */
              3 0
              WCVTP[ ]	/* WriteCVTInPixels */
            EIF[ ]	/* EndIf */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            39 1
            GETINFO[ ]	/* GetInfo */
            LTEQ[ ]	/* LessThenOrEqual */
            IF[ ]	/* If */
              PUSHW[ ]	/* 3 values pushed */
              2176 1 1088
              GETINFO[ ]	/* GetInfo */
              MUL[ ]	/* Multiply */
              EQ[ ]	/* Equal */
              IF[ ]	/* If */
                PUSHW[ ]	/* 2 values pushed */
                3 0
                WCVTP[ ]	/* WriteCVTInPixels */
              EIF[ ]	/* EndIf */
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
        EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 6 values pushed */
      25 6 17 2 2 14
      LOOPCALL[ ]	/* LoopAndCallFunction */
      PUSHW[ ]	/* 1 value pushed */
      511
      SCANCTRL[ ]	/* ScanConversionControl */
      PUSHB[ ]	/* 1 value pushed */
      4
      SCANTYPE[ ]	/* ScanType */
      PUSHB[ ]	/* 2 values pushed */
      2 0
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 4 values pushed */
      5 100 6 0
      WCVTP[ ]	/* WriteCVTInPixels */
      WCVTP[ ]	/* WriteCVTInPixels */
    </assembly>
  </prep>

  <cvt>
    <cv index="0" value="0"/>
    <cv index="1" value="0"/>
    <cv index="2" value="0"/>
    <cv index="3" value="0"/>
    <cv index="4" value="0"/>
    <cv index="5" value="0"/>
    <cv index="6" value="0"/>
    <cv index="7" value="0"/>
    <cv index="8" value="0"/>
    <cv index="9" value="0"/>
    <cv index="10" value="0"/>
    <cv index="11" value="0"/>
    <cv index="12" value="0"/>
    <cv index="13" value="96"/>
    <cv index="14" value="96"/>
    <cv index="15" value="90"/>
    <cv index="16" value="90"/>
    <cv index="17" value="598"/>
    <cv index="18" value="0"/>
    <cv index="19" value="613"/>
    <cv index="20" value="-15"/>
    <cv index="21" value="96"/>
    <cv index="22" value="96"/>
    <cv index="23" value="90"/>
    <cv index="24" value="90"/>
    <cv index="25" value="800"/>
    <cv index="26" value="0"/>
    <cv index="27" value="845"/>
    <cv index="28" value="598"/>
    <cv index="29" value="0"/>
    <cv index="30" value="-200"/>
    <cv index="31" value="815"/>
    <cv index="32" value="-15"/>
    <cv index="33" value="845"/>
    <cv index="34" value="613"/>
    <cv index="35" value="-15"/>
    <cv index="36" value="-215"/>
  </cvt>

  <loca>
    <!-- The 'loca' table will be calculated by the compiler -->
  </loca>

  <glyf>

    <!-- The xMin, yMin, xMax and yMax values
         will be recalculated by the compiler. -->

    <TTGlyph name=".notdef" xMin="98" yMin="-200" xMax="431" yMax="850">
      <contour>
        <pt x="431" y="-200" on="1"/>
        <pt x="98" y="-200" on="1"/>
        <pt x="98" y="850" on="1"/>
        <pt x="431" y="850" on="1"/>
      </contour>
      <contour>
        <pt x="350" y="-128" on="1"/>
        <pt x="350" y="-93" on="1"/>
        <pt x="243" y="-93" on="1"/>
        <pt x="316" y="-44" on="1"/>
        <pt x="350" y="-44" on="1"/>
        <pt x="350" y="-9" on="1"/>
        <pt x="175" y="-9" on="1"/>
        <pt x="175" y="-44" on="1"/>
        <pt x="249" y="-44" on="1"/>
        <pt x="175" y="-93" on="1"/>
        <pt x="175" y="-128" on="1"/>
      </contour>
      <contour>
        <pt x="350" y="15" on="1"/>
        <pt x="350" y="134" on="1"/>
        <pt x="175" y="134" on="1"/>
        <pt x="175" y="15" on="1"/>
      </contour>
      <contour>
        <pt x="350" y="197" on="1"/>
        <pt x="350" y="316" on="1"/>
        <pt x="245" y="316" on="1"/>
        <pt x="245" y="257" on="1"/>
        <pt x="280" y="257" on="1"/>
        <pt x="280" y="281" on="1"/>
        <pt x="315" y="281" on="1"/>
        <pt x="315" y="232" on="1"/>
        <pt x="210" y="232" on="1"/>
        <pt x="210" y="316" on="1"/>
        <pt x="175" y="316" on="1"/>
        <pt x="175" y="197" on="1"/>
      </contour>
      <contour>
        <pt x="350" y="339" on="1"/>
        <pt x="350" y="444" on="1"/>
        <pt x="315" y="444" on="1"/>
        <pt x="315" y="374" on="1"/>
        <pt x="175" y="374" on="1"/>
        <pt x="175" y="339" on="1"/>
      </contour>
      <contour>
        <pt x="280" y="399" on="1"/>
        <pt x="280" y="472" on="1"/>
        <pt x="350" y="472" on="1"/>
        <pt x="350" y="507" on="1"/>
        <pt x="175" y="507" on="1"/>
        <pt x="175" y="472" on="1"/>
        <pt x="245" y="472" on="1"/>
        <pt x="245" y="433" on="1"/>
        <pt x="175" y="433" on="1"/>
        <pt x="175" y="399" on="1"/>
      </contour>
      <contour>
        <pt x="350" y="535" on="1"/>
        <pt x="350" y="571" on="1"/>
        <pt x="280" y="571" on="1"/>
        <pt x="280" y="644" on="1"/>
        <pt x="175" y="644" on="1"/>
        <pt x="175" y="535" on="1"/>
      </contour>
      <contour>
        <pt x="350" y="672" on="1"/>
        <pt x="350" y="706" on="1"/>
        <pt x="280" y="706" on="1"/>
        <pt x="280" y="745" on="1"/>
        <pt x="350" y="745" on="1"/>
        <pt x="350" y="780" on="1"/>
        <pt x="176" y="780" on="1"/>
        <pt x="176" y="745" on="1"/>
        <pt x="245" y="745" on="1"/>
        <pt x="245" y="706" on="1"/>
        <pt x="175" y="706" on="1"/>
        <pt x="175" y="672" on="1"/>
      </contour>
      <contour>
        <pt x="210" y="99" on="1"/>
        <pt x="315" y="99" on="1"/>
        <pt x="315" y="50" on="1"/>
        <pt x="210" y="50" on="1"/>
      </contour>
      <contour>
        <pt x="210" y="609" on="1"/>
        <pt x="245" y="609" on="1"/>
        <pt x="245" y="571" on="1"/>
        <pt x="210" y="571" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 249 values pushed */
          13 1 2 1 75 0 11 9 10 10 11 114 0 1 0 28 27 1 28 103 29 1 27 30 1
          26 31 27 26 103 42 1 31 0 24 34 31 24 103 0 34 35 1 23 25 34 23 103 41 1
          25 0 19 18 25 19 103 0 15 21 18 15 87 20 1 18 0 21 22 18 21 103 40 1 22
          0 16 17 22 16 103 39 1 17 13 1 9 11 17 9 103 0 10 0 12 14 10 12 104 38
          1 14 0 7 32 14 7 103 0 32 0 33 8 32 33 103 37 1 8 0 4 3 8 4 103
          5 1 3 0 2 6 3 2 103 36 1 6 0 0 6 87 36 1 6 6 0 95 0 0 6
          0 79 53 53 47 47 37 37 31 31 19 19 15 15 4 4 72 71 70 69 68 67 66 65 53
          64 53 64 63 62 61 60 59 58 57 56 55 54 47 52 47 52 51 50 49 48 37 46 37 46
          45 44 43 42 41 40 39 38 31 36 31 36 35 34 33 32 19 30 19 30 29 28 27 26 25
          24 23 22 21 20 15 18 15 18 17 16 4 14 4 14 17 17 17 18 17 16 43 6 28
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="A" xMin="59" yMin="0" xMax="641" yMax="800">
      <contour>
        <pt x="464" y="282" on="1"/>
        <pt x="231" y="282" on="1"/>
        <pt x="159" y="0" on="1"/>
        <pt x="59" y="0" on="1"/>
        <pt x="268" y="800" on="1"/>
        <pt x="432" y="800" on="1"/>
        <pt x="641" y="0" on="1"/>
        <pt x="536" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="440" y="376" on="1"/>
        <pt x="348" y="735" on="1"/>
        <pt x="255" y="376" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 6 values pushed */
          9 1 4 2 1 76
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 21 values pushed */
            5 1 4 0 0 1 4 0 104 0 2 2 25 77 3 1 1 1 26 1 78
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 29 values pushed */
            0 2 4 2 133 3 1 1 0 1 134 5 1 4 0 0 4 87 5 1 4 4 0 96 0
            0 4 0 80
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 13 values pushed */
          8 8 8 10 8 10 17 17 17 16 6 8 26
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="B" xMin="120" yMin="0" xMax="627" yMax="800">
      <contour>
        <pt x="489" y="800" on="0"/>
        <pt x="627" y="687" on="0"/>
        <pt x="627" y="584" on="1"/>
        <pt x="627" y="512" on="0"/>
        <pt x="552" y="425" on="0"/>
        <pt x="481" y="415" on="1"/>
        <pt x="481" y="387" on="1"/>
        <pt x="549" y="377" on="0"/>
        <pt x="621" y="290" on="0"/>
        <pt x="621" y="217" on="1"/>
        <pt x="621" y="114" on="0"/>
        <pt x="484" y="0" on="0"/>
        <pt x="359" y="0" on="1"/>
        <pt x="120" y="0" on="1"/>
        <pt x="120" y="800" on="1"/>
        <pt x="365" y="800" on="1"/>
      </contour>
      <contour>
        <pt x="359" y="96" on="1"/>
        <pt x="439" y="96" on="0"/>
        <pt x="523" y="162" on="0"/>
        <pt x="523" y="225" on="1"/>
        <pt x="523" y="289" on="0"/>
        <pt x="439" y="355" on="0"/>
        <pt x="359" y="355" on="1"/>
        <pt x="220" y="355" on="1"/>
        <pt x="220" y="96" on="1"/>
      </contour>
      <contour>
        <pt x="365" y="448" on="1"/>
        <pt x="445" y="448" on="0"/>
        <pt x="529" y="513" on="0"/>
        <pt x="529" y="576" on="1"/>
        <pt x="529" y="639" on="0"/>
        <pt x="445" y="704" on="0"/>
        <pt x="365" y="704" on="1"/>
        <pt x="220" y="704" on="1"/>
        <pt x="220" y="448" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          6 5 2 3 4 1 76
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 32 values pushed */
            8 1 4 0 3 2 4 3 103 0 5 5 1 95 6 1 1 1 25 77 7 1 2 2 0
            95 0 0 0 26 0 78
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 36 values pushed */
            6 1 1 0 5 4 1 5 103 8 1 4 0 3 2 4 3 103 7 1 2 0 0 2 87
            7 1 2 2 0 95 0 0 2 0 79
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 26 values pushed */
          26 25 17 16 0 0 32 30 25 33 26 33 23 21 16 24 17 24 0 15 0 14 43 9 8
          23
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="C" xMin="87" yMin="-15" xMax="638" yMax="815">
      <contour>
        <pt x="227" y="-15" on="0"/>
        <pt x="87" y="194" on="0"/>
        <pt x="87" y="400" on="1"/>
        <pt x="87" y="606" on="0"/>
        <pt x="232" y="815" on="0"/>
        <pt x="373" y="815" on="1"/>
        <pt x="489" y="815" on="0"/>
        <pt x="624" y="667" on="0"/>
        <pt x="638" y="524" on="1"/>
        <pt x="540" y="524" on="1"/>
        <pt x="529" y="624" on="0"/>
        <pt x="447" y="720" on="0"/>
        <pt x="373" y="720" on="1"/>
        <pt x="278" y="720" on="0"/>
        <pt x="187" y="564" on="0"/>
        <pt x="187" y="400" on="1"/>
        <pt x="187" y="236" on="0"/>
        <pt x="273" y="80" on="0"/>
        <pt x="364" y="80" on="1"/>
        <pt x="435" y="80" on="0"/>
        <pt x="515" y="169" on="0"/>
        <pt x="527" y="261" on="1"/>
        <pt x="625" y="261" on="1"/>
        <pt x="610" y="125" on="0"/>
        <pt x="477" y="-15" on="0"/>
        <pt x="364" y="-15" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 37 values pushed */
            0 1 2 4 2 1 4 128 0 4 3 2 4 3 126 0 2 2 0 97 0 0 0 31 77
            0 3 3 5 97 6 1 5 5 32 5 78
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 40 values pushed */
            0 1 2 4 2 1 4 128 0 4 3 2 4 3 126 0 0 0 2 1 0 2 105 0 3
            5 5 3 89 0 3 3 5 97 6 1 5 3 5 81
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 14 values pushed */
          0 0 0 25 0 24 18 36 34 18 36 7 8 27
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="D" xMin="100" yMin="0" xMax="623" yMax="800">
      <contour>
        <pt x="100" y="800" on="1"/>
        <pt x="302" y="800" on="1"/>
        <pt x="462" y="800" on="0"/>
        <pt x="623" y="599" on="0"/>
        <pt x="623" y="400" on="1"/>
        <pt x="623" y="201" on="0"/>
        <pt x="462" y="0" on="0"/>
        <pt x="302" y="0" on="1"/>
        <pt x="100" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="302" y="96" on="1"/>
        <pt x="412" y="96" on="0"/>
        <pt x="523" y="249" on="0"/>
        <pt x="523" y="400" on="1"/>
        <pt x="523" y="551" on="0"/>
        <pt x="412" y="704" on="0"/>
        <pt x="302" y="704" on="1"/>
        <pt x="200" y="704" on="1"/>
        <pt x="200" y="96" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 22 values pushed */
            0 3 3 0 95 0 0 0 25 77 4 1 2 2 1 95 0 1 1 26 1 78
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 26 values pushed */
            0 0 0 3 2 0 3 103 4 1 2 1 1 2 87 4 1 2 2 1 95 0 1 2 1
            79
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 13 values pushed */
          10 9 16 14 9 17 10 17 36 32 5 8 24
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="E" xMin="142" yMin="0" xMax="609" yMax="800">
      <contour>
        <pt x="142" y="800" on="1"/>
        <pt x="609" y="800" on="1"/>
        <pt x="609" y="704" on="1"/>
        <pt x="242" y="704" on="1"/>
        <pt x="242" y="449" on="1"/>
        <pt x="552" y="449" on="1"/>
        <pt x="552" y="357" on="1"/>
        <pt x="242" y="357" on="1"/>
        <pt x="242" y="96" on="1"/>
        <pt x="589" y="96" on="1"/>
        <pt x="589" y="0" on="1"/>
        <pt x="142" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 29 values pushed */
            0 2 0 3 4 2 3 103 0 1 1 0 95 0 0 0 25 77 0 4 4 5 95 0 5
            5 26 5 78
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 32 values pushed */
            0 0 0 1 2 0 1 103 0 2 0 3 4 2 3 103 0 4 5 5 4 87 0 4 4
            5 95 0 5 4 5 79
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 9 values pushed */
          17 17 17 17 17 16 6 8 28
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Euro" xMin="40" yMin="-15" xMax="643" yMax="815">
      <contour>
        <pt x="284" y="-15" on="0"/>
        <pt x="156" y="134" on="0"/>
        <pt x="139" y="282" on="1"/>
        <pt x="40" y="282" on="1"/>
        <pt x="40" y="363" on="1"/>
        <pt x="134" y="363" on="1"/>
        <pt x="133" y="375" on="0"/>
        <pt x="133" y="400" on="1"/>
        <pt x="133" y="436" on="0"/>
        <pt x="134" y="453" on="1"/>
        <pt x="40" y="453" on="1"/>
        <pt x="40" y="534" on="1"/>
        <pt x="141" y="534" on="1"/>
        <pt x="180" y="815" on="0"/>
        <pt x="396" y="815" on="1"/>
        <pt x="506" y="815" on="0"/>
        <pt x="632" y="674" on="0"/>
        <pt x="643" y="540" on="1"/>
        <pt x="547" y="540" on="1"/>
        <pt x="537" y="632" on="0"/>
        <pt x="463" y="720" on="0"/>
        <pt x="396" y="720" on="1"/>
        <pt x="331" y="720" on="0"/>
        <pt x="254" y="628" on="0"/>
        <pt x="240" y="534" on="1"/>
        <pt x="461" y="534" on="1"/>
        <pt x="461" y="453" on="1"/>
        <pt x="232" y="453" on="1"/>
        <pt x="231" y="436" on="0"/>
        <pt x="231" y="400" on="1"/>
        <pt x="232" y="363" on="1"/>
        <pt x="461" y="363" on="1"/>
        <pt x="461" y="282" on="1"/>
        <pt x="237" y="282" on="1"/>
        <pt x="250" y="179" on="0"/>
        <pt x="327" y="80" on="0"/>
        <pt x="393" y="80" on="1"/>
        <pt x="453" y="80" on="0"/>
        <pt x="520" y="158" on="0"/>
        <pt x="530" y="240" on="1"/>
        <pt x="627" y="240" on="1"/>
        <pt x="615" y="116" on="0"/>
        <pt x="494" y="-15" on="0"/>
        <pt x="393" y="-15" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 58 values pushed */
            0 5 6 3 6 5 3 128 0 12 0 11 0 12 11 128 7 1 3 8 1 2 1 3 2
            103 9 1 1 10 1 0 12 1 0 103 0 6 6 4 97 0 4 4 31 77 0 11 11 13
            97 14 1 13 13 32 13 78
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 61 values pushed */
            0 5 6 3 6 5 3 128 0 12 0 11 0 12 11 128 0 4 0 6 5 4 6 105 7
            1 3 8 1 2 1 3 2 103 9 1 1 10 1 0 12 1 0 103 0 11 13 13 11 89
            0 11 11 13 97 14 1 13 11 13 81
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 26 values pushed */
          0 0 0 43 0 42 40 39 37 35 33 32 31 30 17 18 34 18 33 17 20 17 18 15 8
          31
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="F" xMin="160" yMin="0" xMax="627" yMax="800">
      <contour>
        <pt x="160" y="800" on="1"/>
        <pt x="627" y="800" on="1"/>
        <pt x="627" y="704" on="1"/>
        <pt x="260" y="704" on="1"/>
        <pt x="260" y="439" on="1"/>
        <pt x="580" y="439" on="1"/>
        <pt x="580" y="343" on="1"/>
        <pt x="260" y="343" on="1"/>
        <pt x="260" y="0" on="1"/>
        <pt x="160" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 24 values pushed */
            0 2 0 3 4 2 3 103 0 1 1 0 95 0 0 0 25 77 0 4 4 26 4 78
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 29 values pushed */
            0 4 3 4 134 0 0 0 1 2 0 1 103 0 2 3 3 2 87 0 2 2 3 95 0
            3 2 3 79
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 8 values pushed */
          17 17 17 17 16 5 8 27
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="G" xMin="77" yMin="-15" xMax="628" yMax="815">
      <contour>
        <pt x="212" y="-15" on="0"/>
        <pt x="77" y="196" on="0"/>
        <pt x="77" y="400" on="1"/>
        <pt x="77" y="606" on="0"/>
        <pt x="224" y="815" on="0"/>
        <pt x="367" y="815" on="1"/>
        <pt x="481" y="815" on="0"/>
        <pt x="614" y="677" on="0"/>
        <pt x="628" y="544" on="1"/>
        <pt x="530" y="544" on="1"/>
        <pt x="519" y="633" on="0"/>
        <pt x="439" y="720" on="0"/>
        <pt x="367" y="720" on="1"/>
        <pt x="270" y="720" on="0"/>
        <pt x="177" y="563" on="0"/>
        <pt x="177" y="400" on="1"/>
        <pt x="177" y="236" on="0"/>
        <pt x="268" y="77" on="0"/>
        <pt x="361" y="77" on="1"/>
        <pt x="431" y="77" on="0"/>
        <pt x="510" y="185" on="0"/>
        <pt x="521" y="298" on="1"/>
        <pt x="341" y="298" on="1"/>
        <pt x="341" y="394" on="1"/>
        <pt x="604" y="394" on="1"/>
        <pt x="604" y="0" on="1"/>
        <pt x="518" y="0" on="1"/>
        <pt x="518" y="92" on="1"/>
        <pt x="490" y="92" on="1"/>
        <pt x="456" y="-15" on="0"/>
        <pt x="335" y="-15" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          16
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 47 values pushed */
            0 1 2 5 2 1 5 128 0 7 4 3 4 7 3 128 0 5 0 4 7 5 4 103 0
            2 2 0 97 0 0 0 31 77 0 3 3 6 97 9 8 2 6 6 26 6 78
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            50
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 51 values pushed */
              0 1 2 5 2 1 5 128 0 7 4 3 4 7 3 128 0 5 0 4 7 5 4 103 0
              2 2 0 97 0 0 0 31 77 0 6 6 26 77 0 3 3 8 97 9 1 8 8 32 8
              78
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 57 values pushed */
              0 1 2 5 2 1 5 128 0 7 4 3 4 7 3 128 0 6 3 8 3 6 8 128 0
              0 0 2 1 0 2 105 0 5 0 4 7 5 4 103 0 3 6 8 3 89 0 3 3 8
              97 9 1 8 3 8 81
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 17 values pushed */
          0 0 0 30 0 29 17 17 17 18 36 34 18 36 10 8 30
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="H" xMin="100" yMin="0" xMax="600" yMax="800">
      <contour>
        <pt x="200" y="800" on="1"/>
        <pt x="200" y="450" on="1"/>
        <pt x="500" y="450" on="1"/>
        <pt x="500" y="800" on="1"/>
        <pt x="600" y="800" on="1"/>
        <pt x="600" y="0" on="1"/>
        <pt x="500" y="0" on="1"/>
        <pt x="500" y="356" on="1"/>
        <pt x="200" y="356" on="1"/>
        <pt x="200" y="0" on="1"/>
        <pt x="100" y="0" on="1"/>
        <pt x="100" y="800" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 22 values pushed */
            0 0 0 3 2 0 3 103 6 5 2 1 1 25 77 4 1 2 2 26 2 78
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 29 values pushed */
            6 5 2 1 0 2 1 87 0 0 0 3 2 0 3 103 6 5 2 1 1 2 95 4 1
            2 1 2 79
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 14 values pushed */
          0 0 0 11 0 11 17 17 17 17 17 7 8 27
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="I" xMin="120" yMin="0" xMax="580" yMax="800">
      <contour>
        <pt x="120" y="96" on="1"/>
        <pt x="300" y="96" on="1"/>
        <pt x="300" y="704" on="1"/>
        <pt x="120" y="704" on="1"/>
        <pt x="120" y="800" on="1"/>
        <pt x="580" y="800" on="1"/>
        <pt x="580" y="704" on="1"/>
        <pt x="400" y="704" on="1"/>
        <pt x="400" y="96" on="1"/>
        <pt x="580" y="96" on="1"/>
        <pt x="580" y="0" on="1"/>
        <pt x="120" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 23 values pushed */
            3 1 1 1 2 95 0 2 2 25 77 4 1 0 0 5 95 0 5 5 26 5 78
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 27 values pushed */
            0 2 3 1 1 0 2 1 103 4 1 0 5 5 0 87 4 1 0 0 5 95 0 5 0
            5 79
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 9 values pushed */
          17 17 17 17 17 16 6 8 28
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="J" xMin="101" yMin="-15" xMax="573" yMax="800">
      <contour>
        <pt x="226" y="-15" on="0"/>
        <pt x="101" y="116" on="0"/>
        <pt x="101" y="231" on="1"/>
        <pt x="101" y="350" on="1"/>
        <pt x="199" y="350" on="1"/>
        <pt x="199" y="231" on="1"/>
        <pt x="199" y="159" on="0"/>
        <pt x="270" y="81" on="0"/>
        <pt x="336" y="81" on="1"/>
        <pt x="402" y="81" on="0"/>
        <pt x="473" y="159" on="0"/>
        <pt x="473" y="231" on="1"/>
        <pt x="473" y="704" on="1"/>
        <pt x="155" y="704" on="1"/>
        <pt x="155" y="800" on="1"/>
        <pt x="573" y="800" on="1"/>
        <pt x="573" y="231" on="1"/>
        <pt x="573" y="115" on="0"/>
        <pt x="448" y="-15" on="0"/>
        <pt x="336" y="-15" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 30 values pushed */
            0 0 2 1 2 0 1 128 0 2 2 3 95 0 3 3 25 77 0 1 1 4 97 5 1
            4 4 32 4 78
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 33 values pushed */
            0 0 2 1 2 0 1 128 0 3 0 2 0 3 2 103 0 1 4 4 1 89 0 1 1
            4 97 5 1 4 1 4 81
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 13 values pushed */
          0 0 0 19 0 18 17 19 35 19 6 8 26
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="K" xMin="139" yMin="0" xMax="665" yMax="800">
      <contour>
        <pt x="238" y="800" on="1"/>
        <pt x="238" y="425" on="1"/>
        <pt x="544" y="800" on="1"/>
        <pt x="665" y="800" on="1"/>
        <pt x="327" y="390" on="1"/>
        <pt x="650" y="0" on="1"/>
        <pt x="524" y="0" on="1"/>
        <pt x="238" y="349" on="1"/>
        <pt x="238" y="0" on="1"/>
        <pt x="139" y="0" on="1"/>
        <pt x="139" y="800" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          7 4 1 3 1 0 1 76
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 14 values pushed */
            4 3 2 0 0 25 77 2 1 1 1 26 1 78
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 21 values pushed */
            4 3 2 0 1 1 0 87 4 3 2 0 0 1 95 2 1 1 0 1 79
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 12 values pushed */
          0 0 0 10 0 10 18 18 18 5 8 25
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="L" xMin="177" yMin="0" xMax="626" yMax="800">
      <contour>
        <pt x="177" y="800" on="1"/>
        <pt x="277" y="800" on="1"/>
        <pt x="277" y="96" on="1"/>
        <pt x="626" y="96" on="1"/>
        <pt x="626" y="0" on="1"/>
        <pt x="177" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 16 values pushed */
            0 0 0 25 77 0 1 1 2 96 0 2 2 26 2 78
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 21 values pushed */
            0 0 1 0 133 0 1 2 2 1 87 0 1 1 2 96 0 2 1 2 80
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 6 values pushed */
          17 17 16 3 8 25
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="M" xMin="78" yMin="0" xMax="622" yMax="800">
      <contour>
        <pt x="78" y="800" on="1"/>
        <pt x="245" y="800" on="1"/>
        <pt x="348" y="332" on="1"/>
        <pt x="357" y="332" on="1"/>
        <pt x="460" y="800" on="1"/>
        <pt x="622" y="800" on="1"/>
        <pt x="622" y="0" on="1"/>
        <pt x="526" y="0" on="1"/>
        <pt x="526" y="515" on="1"/>
        <pt x="533" y="724" on="1"/>
        <pt x="523" y="724" on="1"/>
        <pt x="421" y="274" on="1"/>
        <pt x="279" y="274" on="1"/>
        <pt x="177" y="724" on="1"/>
        <pt x="167" y="724" on="1"/>
        <pt x="174" y="515" on="1"/>
        <pt x="174" y="0" on="1"/>
        <pt x="78" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 27 values pushed */
            0 1 0 5 3 1 5 103 6 1 4 4 0 95 2 1 0 0 25 77 7 1 3 3 26
            3 78
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 32 values pushed */
            7 1 3 5 3 134 2 1 0 6 1 4 1 0 4 103 0 1 5 5 1 87 0 1 1
            5 95 0 5 1 5 79
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 11 values pushed */
          18 17 17 18 17 17 17 16 8 8 30
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="N" xMin="100" yMin="0" xMax="600" yMax="800">
      <contour>
        <pt x="100" y="800" on="1"/>
        <pt x="280" y="800" on="1"/>
        <pt x="497" y="68" on="1"/>
        <pt x="506" y="68" on="1"/>
        <pt x="500" y="269" on="1"/>
        <pt x="500" y="800" on="1"/>
        <pt x="600" y="800" on="1"/>
        <pt x="600" y="0" on="1"/>
        <pt x="420" y="0" on="1"/>
        <pt x="203" y="732" on="1"/>
        <pt x="194" y="732" on="1"/>
        <pt x="200" y="532" on="1"/>
        <pt x="200" y="0" on="1"/>
        <pt x="100" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 23 values pushed */
            0 4 4 0 95 2 1 0 0 25 77 0 1 1 3 96 5 1 3 3 26 3 78
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 26 values pushed */
            2 1 0 0 4 1 0 4 103 0 1 3 3 1 87 0 1 1 3 96 5 1 3 1 3
            80
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 9 values pushed */
          18 17 17 18 17 16 6 8 28
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="O" xMin="65" yMin="-15" xMax="635" yMax="815">
      <contour>
        <pt x="65" y="-15" on="0"/>
        <pt x="65" y="400" on="1"/>
        <pt x="65" y="815" on="0"/>
        <pt x="350" y="815" on="1"/>
        <pt x="635" y="815" on="0"/>
        <pt x="635" y="400" on="1"/>
        <pt x="635" y="-15" on="0"/>
        <pt x="350" y="-15" on="1"/>
      </contour>
      <contour>
        <pt x="164" y="236" on="0"/>
        <pt x="255" y="78" on="0"/>
        <pt x="350" y="78" on="1"/>
        <pt x="445" y="78" on="0"/>
        <pt x="536" y="236" on="0"/>
        <pt x="536" y="400" on="1"/>
        <pt x="536" y="564" on="0"/>
        <pt x="445" y="722" on="0"/>
        <pt x="350" y="722" on="1"/>
        <pt x="255" y="722" on="0"/>
        <pt x="164" y="564" on="0"/>
        <pt x="164" y="400" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 22 values pushed */
            0 3 3 0 97 0 0 0 31 77 0 2 2 1 97 4 1 1 1 32 1 78
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 25 values pushed */
            0 0 0 3 2 0 3 105 0 2 1 1 2 89 0 2 2 1 97 4 1 1 2 1 81
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 14 values pushed */
          0 0 17 15 11 9 0 7 0 6 34 5 8 23
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="P" xMin="137" yMin="0" xMax="650" yMax="800">
      <contour>
        <pt x="137" y="800" on="1"/>
        <pt x="403" y="800" on="1"/>
        <pt x="518" y="800" on="0"/>
        <pt x="650" y="676" on="0"/>
        <pt x="650" y="567" on="1"/>
        <pt x="650" y="459" on="0"/>
        <pt x="518" y="336" on="0"/>
        <pt x="403" y="336" on="1"/>
        <pt x="237" y="336" on="1"/>
        <pt x="237" y="0" on="1"/>
        <pt x="137" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="407" y="428" on="1"/>
        <pt x="474" y="428" on="0"/>
        <pt x="550" y="502" on="0"/>
        <pt x="550" y="566" on="1"/>
        <pt x="550" y="630" on="0"/>
        <pt x="474" y="704" on="0"/>
        <pt x="407" y="704" on="1"/>
        <pt x="237" y="704" on="1"/>
        <pt x="237" y="428" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 25 values pushed */
            5 1 3 0 1 2 3 1 103 0 4 4 0 95 0 0 0 25 77 0 2 2 26 2 78
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 31 values pushed */
            0 2 1 2 134 0 0 0 4 3 0 4 103 5 1 3 1 1 3 87 5 1 3 3 1
            95 0 1 3 1 79
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 14 values pushed */
          12 11 18 16 11 19 12 19 17 36 32 6 8 25
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Q" xMin="65" yMin="-215" xMax="635" yMax="815">
      <contour>
        <pt x="445" y="78" on="0"/>
        <pt x="536" y="236" on="0"/>
        <pt x="536" y="400" on="1"/>
        <pt x="536" y="564" on="0"/>
        <pt x="445" y="722" on="0"/>
        <pt x="350" y="722" on="1"/>
        <pt x="255" y="722" on="0"/>
        <pt x="164" y="564" on="0"/>
        <pt x="164" y="400" on="1"/>
        <pt x="164" y="236" on="0"/>
        <pt x="255" y="78" on="0"/>
        <pt x="350" y="78" on="1"/>
      </contour>
      <contour>
        <pt x="65" y="815" on="0"/>
        <pt x="350" y="815" on="1"/>
        <pt x="635" y="815" on="0"/>
        <pt x="635" y="400" on="1"/>
        <pt x="635" y="-1" on="0"/>
        <pt x="371" y="-14" on="1"/>
        <pt x="605" y="-120" on="1"/>
        <pt x="605" y="-215" on="1"/>
        <pt x="332" y="-92" on="1"/>
        <pt x="332" y="-15" on="1"/>
        <pt x="65" y="-2" on="0"/>
        <pt x="65" y="400" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 6 values pushed */
          20 19 18 3 3 73
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          9
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 23 values pushed */
            0 0 0 2 97 0 2 2 31 77 5 1 1 1 3 97 4 1 3 3 26 3 78
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            50
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 23 values pushed */
              0 0 0 2 97 0 2 2 31 77 5 1 1 1 3 97 4 1 3 3 32 3 78
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 27 values pushed */
              0 2 0 0 1 2 0 105 5 1 1 3 3 1 89 5 1 1 1 3 97 4 1 3 1
              3 81
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 16 values pushed */
          0 0 22 21 17 16 14 12 0 11 0 10 36 6 8 23
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="R" xMin="121" yMin="0" xMax="652" yMax="800">
      <contour>
        <pt x="121" y="800" on="1"/>
        <pt x="382" y="800" on="1"/>
        <pt x="499" y="800" on="0"/>
        <pt x="635" y="677" on="0"/>
        <pt x="635" y="571" on="1"/>
        <pt x="635" y="480" on="0"/>
        <pt x="529" y="365" on="0"/>
        <pt x="436" y="352" on="1"/>
        <pt x="652" y="0" on="1"/>
        <pt x="536" y="0" on="1"/>
        <pt x="330" y="348" on="1"/>
        <pt x="221" y="348" on="1"/>
        <pt x="221" y="0" on="1"/>
        <pt x="121" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="385" y="437" on="1"/>
        <pt x="456" y="437" on="0"/>
        <pt x="535" y="507" on="0"/>
        <pt x="535" y="571" on="1"/>
        <pt x="535" y="634" on="0"/>
        <pt x="456" y="704" on="0"/>
        <pt x="385" y="704" on="1"/>
        <pt x="221" y="704" on="1"/>
        <pt x="221" y="437" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 6 values pushed */
          7 1 2 4 1 76
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 26 values pushed */
            6 1 4 0 2 1 4 2 103 0 5 5 0 95 0 0 0 25 77 3 1 1 1 26 1
            78
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 32 values pushed */
            3 1 1 2 1 134 0 0 0 5 4 0 5 103 6 1 4 2 2 4 87 6 1 4 4
            2 95 0 2 4 2 79
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 15 values pushed */
          15 14 21 19 14 22 15 22 17 17 22 32 7 8 26
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="S" xMin="92" yMin="-15" xMax="632" yMax="815">
      <contour>
        <pt x="209" y="81" on="0"/>
        <pt x="360" y="81" on="1"/>
        <pt x="432" y="81" on="0"/>
        <pt x="513" y="154" on="0"/>
        <pt x="513" y="221" on="1"/>
        <pt x="513" y="275" on="0"/>
        <pt x="454" y="335" on="0"/>
        <pt x="393" y="343" on="1"/>
        <pt x="311" y="354" on="1"/>
        <pt x="101" y="382" on="0"/>
        <pt x="101" y="577" on="1"/>
        <pt x="101" y="649" on="0"/>
        <pt x="165" y="757" on="0"/>
        <pt x="283" y="815" on="0"/>
        <pt x="362" y="815" on="1"/>
        <pt x="483" y="815" on="0"/>
        <pt x="622" y="692" on="0"/>
        <pt x="632" y="576" on="1"/>
        <pt x="532" y="576" on="1"/>
        <pt x="517" y="719" on="0"/>
        <pt x="362" y="719" on="1"/>
        <pt x="286" y="719" on="0"/>
        <pt x="201" y="644" on="0"/>
        <pt x="201" y="577" on="1"/>
        <pt x="201" y="523" on="0"/>
        <pt x="260" y="463" on="0"/>
        <pt x="321" y="455" on="1"/>
        <pt x="403" y="444" on="1"/>
        <pt x="613" y="416" on="0"/>
        <pt x="613" y="221" on="1"/>
        <pt x="613" y="149" on="0"/>
        <pt x="551" y="42" on="0"/>
        <pt x="437" y="-15" on="0"/>
        <pt x="360" y="-15" on="1"/>
        <pt x="241" y="-15" on="0"/>
        <pt x="103" y="97" on="0"/>
        <pt x="92" y="204" on="1"/>
        <pt x="194" y="204" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 36 values pushed */
            0 2 3 5 3 2 5 128 0 5 0 3 5 0 126 0 3 3 1 97 0 1 1 31 77
            0 0 0 4 97 0 4 4 32 4 78
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 39 values pushed */
            0 2 3 5 3 2 5 128 0 5 0 3 5 0 126 0 1 0 3 2 1 3 105 0 0
            4 4 0 89 0 0 0 4 97 0 4 0 4 81
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 9 values pushed */
          18 43 33 18 43 32 6 8 28
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="T" xMin="80" yMin="0" xMax="620" yMax="800">
      <contour>
        <pt x="300" y="704" on="1"/>
        <pt x="80" y="704" on="1"/>
        <pt x="80" y="800" on="1"/>
        <pt x="620" y="800" on="1"/>
        <pt x="620" y="704" on="1"/>
        <pt x="400" y="704" on="1"/>
        <pt x="400" y="0" on="1"/>
        <pt x="300" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 17 values pushed */
            2 1 0 0 1 95 0 1 1 25 77 0 3 3 26 3 78
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 22 values pushed */
            0 3 0 3 134 0 1 0 0 1 87 0 1 1 0 95 2 1 0 1 0 79
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 7 values pushed */
          17 17 17 16 4 8 26
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="U" xMin="91" yMin="-15" xMax="609" yMax="800">
      <contour>
        <pt x="191" y="800" on="1"/>
        <pt x="191" y="258" on="1"/>
        <pt x="191" y="173" on="0"/>
        <pt x="273" y="81" on="0"/>
        <pt x="350" y="81" on="1"/>
        <pt x="427" y="81" on="0"/>
        <pt x="509" y="173" on="0"/>
        <pt x="509" y="258" on="1"/>
        <pt x="509" y="800" on="1"/>
        <pt x="609" y="800" on="1"/>
        <pt x="609" y="258" on="1"/>
        <pt x="609" y="130" on="0"/>
        <pt x="472" y="-15" on="0"/>
        <pt x="350" y="-15" on="1"/>
        <pt x="228" y="-15" on="0"/>
        <pt x="91" y="130" on="0"/>
        <pt x="91" y="258" on="1"/>
        <pt x="91" y="800" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 18 values pushed */
            4 3 2 1 1 25 77 0 0 0 2 97 0 2 2 32 2 78
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 23 values pushed */
            4 3 2 1 0 1 133 0 0 2 2 0 89 0 0 0 2 97 0 2 0 2 81
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 12 values pushed */
          0 0 0 17 0 17 35 19 35 5 8 25
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="V" xMin="59" yMin="0" xMax="641" yMax="800">
      <contour>
        <pt x="353" y="65" on="1"/>
        <pt x="541" y="800" on="1"/>
        <pt x="641" y="800" on="1"/>
        <pt x="432" y="0" on="1"/>
        <pt x="268" y="0" on="1"/>
        <pt x="59" y="800" on="1"/>
        <pt x="164" y="800" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 12 values pushed */
            2 1 0 0 25 77 0 1 1 26 1 78
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 10 values pushed */
            2 1 0 1 0 133 0 1 1 118
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 6 values pushed */
          17 17 17 3 8 25
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="W" xMin="28" yMin="0" xMax="672" yMax="800">
      <contour>
        <pt x="213" y="119" on="1"/>
        <pt x="284" y="598" on="1"/>
        <pt x="423" y="598" on="1"/>
        <pt x="491" y="120" on="1"/>
        <pt x="570" y="800" on="1"/>
        <pt x="672" y="800" on="1"/>
        <pt x="566" y="0" on="1"/>
        <pt x="423" y="0" on="1"/>
        <pt x="351" y="497" on="1"/>
        <pt x="277" y="0" on="1"/>
        <pt x="134" y="0" on="1"/>
        <pt x="28" y="800" on="1"/>
        <pt x="135" y="800" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          8 3 2 2 0 1 76
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 18 values pushed */
            4 1 1 1 25 77 0 0 0 28 77 3 1 2 2 26 2 78
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 16 values pushed */
            4 1 1 0 1 133 0 0 2 0 133 3 1 2 2 118
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 8 values pushed */
          17 18 17 18 17 5 8 27
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="X" xMin="59" yMin="0" xMax="641" yMax="800">
      <contour>
        <pt x="350" y="435" on="1"/>
        <pt x="531" y="800" on="1"/>
        <pt x="641" y="800" on="1"/>
        <pt x="433" y="386" on="1"/>
        <pt x="627" y="0" on="1"/>
        <pt x="510" y="0" on="1"/>
        <pt x="350" y="336" on="1"/>
        <pt x="186" y="0" on="1"/>
        <pt x="73" y="0" on="1"/>
        <pt x="268" y="386" on="1"/>
        <pt x="59" y="800" on="1"/>
        <pt x="174" y="800" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          9 6 3 3 1 0 1 76
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 13 values pushed */
            3 1 0 0 25 77 2 1 1 1 26 1 78
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 19 values pushed */
            3 1 0 1 1 0 87 3 1 0 0 1 95 2 1 1 0 1 79
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 7 values pushed */
          18 18 18 17 4 8 26
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Y" xMin="49" yMin="0" xMax="651" yMax="800">
      <contour>
        <pt x="351" y="446" on="1"/>
        <pt x="541" y="800" on="1"/>
        <pt x="651" y="800" on="1"/>
        <pt x="400" y="346" on="1"/>
        <pt x="400" y="0" on="1"/>
        <pt x="300" y="0" on="1"/>
        <pt x="300" y="346" on="1"/>
        <pt x="49" y="800" on="1"/>
        <pt x="161" y="800" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          6 3 2 1 0 1 76
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 12 values pushed */
            2 1 0 0 25 77 0 1 1 26 1 78
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 10 values pushed */
            2 1 0 1 0 133 0 1 1 118
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 6 values pushed */
          18 18 17 3 8 25
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Z" xMin="108" yMin="0" xMax="592" yMax="800">
      <contour>
        <pt x="108" y="170" on="1"/>
        <pt x="532" y="704" on="1"/>
        <pt x="108" y="704" on="1"/>
        <pt x="108" y="800" on="1"/>
        <pt x="592" y="800" on="1"/>
        <pt x="592" y="630" on="1"/>
        <pt x="168" y="96" on="1"/>
        <pt x="592" y="96" on="1"/>
        <pt x="592" y="0" on="1"/>
        <pt x="108" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          5 0 2 2 0 1 76
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 21 values pushed */
            0 0 0 1 95 0 1 1 25 77 0 2 2 3 95 0 3 3 26 3 78
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 24 values pushed */
            0 1 0 0 2 1 0 103 0 2 3 3 2 87 0 2 2 3 95 0 3 2 3 79
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 7 values pushed */
          17 18 17 17 4 8 26
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="_part.multiply" xMin="118" yMin="118" xMax="582" yMax="582">
      <contour>
        <pt x="118" y="524" on="1"/>
        <pt x="176" y="582" on="1"/>
        <pt x="582" y="176" on="1"/>
        <pt x="524" y="118" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 4 values pushed */
          3 1 1 50
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="a" xMin="76" yMin="-15" xMax="567" yMax="613">
      <contour>
        <pt x="86" y="495" on="0"/>
        <pt x="226" y="613" on="0"/>
        <pt x="337" y="613" on="1"/>
        <pt x="447" y="613" on="0"/>
        <pt x="567" y="506" on="0"/>
        <pt x="567" y="409" on="1"/>
        <pt x="567" y="0" on="1"/>
        <pt x="471" y="0" on="1"/>
        <pt x="471" y="71" on="1"/>
        <pt x="443" y="71" on="1"/>
        <pt x="427" y="30" on="0"/>
        <pt x="344" y="-15" on="0"/>
        <pt x="287" y="-15" on="1"/>
        <pt x="204" y="-15" on="0"/>
        <pt x="107" y="76" on="0"/>
        <pt x="107" y="154" on="1"/>
        <pt x="107" y="227" on="0"/>
        <pt x="198" y="322" on="0"/>
        <pt x="284" y="337" on="1"/>
        <pt x="471" y="367" on="1"/>
        <pt x="471" y="392" on="1"/>
        <pt x="471" y="456" on="0"/>
        <pt x="402" y="523" on="0"/>
        <pt x="337" y="523" on="1"/>
        <pt x="267" y="523" on="0"/>
        <pt x="183" y="455" on="0"/>
        <pt x="175" y="393" on="1"/>
        <pt x="76" y="393" on="1"/>
      </contour>
      <contour>
        <pt x="206" y="117" on="0"/>
        <pt x="260" y="72" on="0"/>
        <pt x="309" y="72" on="1"/>
        <pt x="354" y="72" on="0"/>
        <pt x="428" y="116" on="0"/>
        <pt x="471" y="194" on="0"/>
        <pt x="471" y="242" on="1"/>
        <pt x="471" y="280" on="1"/>
        <pt x="301" y="252" on="1"/>
        <pt x="255" y="244" on="0"/>
        <pt x="206" y="196" on="0"/>
        <pt x="206" y="158" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          35 19 2 6 5 1 76
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          16
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 38 values pushed */
            0 5 4 6 4 5 6 128 0 2 6 1 6 2 1 128 0 4 4 0 97 0 0 0 34
            77 0 6 6 1 97 3 1 1 1 26 1 78
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            50
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 42 values pushed */
              0 5 4 6 4 5 6 128 0 2 6 1 6 2 1 128 0 4 4 0 97 0 0 0 34
              77 0 1 1 26 77 0 6 6 3 97 0 3 3 32 3 78
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 47 values pushed */
              0 5 4 6 4 5 6 128 0 2 6 1 6 2 1 128 0 1 3 6 1 3 126 0 0
              0 4 5 0 4 105 0 6 2 3 6 89 0 6 6 3 97 0 3 6 3 81
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 10 values pushed */
          34 18 41 34 17 19 33 7 8 29
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="ampersand" xMin="90" yMin="-23" xMax="610" yMax="815">
      <contour>
        <pt x="90" y="254" on="0"/>
        <pt x="131" y="344" on="0"/>
        <pt x="193" y="410" on="0"/>
        <pt x="239" y="447" on="1"/>
        <pt x="194" y="503" on="0"/>
        <pt x="154" y="595" on="0"/>
        <pt x="154" y="640" on="1"/>
        <pt x="154" y="722" on="0"/>
        <pt x="241" y="815" on="0"/>
        <pt x="317" y="815" on="1"/>
        <pt x="392" y="815" on="0"/>
        <pt x="478" y="722" on="0"/>
        <pt x="478" y="642" on="1"/>
        <pt x="478" y="577" on="0"/>
        <pt x="418" y="481" on="0"/>
        <pt x="364" y="434" on="1"/>
        <pt x="481" y="284" on="1"/>
        <pt x="492" y="339" on="0"/>
        <pt x="496" y="403" on="1"/>
        <pt x="592" y="403" on="1"/>
        <pt x="582" y="284" on="0"/>
        <pt x="551" y="195" on="1"/>
        <pt x="610" y="119" on="1"/>
        <pt x="610" y="-23" on="1"/>
        <pt x="509" y="105" on="1"/>
        <pt x="433" y="-15" on="0"/>
        <pt x="298" y="-15" on="1"/>
        <pt x="236" y="-15" on="0"/>
        <pt x="142" y="37" on="0"/>
        <pt x="90" y="133" on="0"/>
        <pt x="90" y="196" on="1"/>
      </contour>
      <contour>
        <pt x="192" y="146" on="0"/>
        <pt x="252" y="81" on="0"/>
        <pt x="301" y="81" on="1"/>
        <pt x="398" y="81" on="0"/>
        <pt x="447" y="183" on="1"/>
        <pt x="295" y="376" on="1"/>
        <pt x="245" y="332" on="0"/>
        <pt x="192" y="252" on="0"/>
        <pt x="192" y="199" on="1"/>
      </contour>
      <contour>
        <pt x="253" y="604" on="0"/>
        <pt x="276" y="545" on="0"/>
        <pt x="301" y="514" on="1"/>
        <pt x="308" y="505" on="1"/>
        <pt x="342" y="536" on="0"/>
        <pt x="379" y="600" on="0"/>
        <pt x="379" y="639" on="1"/>
        <pt x="379" y="676" on="0"/>
        <pt x="346" y="719" on="0"/>
        <pt x="317" y="719" on="1"/>
        <pt x="288" y="719" on="0"/>
        <pt x="253" y="675" on="0"/>
        <pt x="253" y="637" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 21 values pushed */
          43 15 3 3 1 4 36 35 24 22 21 16 6 3 1 2 76 23 1 2 73
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 29 values pushed */
            0 1 4 3 4 1 3 128 0 4 4 0 97 0 0 0 31 77 0 3 3 2 97 0 2
            2 32 2 78
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 32 values pushed */
            0 1 4 3 4 1 3 128 0 0 0 4 1 0 4 105 0 3 2 2 3 89 0 3 3
            2 97 0 2 3 2 81
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 8 values pushed */
          46 37 38 24 40 5 8 27
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="approxequal" xMin="80" yMin="121" xMax="620" yMax="579">
      <component glyphName="asciitilde" x="0" y="123" flags="0x4"/>
      <component glyphName="asciitilde" x="0" y="-123" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 2 values pushed */
          0 1
          PUSHB[ ]	/* 1 value pushed */
          123
          PUSHB[ ]	/* 1 value pushed */
          53
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 2 values pushed */
          1 1
          PUSHW[ ]	/* 1 value pushed */
          -123
          PUSHB[ ]	/* 1 value pushed */
          53
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="approxequal.case" xMin="80" yMin="171" xMax="620" yMax="629">
      <component glyphName="approxequal" x="0" y="50" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 2 values pushed */
          0 2
          PUSHB[ ]	/* 1 value pushed */
          50
          PUSHB[ ]	/* 1 value pushed */
          53
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="asciicircum" xMin="125" yMin="517" xMax="575" yMax="815">
      <contour>
        <pt x="291" y="815" on="1"/>
        <pt x="409" y="815" on="1"/>
        <pt x="575" y="517" on="1"/>
        <pt x="480" y="517" on="1"/>
        <pt x="350" y="758" on="1"/>
        <pt x="220" y="517" on="1"/>
        <pt x="125" y="517" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 2 values pushed */
          6 100
          WCVTP[ ]	/* WriteCVTInPixels */
          NPUSHB[ ]	/* 22 values pushed */
          4 1 1 0 1 76 0 0 1 0 133 2 1 1 1 118 18 17 16 3 8 25
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 2 values pushed */
          6 0
          WCVTP[ ]	/* WriteCVTInPixels */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="asciitilde" xMin="80" yMin="244" xMax="620" yMax="456">
      <contour>
        <pt x="426" y="244" on="0"/>
        <pt x="361" y="282" on="0"/>
        <pt x="320" y="319" on="1"/>
        <pt x="291" y="346" on="0"/>
        <pt x="251" y="372" on="0"/>
        <pt x="227" y="372" on="1"/>
        <pt x="201" y="372" on="0"/>
        <pt x="166" y="331" on="0"/>
        <pt x="161" y="293" on="1"/>
        <pt x="80" y="293" on="1"/>
        <pt x="89" y="370" on="0"/>
        <pt x="167" y="456" on="0"/>
        <pt x="228" y="456" on="1"/>
        <pt x="274" y="456" on="0"/>
        <pt x="339" y="418" on="0"/>
        <pt x="380" y="381" on="1"/>
        <pt x="409" y="354" on="0"/>
        <pt x="449" y="328" on="0"/>
        <pt x="473" y="328" on="1"/>
        <pt x="499" y="328" on="0"/>
        <pt x="534" y="369" on="0"/>
        <pt x="539" y="407" on="1"/>
        <pt x="620" y="407" on="1"/>
        <pt x="611" y="330" on="0"/>
        <pt x="533" y="244" on="0"/>
        <pt x="472" y="244" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 2 values pushed */
          6 100
          WCVTP[ ]	/* WriteCVTInPixels */
          NPUSHB[ ]	/* 55 values pushed */
          0 4 2 0 2 4 0 128 0 1 3 5 3 1 5 128 0 2 0 0 3 2 0 105 0
          3 1 5 3 89 0 3 3 5 97 6 1 5 3 5 81 0 0 0 25 0 24 18 36 34
          18 36 7 8 27
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 2 values pushed */
          6 0
          WCVTP[ ]	/* WriteCVTInPixels */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="asciitilde.case" xMin="80" yMin="294" xMax="620" yMax="506">
      <component glyphName="asciitilde" x="0" y="50" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 2 values pushed */
          0 1
          PUSHB[ ]	/* 1 value pushed */
          50
          PUSHB[ ]	/* 1 value pushed */
          53
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="asterisk" xMin="105" yMin="348" xMax="595" yMax="815">
      <contour>
        <pt x="402" y="815" on="1"/>
        <pt x="387" y="625" on="1"/>
        <pt x="563" y="698" on="1"/>
        <pt x="595" y="599" on="1"/>
        <pt x="410" y="555" on="1"/>
        <pt x="534" y="409" on="1"/>
        <pt x="450" y="348" on="1"/>
        <pt x="350" y="511" on="1"/>
        <pt x="250" y="348" on="1"/>
        <pt x="166" y="409" on="1"/>
        <pt x="290" y="555" on="1"/>
        <pt x="105" y="599" on="1"/>
        <pt x="137" y="698" on="1"/>
        <pt x="313" y="625" on="1"/>
        <pt x="298" y="815" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 16 values pushed */
          13 12 11 10 9 8 7 6 5 4 3 2 1 13 0 73
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          34
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            PUSHB[ ]	/* 7 values pushed */
            1 1 0 0 25 0 78
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 5 values pushed */
            1 1 0 0 118
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 9 values pushed */
          0 0 0 14 0 14 2 8 22
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="at" xMin="66" yMin="-132" xMax="619" yMax="815">
      <contour>
        <pt x="66" y="-132" on="0"/>
        <pt x="66" y="340" on="1"/>
        <pt x="66" y="815" on="0"/>
        <pt x="374" y="815" on="1"/>
        <pt x="619" y="815" on="0"/>
        <pt x="619" y="518" on="1"/>
        <pt x="619" y="111" on="1"/>
        <pt x="550" y="111" on="1"/>
        <pt x="550" y="166" on="1"/>
        <pt x="522" y="166" on="1"/>
        <pt x="504" y="96" on="0"/>
        <pt x="419" y="96" on="1"/>
        <pt x="266" y="96" on="0"/>
        <pt x="266" y="340" on="1"/>
        <pt x="266" y="584" on="0"/>
        <pt x="419" y="584" on="1"/>
        <pt x="496" y="584" on="0"/>
        <pt x="514" y="514" on="1"/>
        <pt x="542" y="514" on="1"/>
        <pt x="542" y="518" on="1"/>
        <pt x="542" y="740" on="0"/>
        <pt x="374" y="740" on="1"/>
        <pt x="145" y="740" on="0"/>
        <pt x="145" y="340" on="1"/>
        <pt x="145" y="-59" on="0"/>
        <pt x="377" y="-59" on="1"/>
        <pt x="471" y="-59" on="0"/>
        <pt x="522" y="-23" on="1"/>
        <pt x="522" y="-95" on="1"/>
        <pt x="472" y="-132" on="0"/>
        <pt x="377" y="-132" on="1"/>
      </contour>
      <contour>
        <pt x="345" y="173" on="0"/>
        <pt x="446" y="173" on="1"/>
        <pt x="546" y="173" on="0"/>
        <pt x="546" y="340" on="1"/>
        <pt x="546" y="507" on="0"/>
        <pt x="446" y="507" on="1"/>
        <pt x="345" y="507" on="0"/>
        <pt x="345" y="340" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          16
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 10 values pushed */
            27 1 7 1 28 1 8 7 2 76
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 10 values pushed */
            27 1 7 3 28 1 8 7 2 76
          EIF[ ]	/* EndIf */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          16
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 52 values pushed */
            0 5 4 10 4 5 114 0 2 9 1 1 2 114 0 9 3 1 1 7 9 1 105 0 7
            11 1 8 7 8 101 0 6 6 0 97 0 0 0 31 77 0 10 10 4 97 0 4 4 28
            10 78
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            17
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 58 values pushed */
              0 5 4 10 4 5 114 0 2 9 1 3 2 114 0 1 3 9 1 3 126 0 9 0 3
              7 9 3 105 0 7 11 1 8 7 8 101 0 6 6 0 97 0 0 0 31 77 0 10 10
              4 97 0 4 4 28 10 78
            ELSE[ ]	/* Else */
              MPPEM[ ]	/* MeasurePixelPerEm */
              PUSHB[ ]	/* 1 value pushed */
              35
              LT[ ]	/* LessThan */
              IF[ ]	/* If */
                NPUSHB[ ]	/* 60 values pushed */
                0 5 4 10 4 5 10 128 0 2 9 1 9 2 1 128 0 1 3 9 1 3 126 0 9
                0 3 7 9 3 105 0 7 11 1 8 7 8 101 0 6 6 0 97 0 0 0 31 77 0
                10 10 4 97 0 4 4 28 10 78
              ELSE[ ]	/* Else */
                MPPEM[ ]	/* MeasurePixelPerEm */
                PUSHB[ ]	/* 1 value pushed */
                50
                LT[ ]	/* LessThan */
                IF[ ]	/* If */
                  NPUSHB[ ]	/* 58 values pushed */
                  0 5 4 10 4 5 10 128 0 2 9 1 9 2 1 128 0 1 3 9 1 3 126 0 4
                  0 10 9 4 10 105 0 9 0 3 7 9 3 105 0 7 11 1 8 7 8 101 0 6 6
                  0 97 0 0 0 31 6 78
                ELSE[ ]	/* Else */
                  NPUSHB[ ]	/* 64 values pushed */
                  0 5 4 10 4 5 10 128 0 2 9 1 9 2 1 128 0 1 3 9 1 3 126 0 0
                  0 6 4 0 6 105 0 4 0 10 9 4 10 105 0 9 0 3 7 9 3 105 0 7 8
                  8 7 89 0 7 7 8 97 11 1 8 7 8 81
                EIF[ ]	/* EndIf */
              EIF[ ]	/* EndIf */
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 21 values pushed */
          0 0 37 35 33 31 0 30 0 29 34 34 17 34 33 17 18 34 12 8 30
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="b" xMin="113" yMin="-15" xMax="632" yMax="848">
      <contour>
        <pt x="335" y="-15" on="0"/>
        <pt x="252" y="37" on="0"/>
        <pt x="237" y="85" on="1"/>
        <pt x="209" y="85" on="1"/>
        <pt x="209" y="0" on="1"/>
        <pt x="113" y="0" on="1"/>
        <pt x="113" y="848" on="1"/>
        <pt x="209" y="848" on="1"/>
        <pt x="209" y="513" on="1"/>
        <pt x="237" y="513" on="1"/>
        <pt x="252" y="561" on="0"/>
        <pt x="335" y="613" on="0"/>
        <pt x="396" y="613" on="1"/>
        <pt x="468" y="613" on="0"/>
        <pt x="575" y="537" on="0"/>
        <pt x="632" y="395" on="0"/>
        <pt x="632" y="299" on="1"/>
        <pt x="632" y="203" on="0"/>
        <pt x="575" y="61" on="0"/>
        <pt x="468" y="-15" on="0"/>
        <pt x="396" y="-15" on="1"/>
      </contour>
      <contour>
        <pt x="204" y="192" on="0"/>
        <pt x="291" y="73" on="0"/>
        <pt x="369" y="73" on="1"/>
        <pt x="447" y="73" on="0"/>
        <pt x="534" y="192" on="0"/>
        <pt x="534" y="299" on="1"/>
        <pt x="534" y="406" on="0"/>
        <pt x="447" y="524" on="0"/>
        <pt x="369" y="524" on="1"/>
        <pt x="291" y="524" on="0"/>
        <pt x="204" y="406" on="0"/>
        <pt x="204" y="299" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          16
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 36 values pushed */
            0 3 0 0 6 3 0 103 0 2 2 27 77 0 7 7 4 97 0 4 4 34 77 0 6
            6 1 97 8 5 2 1 1 26 1 78
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            50
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 40 values pushed */
              0 3 0 0 6 3 0 103 0 2 2 27 77 0 7 7 4 97 0 4 4 34 77 0 1
              1 26 77 0 6 6 5 97 8 1 5 5 32 5 78
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 35 values pushed */
              0 4 0 7 3 4 7 105 0 3 0 0 6 3 0 103 0 6 8 1 5 6 5 101 0
              1 1 2 95 0 2 2 27 1 78
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 18 values pushed */
          0 0 30 28 24 22 0 20 0 19 34 17 17 17 18 9 8 27
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="backslash" xMin="129" yMin="-170" xMax="571" yMax="848">
      <contour>
        <pt x="224" y="848" on="1"/>
        <pt x="571" y="-170" on="1"/>
        <pt x="476" y="-170" on="1"/>
        <pt x="129" y="848" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 22 values pushed */
          0 0 1 0 134 2 1 1 1 27 1 78 0 0 0 3 0 3 17 3 8 23
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="bar" xMin="309" yMin="-60" xMax="391" yMax="860">
      <contour>
        <pt x="391" y="-60" on="1"/>
        <pt x="309" y="-60" on="1"/>
        <pt x="309" y="860" on="1"/>
        <pt x="391" y="860" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          34
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 11 values pushed */
            0 0 0 1 95 0 1 1 27 0 78
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 16 values pushed */
            0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 5 values pushed */
          17 16 2 8 24
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="braceleft" xMin="250" yMin="-147" xMax="537" yMax="907">
      <contour>
        <pt x="478" y="819" on="0"/>
        <pt x="412" y="765" on="0"/>
        <pt x="412" y="721" on="1"/>
        <pt x="412" y="689" on="0"/>
        <pt x="422" y="627" on="1"/>
        <pt x="432" y="563" on="0"/>
        <pt x="432" y="532" on="1"/>
        <pt x="432" y="466" on="0"/>
        <pt x="373" y="395" on="0"/>
        <pt x="312" y="387" on="1"/>
        <pt x="312" y="373" on="1"/>
        <pt x="373" y="365" on="0"/>
        <pt x="432" y="294" on="0"/>
        <pt x="432" y="228" on="1"/>
        <pt x="432" y="196" on="0"/>
        <pt x="422" y="134" on="1"/>
        <pt x="412" y="70" on="0"/>
        <pt x="412" y="39" on="1"/>
        <pt x="412" y="-5" on="0"/>
        <pt x="478" y="-59" on="0"/>
        <pt x="537" y="-64" on="1"/>
        <pt x="537" y="-147" on="1"/>
        <pt x="440" y="-140" on="0"/>
        <pt x="324" y="-34" on="0"/>
        <pt x="324" y="47" on="1"/>
        <pt x="324" y="73" on="0"/>
        <pt x="334" y="125" on="1"/>
        <pt x="344" y="179" on="0"/>
        <pt x="344" y="208" on="1"/>
        <pt x="344" y="271" on="0"/>
        <pt x="299" y="330" on="0"/>
        <pt x="250" y="329" on="1"/>
        <pt x="250" y="431" on="1"/>
        <pt x="299" y="430" on="0"/>
        <pt x="344" y="489" on="0"/>
        <pt x="344" y="552" on="1"/>
        <pt x="344" y="581" on="0"/>
        <pt x="334" y="635" on="1"/>
        <pt x="324" y="687" on="0"/>
        <pt x="324" y="713" on="1"/>
        <pt x="324" y="794" on="0"/>
        <pt x="440" y="900" on="0"/>
        <pt x="537" y="907" on="1"/>
        <pt x="537" y="824" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 40 values pushed */
          10 9 2 0 1 1 76 43 42 2 1 74 21 20 2 0 73 0 1 0 0 1 89 0 1
          1 0 97 0 0 1 0 81 33 32 31 30 2 8 22
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="braceright" xMin="163" yMin="-147" xMax="450" yMax="907">
      <contour>
        <pt x="260" y="900" on="0"/>
        <pt x="376" y="794" on="0"/>
        <pt x="376" y="713" on="1"/>
        <pt x="376" y="687" on="0"/>
        <pt x="366" y="635" on="1"/>
        <pt x="356" y="581" on="0"/>
        <pt x="356" y="552" on="1"/>
        <pt x="356" y="489" on="0"/>
        <pt x="401" y="430" on="0"/>
        <pt x="450" y="431" on="1"/>
        <pt x="450" y="329" on="1"/>
        <pt x="401" y="330" on="0"/>
        <pt x="356" y="271" on="0"/>
        <pt x="356" y="208" on="1"/>
        <pt x="356" y="179" on="0"/>
        <pt x="366" y="125" on="1"/>
        <pt x="376" y="73" on="0"/>
        <pt x="376" y="47" on="1"/>
        <pt x="376" y="-34" on="0"/>
        <pt x="260" y="-140" on="0"/>
        <pt x="163" y="-147" on="1"/>
        <pt x="163" y="-64" on="1"/>
        <pt x="222" y="-59" on="0"/>
        <pt x="288" y="-5" on="0"/>
        <pt x="288" y="39" on="1"/>
        <pt x="288" y="70" on="0"/>
        <pt x="278" y="134" on="1"/>
        <pt x="268" y="196" on="0"/>
        <pt x="268" y="228" on="1"/>
        <pt x="268" y="294" on="0"/>
        <pt x="327" y="365" on="0"/>
        <pt x="388" y="373" on="1"/>
        <pt x="388" y="387" on="1"/>
        <pt x="327" y="395" on="0"/>
        <pt x="268" y="466" on="0"/>
        <pt x="268" y="532" on="1"/>
        <pt x="268" y="563" on="0"/>
        <pt x="278" y="627" on="1"/>
        <pt x="288" y="689" on="0"/>
        <pt x="288" y="721" on="1"/>
        <pt x="288" y="765" on="0"/>
        <pt x="222" y="819" on="0"/>
        <pt x="163" y="824" on="1"/>
        <pt x="163" y="907" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 38 values pushed */
          32 31 2 1 0 1 76 43 42 2 0 74 21 20 2 1 73 0 0 1 1 0 89 0 0
          0 1 97 0 1 0 1 81 17 24 2 8 24
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="bracketleft" xMin="312" yMin="-138" xMax="537" yMax="898">
      <contour>
        <pt x="537" y="816" on="1"/>
        <pt x="397" y="816" on="1"/>
        <pt x="397" y="-56" on="1"/>
        <pt x="537" y="-56" on="1"/>
        <pt x="537" y="-138" on="1"/>
        <pt x="312" y="-138" on="1"/>
        <pt x="312" y="898" on="1"/>
        <pt x="537" y="898" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 31 values pushed */
          0 3 0 0 1 3 0 103 0 1 2 2 1 87 0 1 1 2 95 0 2 1 2 79 17
          17 17 16 4 8 26
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="bracketright" xMin="163" yMin="-138" xMax="388" yMax="898">
      <contour>
        <pt x="388" y="898" on="1"/>
        <pt x="388" y="-138" on="1"/>
        <pt x="163" y="-138" on="1"/>
        <pt x="163" y="-56" on="1"/>
        <pt x="303" y="-56" on="1"/>
        <pt x="303" y="816" on="1"/>
        <pt x="163" y="816" on="1"/>
        <pt x="163" y="898" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 37 values pushed */
          4 1 3 0 2 1 3 2 103 0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79
          0 0 0 7 0 7 17 17 17 5 8 25
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="bullet" xMin="168" yMin="168" xMax="532" yMax="532">
      <contour>
        <pt x="262" y="168" on="0"/>
        <pt x="168" y="262" on="0"/>
        <pt x="168" y="350" on="1"/>
        <pt x="168" y="438" on="0"/>
        <pt x="262" y="532" on="0"/>
        <pt x="350" y="532" on="1"/>
        <pt x="438" y="532" on="0"/>
        <pt x="532" y="438" on="0"/>
        <pt x="532" y="350" on="1"/>
        <pt x="532" y="262" on="0"/>
        <pt x="438" y="168" on="0"/>
        <pt x="350" y="168" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 27 values pushed */
          0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81 0 0 0 11 0 10 36 3
          8 23
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="c" xMin="100" yMin="-15" xMax="619" yMax="613">
      <contour>
        <pt x="283" y="-15" on="0"/>
        <pt x="164" y="60" on="0"/>
        <pt x="100" y="200" on="0"/>
        <pt x="100" y="296" on="1"/>
        <pt x="100" y="393" on="0"/>
        <pt x="166" y="536" on="0"/>
        <pt x="288" y="613" on="0"/>
        <pt x="371" y="613" on="1"/>
        <pt x="477" y="613" on="0"/>
        <pt x="611" y="481" on="0"/>
        <pt x="619" y="368" on="1"/>
        <pt x="527" y="368" on="1"/>
        <pt x="519" y="442" on="0"/>
        <pt x="435" y="523" on="0"/>
        <pt x="368" y="523" on="1"/>
        <pt x="286" y="523" on="0"/>
        <pt x="196" y="404" on="0"/>
        <pt x="196" y="296" on="1"/>
        <pt x="196" y="190" on="0"/>
        <pt x="283" y="75" on="0"/>
        <pt x="363" y="75" on="1"/>
        <pt x="426" y="75" on="0"/>
        <pt x="505" y="147" on="0"/>
        <pt x="514" y="212" on="1"/>
        <pt x="606" y="212" on="1"/>
        <pt x="597" y="107" on="0"/>
        <pt x="465" y="-15" on="0"/>
        <pt x="363" y="-15" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 37 values pushed */
            0 1 2 4 2 1 4 128 0 4 3 2 4 3 126 0 2 2 0 97 0 0 0 34 77
            0 3 3 5 97 6 1 5 5 32 5 78
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 40 values pushed */
            0 1 2 4 2 1 4 128 0 4 3 2 4 3 126 0 0 0 2 1 0 2 105 0 3
            5 5 3 89 0 3 3 5 97 6 1 5 3 5 81
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 14 values pushed */
          0 0 0 27 0 26 18 36 34 18 38 7 8 27
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cent" xMin="100" yMin="-101" xMax="619" yMax="699">
      <contour>
        <pt x="326" y="-13" on="1"/>
        <pt x="220" y="0" on="0"/>
        <pt x="100" y="163" on="0"/>
        <pt x="100" y="296" on="1"/>
        <pt x="100" y="429" on="0"/>
        <pt x="220" y="595" on="0"/>
        <pt x="326" y="610" on="1"/>
        <pt x="326" y="699" on="1"/>
        <pt x="398" y="699" on="1"/>
        <pt x="398" y="612" on="1"/>
        <pt x="493" y="603" on="0"/>
        <pt x="612" y="473" on="0"/>
        <pt x="619" y="368" on="1"/>
        <pt x="527" y="368" on="1"/>
        <pt x="520" y="433" on="0"/>
        <pt x="453" y="512" on="0"/>
        <pt x="398" y="521" on="1"/>
        <pt x="398" y="78" on="1"/>
        <pt x="446" y="87" on="0"/>
        <pt x="507" y="157" on="0"/>
        <pt x="514" y="212" on="1"/>
        <pt x="606" y="212" on="1"/>
        <pt x="598" y="117" on="0"/>
        <pt x="486" y="-2" on="0"/>
        <pt x="398" y="-13" on="1"/>
        <pt x="398" y="-101" on="1"/>
        <pt x="326" y="-101" on="1"/>
      </contour>
      <contour>
        <pt x="196" y="203" on="0"/>
        <pt x="263" y="92" on="0"/>
        <pt x="326" y="79" on="1"/>
        <pt x="326" y="518" on="1"/>
        <pt x="264" y="504" on="0"/>
        <pt x="196" y="389" on="0"/>
        <pt x="196" y="296" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 54 values pushed */
          30 16 9 6 4 1 0 29 24 17 0 4 3 2 2 76 0 1 0 2 0 1 2 128 0
          2 3 0 2 3 126 0 0 1 3 0 87 0 0 0 3 95 0 3 0 3 79 20 23 20
          23 4 8 26
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cent.bold" xMin="100" yMin="-101" xMax="619" yMax="699">
      <contour>
        <pt x="398" y="699" on="1"/>
        <pt x="398" y="612" on="1"/>
        <pt x="493" y="603" on="0"/>
        <pt x="612" y="473" on="0"/>
        <pt x="619" y="368" on="1"/>
        <pt x="527" y="368" on="1"/>
        <pt x="519" y="442" on="0"/>
        <pt x="435" y="523" on="0"/>
        <pt x="368" y="523" on="1"/>
        <pt x="286" y="523" on="0"/>
        <pt x="196" y="404" on="0"/>
        <pt x="196" y="296" on="1"/>
        <pt x="196" y="190" on="0"/>
        <pt x="283" y="75" on="0"/>
        <pt x="363" y="75" on="1"/>
        <pt x="426" y="75" on="0"/>
        <pt x="505" y="147" on="0"/>
        <pt x="514" y="212" on="1"/>
        <pt x="606" y="212" on="1"/>
        <pt x="598" y="117" on="0"/>
        <pt x="486" y="-2" on="0"/>
        <pt x="398" y="-13" on="1"/>
        <pt x="398" y="-101" on="1"/>
        <pt x="326" y="-101" on="1"/>
        <pt x="326" y="-13" on="1"/>
        <pt x="220" y="0" on="0"/>
        <pt x="100" y="163" on="0"/>
        <pt x="100" y="296" on="1"/>
        <pt x="100" y="429" on="0"/>
        <pt x="220" y="595" on="0"/>
        <pt x="326" y="610" on="1"/>
        <pt x="326" y="699" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 66 values pushed */
          30 1 2 1 5 24 21 2 4 2 2 76 0 0 1 3 1 0 3 128 0 3 2 1 3
          2 126 6 1 5 0 1 0 5 1 105 0 2 4 4 2 89 0 2 2 4 95 0 4 2
          4 79 0 0 0 31 0 31 20 18 36 34 20 7 6 27
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="colon" xMin="267" yMin="-8" xMax="433" yMax="606">
      <component glyphName="period" x="0" y="0" flags="0x0"/>
      <component glyphName="period" x="0" y="442" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 2 values pushed */
          1 1
          PUSHW[ ]	/* 1 value pushed */
          442
          PUSHB[ ]	/* 1 value pushed */
          53
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="colon.case" xMin="267" yMin="93" xMax="433" yMax="707">
      <component glyphName="colon" x="0" y="101" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 2 values pushed */
          0 2
          PUSHB[ ]	/* 1 value pushed */
          101
          PUSHB[ ]	/* 1 value pushed */
          53
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="comma" xMin="255" yMin="-178" xMax="442" yMax="164">
      <contour>
        <pt x="310" y="-8" on="0"/>
        <pt x="267" y="37" on="0"/>
        <pt x="267" y="78" on="1"/>
        <pt x="267" y="119" on="0"/>
        <pt x="310" y="164" on="0"/>
        <pt x="350" y="164" on="1"/>
        <pt x="397" y="164" on="0"/>
        <pt x="442" y="109" on="0"/>
        <pt x="442" y="52" on="1"/>
        <pt x="442" y="-20" on="0"/>
        <pt x="412" y="-132" on="0"/>
        <pt x="381" y="-178" on="1"/>
        <pt x="255" y="-178" on="1"/>
        <pt x="308" y="-137" on="0"/>
        <pt x="367" y="-53" on="0"/>
        <pt x="376" y="-5" on="1"/>
        <pt x="364" y="-8" on="0"/>
        <pt x="350" y="-8" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 6 values pushed */
          15 1 2 0 1 76
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          9
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 17 values pushed */
            0 0 0 2 97 3 1 2 2 26 77 0 1 1 30 1 78
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            22
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 17 values pushed */
              0 0 0 2 97 3 1 2 2 32 77 0 1 1 30 1 78
            ELSE[ ]	/* Else */
              MPPEM[ ]	/* MeasurePixelPerEm */
              PUSHB[ ]	/* 1 value pushed */
              50
              LT[ ]	/* LessThan */
              IF[ ]	/* If */
                NPUSHB[ ]	/* 17 values pushed */
                0 1 2 1 134 0 0 0 2 97 3 1 2 2 32 2 78
              ELSE[ ]	/* Else */
                NPUSHB[ ]	/* 22 values pushed */
                0 1 2 1 134 0 0 2 2 0 89 0 0 0 2 97 3 1 2 0 2 81
              EIF[ ]	/* EndIf */
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 11 values pushed */
          0 0 0 17 0 16 21 36 4 8 24
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="copyright" xMin="65" yMin="100" xMax="635" yMax="700">
      <contour>
        <pt x="270" y="100" on="0"/>
        <pt x="139" y="178" on="0"/>
        <pt x="65" y="315" on="0"/>
        <pt x="65" y="400" on="1"/>
        <pt x="65" y="485" on="0"/>
        <pt x="139" y="622" on="0"/>
        <pt x="270" y="700" on="0"/>
        <pt x="350" y="700" on="1"/>
        <pt x="430" y="700" on="0"/>
        <pt x="561" y="622" on="0"/>
        <pt x="635" y="485" on="0"/>
        <pt x="635" y="400" on="1"/>
        <pt x="635" y="315" on="0"/>
        <pt x="561" y="178" on="0"/>
        <pt x="430" y="100" on="0"/>
        <pt x="350" y="100" on="1"/>
      </contour>
      <contour>
        <pt x="122" y="329" on="0"/>
        <pt x="180" y="219" on="0"/>
        <pt x="284" y="157" on="0"/>
        <pt x="350" y="157" on="1"/>
        <pt x="416" y="157" on="0"/>
        <pt x="520" y="219" on="0"/>
        <pt x="578" y="329" on="0"/>
        <pt x="578" y="400" on="1"/>
        <pt x="578" y="471" on="0"/>
        <pt x="520" y="581" on="0"/>
        <pt x="416" y="643" on="0"/>
        <pt x="350" y="643" on="1"/>
        <pt x="284" y="643" on="0"/>
        <pt x="180" y="581" on="0"/>
        <pt x="122" y="471" on="0"/>
        <pt x="122" y="400" on="1"/>
      </contour>
      <contour>
        <pt x="214" y="470" on="0"/>
        <pt x="290" y="555" on="0"/>
        <pt x="353" y="555" on="1"/>
        <pt x="407" y="555" on="0"/>
        <pt x="481" y="487" on="0"/>
        <pt x="488" y="430" on="1"/>
        <pt x="429" y="430" on="1"/>
        <pt x="424" y="462" on="0"/>
        <pt x="383" y="499" on="0"/>
        <pt x="353" y="499" on="1"/>
        <pt x="315" y="499" on="0"/>
        <pt x="271" y="446" on="0"/>
        <pt x="271" y="400" on="1"/>
        <pt x="271" y="357" on="0"/>
        <pt x="316" y="304" on="0"/>
        <pt x="352" y="304" on="1"/>
        <pt x="379" y="304" on="0"/>
        <pt x="414" y="336" on="0"/>
        <pt x="417" y="362" on="1"/>
        <pt x="476" y="362" on="1"/>
        <pt x="471" y="312" on="0"/>
        <pt x="402" y="248" on="0"/>
        <pt x="352" y="248" on="1"/>
        <pt x="291" y="248" on="0"/>
        <pt x="214" y="334" on="0"/>
        <pt x="214" y="400" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 2 values pushed */
          6 100
          WCVTP[ ]	/* WriteCVTInPixels */
          NPUSHB[ ]	/* 82 values pushed */
          0 5 6 8 6 5 8 128 0 8 7 6 8 7 126 0 0 0 3 4 0 3 105 0 4
          0 6 5 4 6 105 0 7 0 9 2 7 9 105 0 2 1 1 2 89 0 2 2 1 98
          10 1 1 2 1 82 0 0 55 53 51 50 48 46 42 40 38 37 35 33 28 26 20 18 0
          15 0 14 38 11 8 23
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 2 values pushed */
          6 0
          WCVTP[ ]	/* WriteCVTInPixels */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="currency" xMin="99" yMin="99" xMax="601" yMax="601">
      <contour>
        <pt x="281" y="140" on="0"/>
        <pt x="228" y="179" on="1"/>
        <pt x="148" y="99" on="1"/>
        <pt x="99" y="148" on="1"/>
        <pt x="179" y="228" on="1"/>
        <pt x="140" y="281" on="0"/>
        <pt x="140" y="350" on="1"/>
        <pt x="140" y="419" on="0"/>
        <pt x="179" y="472" on="1"/>
        <pt x="99" y="552" on="1"/>
        <pt x="148" y="601" on="1"/>
        <pt x="228" y="521" on="1"/>
        <pt x="281" y="560" on="0"/>
        <pt x="350" y="560" on="1"/>
        <pt x="419" y="560" on="0"/>
        <pt x="472" y="521" on="1"/>
        <pt x="552" y="601" on="1"/>
        <pt x="601" y="552" on="1"/>
        <pt x="521" y="472" on="1"/>
        <pt x="560" y="419" on="0"/>
        <pt x="560" y="350" on="1"/>
        <pt x="560" y="281" on="0"/>
        <pt x="521" y="228" on="1"/>
        <pt x="601" y="148" on="1"/>
        <pt x="552" y="99" on="1"/>
        <pt x="472" y="179" on="1"/>
        <pt x="419" y="140" on="0"/>
        <pt x="350" y="140" on="1"/>
      </contour>
      <contour>
        <pt x="219" y="315" on="0"/>
        <pt x="254" y="254" on="0"/>
        <pt x="315" y="219" on="0"/>
        <pt x="350" y="219" on="1"/>
        <pt x="385" y="219" on="0"/>
        <pt x="446" y="254" on="0"/>
        <pt x="481" y="315" on="0"/>
        <pt x="481" y="350" on="1"/>
        <pt x="481" y="385" on="0"/>
        <pt x="446" y="446" on="0"/>
        <pt x="385" y="481" on="0"/>
        <pt x="350" y="481" on="1"/>
        <pt x="315" y="481" on="0"/>
        <pt x="254" y="446" on="0"/>
        <pt x="219" y="385" on="0"/>
        <pt x="219" y="350" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 72 values pushed */
          17 15 11 9 4 3 0 22 18 8 4 4 2 3 25 23 3 1 4 1 2 3 76 16 10
          2 0 74 24 2 2 1 73 0 0 0 3 2 0 3 105 0 2 1 1 2 89 0 2 2
          1 97 4 1 1 2 1 81 0 0 40 38 32 30 0 27 0 26 44 5 8 23
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="d" xMin="68" yMin="-15" xMax="587" yMax="848">
      <contour>
        <pt x="232" y="-15" on="0"/>
        <pt x="125" y="61" on="0"/>
        <pt x="68" y="203" on="0"/>
        <pt x="68" y="299" on="1"/>
        <pt x="68" y="395" on="0"/>
        <pt x="125" y="537" on="0"/>
        <pt x="232" y="613" on="0"/>
        <pt x="304" y="613" on="1"/>
        <pt x="365" y="613" on="0"/>
        <pt x="448" y="561" on="0"/>
        <pt x="463" y="513" on="1"/>
        <pt x="491" y="513" on="1"/>
        <pt x="491" y="848" on="1"/>
        <pt x="587" y="848" on="1"/>
        <pt x="587" y="0" on="1"/>
        <pt x="491" y="0" on="1"/>
        <pt x="491" y="85" on="1"/>
        <pt x="463" y="85" on="1"/>
        <pt x="448" y="37" on="0"/>
        <pt x="365" y="-15" on="0"/>
        <pt x="304" y="-15" on="1"/>
      </contour>
      <contour>
        <pt x="166" y="192" on="0"/>
        <pt x="253" y="73" on="0"/>
        <pt x="331" y="73" on="1"/>
        <pt x="409" y="73" on="0"/>
        <pt x="496" y="192" on="0"/>
        <pt x="496" y="299" on="1"/>
        <pt x="496" y="406" on="0"/>
        <pt x="409" y="524" on="0"/>
        <pt x="331" y="524" on="1"/>
        <pt x="253" y="524" on="0"/>
        <pt x="166" y="406" on="0"/>
        <pt x="166" y="299" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          16
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 36 values pushed */
            0 1 0 4 6 1 4 103 0 2 2 27 77 0 7 7 0 97 0 0 0 34 77 0 6
            6 3 97 8 5 2 3 3 26 3 78
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            50
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 40 values pushed */
              0 1 0 4 6 1 4 103 0 2 2 27 77 0 7 7 0 97 0 0 0 34 77 0 3
              3 26 77 0 6 6 5 97 8 1 5 5 32 5 78
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 35 values pushed */
              0 0 0 7 1 0 7 105 0 1 0 4 6 1 4 103 0 6 8 1 5 6 5 101 0
              3 3 2 95 0 2 2 27 3 78
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 18 values pushed */
          0 0 30 28 24 22 0 20 0 19 17 17 17 18 38 9 8 27
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="divide" xMin="93" yMin="77" xMax="607" yMax="623">
      <component glyphName="minus" x="0" y="0" flags="0x0"/>
      <component glyphName="uni0307" x="266" y="-222" flags="0x4"/>
      <component glyphName="uni0307" x="266" y="-615" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 2 values pushed */
          1 1
          PUSHW[ ]	/* 1 value pushed */
          -222
          PUSHB[ ]	/* 1 value pushed */
          53
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 2 values pushed */
          2 1
          PUSHW[ ]	/* 1 value pushed */
          -615
          PUSHB[ ]	/* 1 value pushed */
          53
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="divide.case" xMin="93" yMin="127" xMax="607" yMax="673">
      <component glyphName="divide" x="0" y="50" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 2 values pushed */
          0 3
          PUSHB[ ]	/* 1 value pushed */
          50
          PUSHB[ ]	/* 1 value pushed */
          53
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="dollar" xMin="92" yMin="-100" xMax="632" yMax="900">
      <contour>
        <pt x="207" y="97" on="0"/>
        <pt x="324" y="83" on="1"/>
        <pt x="324" y="352" on="1"/>
        <pt x="311" y="354" on="1"/>
        <pt x="101" y="382" on="0"/>
        <pt x="101" y="577" on="1"/>
        <pt x="101" y="677" on="0"/>
        <pt x="220" y="803" on="0"/>
        <pt x="324" y="813" on="1"/>
        <pt x="324" y="900" on="1"/>
        <pt x="396" y="900" on="1"/>
        <pt x="396" y="814" on="1"/>
        <pt x="501" y="805" on="0"/>
        <pt x="623" y="683" on="0"/>
        <pt x="632" y="576" on="1"/>
        <pt x="532" y="576" on="1"/>
        <pt x="518" y="702" on="0"/>
        <pt x="396" y="717" on="1"/>
        <pt x="396" y="445" on="1"/>
        <pt x="403" y="444" on="1"/>
        <pt x="613" y="416" on="0"/>
        <pt x="613" y="221" on="1"/>
        <pt x="613" y="122" on="0"/>
        <pt x="497" y="-3" on="0"/>
        <pt x="396" y="-13" on="1"/>
        <pt x="396" y="-100" on="1"/>
        <pt x="324" y="-100" on="1"/>
        <pt x="324" y="-14" on="1"/>
        <pt x="222" y="-6" on="0"/>
        <pt x="102" y="105" on="0"/>
        <pt x="92" y="204" on="1"/>
        <pt x="194" y="204" on="1"/>
      </contour>
      <contour>
        <pt x="201" y="523" on="0"/>
        <pt x="260" y="463" on="0"/>
        <pt x="321" y="455" on="1"/>
        <pt x="324" y="455" on="1"/>
        <pt x="324" y="716" on="1"/>
        <pt x="265" y="708" on="0"/>
        <pt x="201" y="635" on="0"/>
        <pt x="201" y="577" on="1"/>
      </contour>
      <contour>
        <pt x="452" y="92" on="0"/>
        <pt x="513" y="163" on="0"/>
        <pt x="513" y="221" on="1"/>
        <pt x="513" y="274" on="0"/>
        <pt x="456" y="334" on="0"/>
        <pt x="396" y="343" on="1"/>
        <pt x="396" y="84" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 49 values pushed */
          36 17 11 8 4 1 0 45 34 18 2 4 3 1 46 27 24 1 4 2 3 3 76 0 0
          1 0 133 0 1 3 1 133 0 3 2 3 133 0 2 2 118 20 26 20 25 4 8 26
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="dollar.bold" xMin="92" yMin="-100" xMax="632" yMax="900">
      <contour>
        <pt x="209" y="81" on="0"/>
        <pt x="360" y="81" on="1"/>
        <pt x="432" y="81" on="0"/>
        <pt x="513" y="154" on="0"/>
        <pt x="513" y="221" on="1"/>
        <pt x="513" y="275" on="0"/>
        <pt x="454" y="335" on="0"/>
        <pt x="393" y="343" on="1"/>
        <pt x="311" y="354" on="1"/>
        <pt x="101" y="382" on="0"/>
        <pt x="101" y="577" on="1"/>
        <pt x="101" y="677" on="0"/>
        <pt x="220" y="803" on="0"/>
        <pt x="324" y="813" on="1"/>
        <pt x="324" y="900" on="1"/>
        <pt x="396" y="900" on="1"/>
        <pt x="396" y="814" on="1"/>
        <pt x="501" y="805" on="0"/>
        <pt x="623" y="683" on="0"/>
        <pt x="632" y="576" on="1"/>
        <pt x="532" y="576" on="1"/>
        <pt x="517" y="719" on="0"/>
        <pt x="362" y="719" on="1"/>
        <pt x="286" y="719" on="0"/>
        <pt x="201" y="644" on="0"/>
        <pt x="201" y="577" on="1"/>
        <pt x="201" y="523" on="0"/>
        <pt x="260" y="463" on="0"/>
        <pt x="321" y="455" on="1"/>
        <pt x="403" y="444" on="1"/>
        <pt x="613" y="416" on="0"/>
        <pt x="613" y="221" on="1"/>
        <pt x="613" y="122" on="0"/>
        <pt x="497" y="-3" on="0"/>
        <pt x="396" y="-13" on="1"/>
        <pt x="396" y="-100" on="1"/>
        <pt x="324" y="-100" on="1"/>
        <pt x="324" y="-14" on="1"/>
        <pt x="222" y="-6" on="0"/>
        <pt x="102" y="105" on="0"/>
        <pt x="92" y="204" on="1"/>
        <pt x="194" y="204" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 60 values pushed */
          16 13 2 3 1 37 34 2 4 0 2 76 0 2 3 5 3 2 5 128 0 5 0 3 5
          0 126 0 1 0 3 2 1 3 105 0 0 4 4 0 89 0 0 0 4 95 0 4 0 4
          79 20 28 33 20 28 32 6 6 28
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="dotlessi" xMin="151" yMin="0" xMax="611" yMax="598">
      <contour>
        <pt x="429" y="598" on="1"/>
        <pt x="429" y="90" on="1"/>
        <pt x="611" y="90" on="1"/>
        <pt x="611" y="0" on="1"/>
        <pt x="151" y="0" on="1"/>
        <pt x="151" y="90" on="1"/>
        <pt x="333" y="90" on="1"/>
        <pt x="333" y="508" on="1"/>
        <pt x="151" y="508" on="1"/>
        <pt x="151" y="598" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 23 values pushed */
            0 3 3 4 95 5 1 4 4 28 77 2 1 0 0 1 95 0 1 1 26 1 78
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 27 values pushed */
            5 1 4 0 3 0 4 3 103 2 1 0 1 1 0 87 2 1 0 0 1 95 0 1 0
            1 79
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 13 values pushed */
          0 0 0 9 0 9 17 17 17 17 6 8 26
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="e" xMin="101" yMin="-15" xMax="615" yMax="613">
      <contour>
        <pt x="101" y="399" on="0"/>
        <pt x="164" y="538" on="0"/>
        <pt x="282" y="613" on="0"/>
        <pt x="361" y="613" on="1"/>
        <pt x="474" y="613" on="0"/>
        <pt x="599" y="456" on="0"/>
        <pt x="599" y="312" on="1"/>
        <pt x="599" y="294" on="0"/>
        <pt x="597" y="268" on="1"/>
        <pt x="196" y="268" on="1"/>
        <pt x="203" y="172" on="0"/>
        <pt x="289" y="73" on="0"/>
        <pt x="365" y="73" on="1"/>
        <pt x="422" y="73" on="0"/>
        <pt x="501" y="129" on="0"/>
        <pt x="520" y="184" on="1"/>
        <pt x="615" y="184" on="1"/>
        <pt x="590" y="89" on="0"/>
        <pt x="460" y="-15" on="0"/>
        <pt x="365" y="-15" on="1"/>
        <pt x="240" y="-15" on="0"/>
        <pt x="101" y="152" on="0"/>
        <pt x="101" y="304" on="1"/>
      </contour>
      <contour>
        <pt x="508" y="354" on="1"/>
        <pt x="500" y="437" on="0"/>
        <pt x="425" y="525" on="0"/>
        <pt x="361" y="525" on="1"/>
        <pt x="292" y="525" on="0"/>
        <pt x="208" y="436" on="0"/>
        <pt x="198" y="354" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 38 values pushed */
            0 3 1 2 1 3 2 128 7 1 6 0 1 3 6 1 103 0 5 5 0 97 0 0 0
            34 77 0 2 2 4 97 0 4 4 32 4 78
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 41 values pushed */
            0 3 1 2 1 3 2 128 0 0 0 5 6 0 5 105 7 1 6 0 1 3 6 1 103
            0 2 4 4 2 89 0 2 2 4 97 0 4 2 4 81
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 15 values pushed */
          23 23 23 29 23 29 37 34 18 34 20 34 8 8 28
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="eight" xMin="79" yMin="-15" xMax="621" yMax="815">
      <contour>
        <pt x="429" y="446" on="0"/>
        <pt x="520" y="519" on="0"/>
        <pt x="520" y="583" on="1"/>
        <pt x="520" y="646" on="0"/>
        <pt x="429" y="719" on="0"/>
        <pt x="350" y="719" on="1"/>
        <pt x="271" y="719" on="0"/>
        <pt x="180" y="646" on="0"/>
        <pt x="180" y="583" on="1"/>
        <pt x="180" y="519" on="0"/>
        <pt x="271" y="446" on="0"/>
        <pt x="350" y="446" on="1"/>
      </contour>
      <contour>
        <pt x="79" y="282" on="0"/>
        <pt x="155" y="376" on="0"/>
        <pt x="222" y="385" on="1"/>
        <pt x="222" y="413" on="1"/>
        <pt x="155" y="423" on="0"/>
        <pt x="79" y="518" on="0"/>
        <pt x="79" y="592" on="1"/>
        <pt x="79" y="696" on="0"/>
        <pt x="224" y="815" on="0"/>
        <pt x="350" y="815" on="1"/>
        <pt x="476" y="815" on="0"/>
        <pt x="621" y="696" on="0"/>
        <pt x="621" y="592" on="1"/>
        <pt x="621" y="518" on="0"/>
        <pt x="545" y="423" on="0"/>
        <pt x="478" y="413" on="1"/>
        <pt x="478" y="385" on="1"/>
        <pt x="545" y="376" on="0"/>
        <pt x="621" y="282" on="0"/>
        <pt x="621" y="208" on="1"/>
        <pt x="621" y="104" on="0"/>
        <pt x="476" y="-15" on="0"/>
        <pt x="350" y="-15" on="1"/>
        <pt x="224" y="-15" on="0"/>
        <pt x="79" y="104" on="0"/>
        <pt x="79" y="208" on="1"/>
      </contour>
      <contour>
        <pt x="180" y="154" on="0"/>
        <pt x="271" y="81" on="0"/>
        <pt x="350" y="81" on="1"/>
        <pt x="429" y="81" on="0"/>
        <pt x="520" y="154" on="0"/>
        <pt x="520" y="216" on="1"/>
        <pt x="520" y="279" on="0"/>
        <pt x="429" y="352" on="0"/>
        <pt x="350" y="352" on="1"/>
        <pt x="271" y="352" on="0"/>
        <pt x="180" y="279" on="0"/>
        <pt x="180" y="216" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 9 values pushed */
          28 27 15 14 4 5 1 1 76
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 30 values pushed */
            6 1 1 0 5 4 1 5 105 0 0 0 2 97 0 2 2 31 77 0 4 4 3 97 0
            3 3 32 3 78
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 33 values pushed */
            0 2 0 0 1 2 0 105 6 1 1 0 5 4 1 5 105 0 4 3 3 4 89 0 4
            4 3 97 0 3 4 3 81
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 18 values pushed */
          0 0 47 45 41 39 35 33 22 20 0 11 0 10 36 7 8 23
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="ellipsis" xMin="51" yMin="-8" xMax="649" yMax="164">
      <contour>
        <pt x="316" y="-8" on="0"/>
        <pt x="280" y="37" on="0"/>
        <pt x="280" y="78" on="1"/>
        <pt x="280" y="119" on="0"/>
        <pt x="316" y="164" on="0"/>
        <pt x="350" y="164" on="1"/>
        <pt x="384" y="164" on="0"/>
        <pt x="420" y="119" on="0"/>
        <pt x="420" y="78" on="1"/>
        <pt x="420" y="37" on="0"/>
        <pt x="384" y="-8" on="0"/>
        <pt x="350" y="-8" on="1"/>
      </contour>
      <contour>
        <pt x="51" y="119" on="0"/>
        <pt x="87" y="164" on="0"/>
        <pt x="121" y="164" on="1"/>
        <pt x="155" y="164" on="0"/>
        <pt x="191" y="119" on="0"/>
        <pt x="191" y="78" on="1"/>
        <pt x="191" y="37" on="0"/>
        <pt x="155" y="-8" on="0"/>
        <pt x="121" y="-8" on="1"/>
        <pt x="87" y="-8" on="0"/>
        <pt x="51" y="37" on="0"/>
        <pt x="51" y="78" on="1"/>
      </contour>
      <contour>
        <pt x="509" y="119" on="0"/>
        <pt x="545" y="164" on="0"/>
        <pt x="579" y="164" on="1"/>
        <pt x="613" y="164" on="0"/>
        <pt x="649" y="119" on="0"/>
        <pt x="649" y="78" on="1"/>
        <pt x="649" y="37" on="0"/>
        <pt x="613" y="-8" on="0"/>
        <pt x="579" y="-8" on="1"/>
        <pt x="545" y="-8" on="0"/>
        <pt x="509" y="37" on="0"/>
        <pt x="509" y="78" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          9
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 16 values pushed */
            4 2 2 0 0 1 97 5 3 6 3 1 1 26 1 78
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            50
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 16 values pushed */
              4 2 2 0 0 1 97 5 3 6 3 1 1 32 1 78
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 23 values pushed */
              4 2 2 0 1 1 0 89 4 2 2 0 0 1 97 5 3 6 3 1 0 1 81
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 18 values pushed */
          0 0 33 31 27 25 21 19 15 13 0 11 0 10 36 7 8 23
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="emdash" xMin="45" yMin="307" xMax="655" yMax="393">
      <contour>
        <pt x="655" y="393" on="1"/>
        <pt x="655" y="307" on="1"/>
        <pt x="45" y="307" on="1"/>
        <pt x="45" y="393" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 28 values pushed */
          2 1 1 0 0 1 87 2 1 1 1 0 95 0 0 1 0 79 0 0 0 3 0 3 17
          3 8 23
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="emdash.case" xMin="45" yMin="357" xMax="655" yMax="443">
      <component glyphName="emdash" x="0" y="50" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 2 values pushed */
          0 1
          PUSHB[ ]	/* 1 value pushed */
          50
          PUSHB[ ]	/* 1 value pushed */
          53
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="endash" xMin="75" yMin="307" xMax="625" yMax="393">
      <contour>
        <pt x="625" y="393" on="1"/>
        <pt x="625" y="307" on="1"/>
        <pt x="75" y="307" on="1"/>
        <pt x="75" y="393" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 28 values pushed */
          2 1 1 0 0 1 87 2 1 1 1 0 95 0 0 1 0 79 0 0 0 3 0 3 17
          3 8 23
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="endash.case" xMin="75" yMin="357" xMax="625" yMax="443">
      <component glyphName="endash" x="0" y="50" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 2 values pushed */
          0 1
          PUSHB[ ]	/* 1 value pushed */
          50
          PUSHB[ ]	/* 1 value pushed */
          53
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="equal" xMin="90" yMin="170" xMax="610" yMax="530">
      <contour>
        <pt x="90" y="530" on="1"/>
        <pt x="610" y="530" on="1"/>
        <pt x="610" y="443" on="1"/>
        <pt x="90" y="443" on="1"/>
      </contour>
      <contour>
        <pt x="90" y="257" on="1"/>
        <pt x="610" y="257" on="1"/>
        <pt x="610" y="170" on="1"/>
        <pt x="90" y="170" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 31 values pushed */
          0 0 0 1 2 0 1 103 0 2 3 3 2 87 0 2 2 3 95 0 3 2 3 79 17
          17 17 16 4 8 26
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="equal.case" xMin="90" yMin="220" xMax="610" yMax="580">
      <component glyphName="equal" x="0" y="50" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 2 values pushed */
          0 2
          PUSHB[ ]	/* 1 value pushed */
          50
          PUSHB[ ]	/* 1 value pushed */
          53
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="exclam" xMin="271" yMin="-7" xMax="429" yMax="800">
      <contour>
        <pt x="400" y="800" on="1"/>
        <pt x="400" y="218" on="1"/>
        <pt x="300" y="218" on="1"/>
        <pt x="300" y="800" on="1"/>
      </contour>
      <contour>
        <pt x="271" y="103" on="0"/>
        <pt x="312" y="141" on="0"/>
        <pt x="350" y="141" on="1"/>
        <pt x="388" y="141" on="0"/>
        <pt x="429" y="103" on="0"/>
        <pt x="429" y="67" on="1"/>
        <pt x="429" y="32" on="0"/>
        <pt x="388" y="-7" on="0"/>
        <pt x="350" y="-7" on="1"/>
        <pt x="312" y="-7" on="0"/>
        <pt x="271" y="32" on="0"/>
        <pt x="271" y="67" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 22 values pushed */
            0 0 0 1 95 4 1 1 1 25 77 0 2 2 3 97 0 3 3 26 3 78
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 25 values pushed */
            4 1 1 0 0 2 1 0 103 0 2 3 3 2 89 0 2 2 3 97 0 3 2 3 81
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 14 values pushed */
          0 0 13 11 7 5 0 3 0 3 17 5 8 23
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="f" xMin="138" yMin="0" xMax="664" yMax="863">
      <contour>
        <pt x="272" y="0" on="1"/>
        <pt x="272" y="508" on="1"/>
        <pt x="138" y="508" on="1"/>
        <pt x="138" y="598" on="1"/>
        <pt x="272" y="598" on="1"/>
        <pt x="272" y="667" on="1"/>
        <pt x="272" y="761" on="0"/>
        <pt x="373" y="863" on="0"/>
        <pt x="466" y="863" on="1"/>
        <pt x="553" y="863" on="0"/>
        <pt x="656" y="773" on="0"/>
        <pt x="664" y="690" on="1"/>
        <pt x="568" y="690" on="1"/>
        <pt x="557" y="773" on="0"/>
        <pt x="466" y="773" on="1"/>
        <pt x="418" y="773" on="0"/>
        <pt x="368" y="719" on="0"/>
        <pt x="368" y="667" on="1"/>
        <pt x="368" y="598" on="1"/>
        <pt x="596" y="598" on="1"/>
        <pt x="596" y="508" on="1"/>
        <pt x="368" y="508" on="1"/>
        <pt x="368" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          27
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 37 values pushed */
            0 3 4 1 4 3 1 128 0 4 4 2 97 0 2 2 27 77 6 1 0 0 1 95 5
            1 1 1 28 77 8 1 7 7 26 7 78
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            50
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 35 values pushed */
              0 3 4 1 4 3 1 128 0 2 0 4 3 2 4 105 6 1 0 0 1 95 5 1 1
              1 28 77 8 1 7 7 26 7 78
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 41 values pushed */
              0 3 4 1 4 3 1 128 8 1 7 0 7 134 0 2 0 4 3 2 4 105 5 1 1
              0 0 1 87 5 1 1 1 0 95 6 1 0 1 0 79
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 16 values pushed */
          0 0 0 22 0 22 17 19 33 18 35 17 17 9 8 29
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="five" xMin="91" yMin="-15" xMax="624" yMax="800">
      <contour>
        <pt x="608" y="800" on="1"/>
        <pt x="608" y="704" on="1"/>
        <pt x="222" y="704" on="1"/>
        <pt x="222" y="453" on="1"/>
        <pt x="250" y="453" on="1"/>
        <pt x="261" y="489" on="0"/>
        <pt x="337" y="530" on="0"/>
        <pt x="393" y="530" on="1"/>
        <pt x="502" y="530" on="0"/>
        <pt x="624" y="389" on="0"/>
        <pt x="624" y="262" on="1"/>
        <pt x="624" y="131" on="0"/>
        <pt x="485" y="-15" on="0"/>
        <pt x="360" y="-15" on="1"/>
        <pt x="244" y="-15" on="0"/>
        <pt x="102" y="118" on="0"/>
        <pt x="91" y="238" on="1"/>
        <pt x="198" y="238" on="1"/>
        <pt x="207" y="164" on="0"/>
        <pt x="292" y="81" on="0"/>
        <pt x="360" y="81" on="1"/>
        <pt x="437" y="81" on="0"/>
        <pt x="522" y="177" on="0"/>
        <pt x="522" y="262" on="1"/>
        <pt x="522" y="345" on="0"/>
        <pt x="438" y="437" on="0"/>
        <pt x="363" y="437" on="1"/>
        <pt x="311" y="437" on="0"/>
        <pt x="231" y="388" on="0"/>
        <pt x="212" y="344" on="1"/>
        <pt x="122" y="344" on="1"/>
        <pt x="122" y="800" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 53 values pushed */
            0 1 2 6 2 1 6 128 0 7 6 4 6 7 4 128 0 4 5 6 4 5 126 0 2
            0 6 7 2 6 105 0 0 0 8 95 9 1 8 8 25 77 0 5 5 3 98 0 3 3
            32 3 78
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 56 values pushed */
            0 1 2 6 2 1 6 128 0 7 6 4 6 7 4 128 0 4 5 6 4 5 126 9 1
            8 0 0 2 8 0 103 0 2 0 6 7 2 6 105 0 5 3 3 5 89 0 5 5 3
            98 0 3 5 3 82
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 17 values pushed */
          0 0 0 31 0 31 18 36 34 18 36 34 17 17 10 8 30
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="four" xMin="67" yMin="0" xMax="635" yMax="800">
      <contour>
        <pt x="516" y="334" on="1"/>
        <pt x="635" y="334" on="1"/>
        <pt x="635" y="238" on="1"/>
        <pt x="516" y="238" on="1"/>
        <pt x="516" y="0" on="1"/>
        <pt x="417" y="0" on="1"/>
        <pt x="417" y="238" on="1"/>
        <pt x="67" y="238" on="1"/>
        <pt x="67" y="380" on="1"/>
        <pt x="334" y="800" on="1"/>
        <pt x="516" y="800" on="1"/>
      </contour>
      <contour>
        <pt x="417" y="334" on="1"/>
        <pt x="417" y="753" on="1"/>
        <pt x="148" y="334" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          12 8 2 0 4 1 76
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 22 values pushed */
            6 5 2 0 3 1 1 2 0 1 104 0 4 4 25 77 0 2 2 26 2 78
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 31 values pushed */
            0 4 0 4 133 0 2 1 2 134 6 5 2 0 1 1 0 87 6 5 2 0 0 1 96
            3 1 1 0 1 80
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 14 values pushed */
          11 11 11 13 11 13 18 17 17 17 16 7 8 27
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="g" xMin="82" yMin="-215" xMax="580" yMax="613">
      <contour>
        <pt x="580" y="-92" on="0"/>
        <pt x="446" y="-215" on="0"/>
        <pt x="332" y="-215" on="1"/>
        <pt x="225" y="-215" on="0"/>
        <pt x="91" y="-114" on="0"/>
        <pt x="82" y="-27" on="1"/>
        <pt x="185" y="-27" on="1"/>
        <pt x="193" y="-74" on="0"/>
        <pt x="270" y="-125" on="0"/>
        <pt x="332" y="-125" on="1"/>
        <pt x="403" y="-125" on="0"/>
        <pt x="484" y="-52" on="0"/>
        <pt x="484" y="14" on="1"/>
        <pt x="484" y="123" on="1"/>
        <pt x="456" y="123" on="1"/>
        <pt x="442" y="79" on="0"/>
        <pt x="365" y="31" on="0"/>
        <pt x="309" y="31" on="1"/>
        <pt x="240" y="31" on="0"/>
        <pt x="138" y="102" on="0"/>
        <pt x="83" y="233" on="0"/>
        <pt x="83" y="322" on="1"/>
        <pt x="83" y="411" on="0"/>
        <pt x="138" y="542" on="0"/>
        <pt x="240" y="613" on="0"/>
        <pt x="309" y="613" on="1"/>
        <pt x="365" y="613" on="0"/>
        <pt x="442" y="565" on="0"/>
        <pt x="456" y="521" on="1"/>
        <pt x="484" y="521" on="1"/>
        <pt x="484" y="598" on="1"/>
        <pt x="580" y="598" on="1"/>
        <pt x="580" y="14" on="1"/>
      </contour>
      <contour>
        <pt x="181" y="227" on="0"/>
        <pt x="262" y="120" on="0"/>
        <pt x="335" y="120" on="1"/>
        <pt x="409" y="120" on="0"/>
        <pt x="490" y="226" on="0"/>
        <pt x="490" y="322" on="1"/>
        <pt x="490" y="418" on="0"/>
        <pt x="409" y="524" on="0"/>
        <pt x="335" y="524" on="1"/>
        <pt x="262" y="524" on="0"/>
        <pt x="181" y="417" on="0"/>
        <pt x="181" y="322" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          16
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 46 values pushed */
            0 1 4 2 4 1 2 128 0 6 0 3 8 6 3 103 0 8 0 4 1 8 4 105 0
            9 9 5 97 7 1 5 5 34 77 0 2 2 0 97 0 0 0 36 0 78
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            50
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 50 values pushed */
              0 1 4 2 4 1 2 128 0 6 0 3 8 6 3 103 0 8 0 4 1 8 4 105 0
              7 7 28 77 0 9 9 5 97 0 5 5 34 77 0 2 2 0 97 0 0 0 36 0 78
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 56 values pushed */
              0 7 5 9 5 7 9 128 0 1 4 2 4 1 2 128 0 5 0 9 6 5 9 105 0
              6 0 3 8 6 3 103 0 8 0 4 1 8 4 105 0 2 0 0 2 89 0 2 2 0
              97 0 0 2 0 81
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 14 values pushed */
          42 40 35 17 18 38 34 19 34 18 33 10 8 31
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="grave" xMin="198" yMin="584" xMax="502" yMax="848">
      <contour>
        <pt x="326" y="848" on="1"/>
        <pt x="502" y="584" on="1"/>
        <pt x="410" y="584" on="1"/>
        <pt x="198" y="848" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 2 values pushed */
          6 100
          WCVTP[ ]	/* WriteCVTInPixels */
          NPUSHB[ ]	/* 20 values pushed */
          2 1 1 0 1 133 0 0 0 118 0 0 0 3 0 3 17 3 8 23
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 2 values pushed */
          6 0
          WCVTP[ ]	/* WriteCVTInPixels */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="greater" xMin="120" yMin="39" xMax="580" yMax="661">
      <contour>
        <pt x="120" y="39" on="1"/>
        <pt x="120" y="139" on="1"/>
        <pt x="521" y="345" on="1"/>
        <pt x="521" y="355" on="1"/>
        <pt x="120" y="561" on="1"/>
        <pt x="120" y="661" on="1"/>
        <pt x="580" y="420" on="1"/>
        <pt x="580" y="280" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 4 values pushed */
          5 0 1 50
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="greater.case" xMin="120" yMin="89" xMax="580" yMax="711">
      <component glyphName="greater" x="0" y="50" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 2 values pushed */
          0 1
          PUSHB[ ]	/* 1 value pushed */
          50
          PUSHB[ ]	/* 1 value pushed */
          53
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="guillemotleft" xMin="101" yMin="54" xMax="575" yMax="646">
      <contour>
        <pt x="101" y="280" on="1"/>
        <pt x="101" y="418" on="1"/>
        <pt x="365" y="646" on="1"/>
        <pt x="365" y="525" on="1"/>
        <pt x="155" y="351" on="1"/>
        <pt x="365" y="178" on="1"/>
        <pt x="365" y="54" on="1"/>
      </contour>
      <contour>
        <pt x="351" y="415" on="1"/>
        <pt x="575" y="584" on="1"/>
        <pt x="575" y="473" on="1"/>
        <pt x="407" y="351" on="1"/>
        <pt x="575" y="231" on="1"/>
        <pt x="575" y="116" on="1"/>
        <pt x="351" y="283" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 6 values pushed */
          12 8 6 2 2 50
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="guillemotright" xMin="125" yMin="54" xMax="599" yMax="646">
      <contour>
        <pt x="335" y="178" on="1"/>
        <pt x="545" y="351" on="1"/>
        <pt x="335" y="525" on="1"/>
        <pt x="335" y="646" on="1"/>
        <pt x="599" y="418" on="1"/>
        <pt x="599" y="280" on="1"/>
        <pt x="335" y="54" on="1"/>
      </contour>
      <contour>
        <pt x="125" y="231" on="1"/>
        <pt x="293" y="351" on="1"/>
        <pt x="125" y="473" on="1"/>
        <pt x="125" y="584" on="1"/>
        <pt x="349" y="415" on="1"/>
        <pt x="349" y="283" on="1"/>
        <pt x="125" y="116" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 6 values pushed */
          13 10 6 3 2 50
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="h" xMin="120" yMin="0" xMax="592" yMax="848">
      <contour>
        <pt x="216" y="848" on="1"/>
        <pt x="216" y="518" on="1"/>
        <pt x="244" y="518" on="1"/>
        <pt x="258" y="563" on="0"/>
        <pt x="337" y="613" on="0"/>
        <pt x="394" y="613" on="1"/>
        <pt x="485" y="613" on="0"/>
        <pt x="592" y="491" on="0"/>
        <pt x="592" y="387" on="1"/>
        <pt x="592" y="0" on="1"/>
        <pt x="496" y="0" on="1"/>
        <pt x="496" y="361" on="1"/>
        <pt x="496" y="440" on="0"/>
        <pt x="424" y="523" on="0"/>
        <pt x="356" y="523" on="1"/>
        <pt x="288" y="523" on="0"/>
        <pt x="216" y="440" on="0"/>
        <pt x="216" y="361" on="1"/>
        <pt x="216" y="0" on="1"/>
        <pt x="120" y="0" on="1"/>
        <pt x="120" y="848" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 31 values pushed */
            0 0 3 2 3 0 2 128 6 1 5 5 27 77 0 3 3 1 97 0 1 1 34 77 4
            1 2 2 26 2 78
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 29 values pushed */
            0 0 3 2 3 0 2 128 0 1 0 3 0 1 3 105 4 1 2 2 5 95 6 1 5
            5 27 2 78
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 14 values pushed */
          0 0 0 20 0 20 19 35 19 34 17 7 8 27
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="hyphen" xMin="93" yMin="306" xMax="607" yMax="394">
      <component glyphName="minus" x="0" y="0" flags="0x0"/>
    </TTGlyph>

    <TTGlyph name="hyphen.case" xMin="93" yMin="356" xMax="607" yMax="444">
      <component glyphName="minus.case" x="0" y="0" flags="0x0"/>
    </TTGlyph>

    <TTGlyph name="i" xMin="151" yMin="0" xMax="611" yMax="843">
      <component glyphName="dotlessi" x="0" y="0" flags="0x0"/>
      <component glyphName="uni0307" x="297" y="-2" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 2 values pushed */
          1 1
          PUSHW[ ]	/* 1 value pushed */
          -2
          PUSHB[ ]	/* 1 value pushed */
          53
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="j" xMin="103" yMin="-215" xMax="521" yMax="843">
      <component glyphName="uni0237" x="0" y="0" flags="0x0"/>
      <component glyphName="uni0307" x="363" y="-2" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 2 values pushed */
          1 1
          PUSHW[ ]	/* 1 value pushed */
          -2
          PUSHB[ ]	/* 1 value pushed */
          53
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="k" xMin="154" yMin="0" xMax="649" yMax="848">
      <contour>
        <pt x="250" y="848" on="1"/>
        <pt x="250" y="321" on="1"/>
        <pt x="528" y="598" on="1"/>
        <pt x="649" y="598" on="1"/>
        <pt x="342" y="296" on="1"/>
        <pt x="639" y="0" on="1"/>
        <pt x="512" y="0" on="1"/>
        <pt x="250" y="263" on="1"/>
        <pt x="250" y="0" on="1"/>
        <pt x="154" y="0" on="1"/>
        <pt x="154" y="848" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          7 4 1 3 1 0 1 76
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 18 values pushed */
            4 1 3 3 27 77 0 0 0 28 77 2 1 1 1 26 1 78
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 19 values pushed */
            0 0 1 1 0 87 2 1 1 1 3 95 4 1 3 3 27 3 78
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 12 values pushed */
          0 0 0 10 0 10 18 18 18 5 8 25
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="l" xMin="136" yMin="0" xMax="596" yMax="848">
      <contour>
        <pt x="414" y="848" on="1"/>
        <pt x="414" y="90" on="1"/>
        <pt x="596" y="90" on="1"/>
        <pt x="596" y="0" on="1"/>
        <pt x="136" y="0" on="1"/>
        <pt x="136" y="90" on="1"/>
        <pt x="318" y="90" on="1"/>
        <pt x="318" y="758" on="1"/>
        <pt x="136" y="758" on="1"/>
        <pt x="136" y="848" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 23 values pushed */
            0 3 3 4 95 5 1 4 4 27 77 2 1 0 0 1 95 0 1 1 26 1 78
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 20 values pushed */
            2 1 0 0 1 0 1 99 0 3 3 4 95 5 1 4 4 27 3 78
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 13 values pushed */
          0 0 0 9 0 9 17 17 17 17 6 8 26
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="less" xMin="120" yMin="39" xMax="580" yMax="661">
      <contour>
        <pt x="580" y="661" on="1"/>
        <pt x="580" y="561" on="1"/>
        <pt x="179" y="355" on="1"/>
        <pt x="179" y="345" on="1"/>
        <pt x="580" y="139" on="1"/>
        <pt x="580" y="39" on="1"/>
        <pt x="120" y="280" on="1"/>
        <pt x="120" y="420" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 4 values pushed */
          5 0 1 50
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="less.case" xMin="120" yMin="89" xMax="580" yMax="711">
      <contour>
        <pt x="580" y="711" on="1"/>
        <pt x="580" y="611" on="1"/>
        <pt x="179" y="405" on="1"/>
        <pt x="179" y="395" on="1"/>
        <pt x="580" y="189" on="1"/>
        <pt x="580" y="89" on="1"/>
        <pt x="120" y="330" on="1"/>
        <pt x="120" y="470" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 4 values pushed */
          5 0 1 50
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="m" xMin="80" yMin="0" xMax="624" yMax="613">
      <contour>
        <pt x="176" y="598" on="1"/>
        <pt x="176" y="543" on="1"/>
        <pt x="206" y="543" on="1"/>
        <pt x="213" y="577" on="0"/>
        <pt x="257" y="613" on="0"/>
        <pt x="292" y="613" on="1"/>
        <pt x="326" y="613" on="0"/>
        <pt x="374" y="575" on="0"/>
        <pt x="386" y="539" on="1"/>
        <pt x="414" y="539" on="1"/>
        <pt x="422" y="575" on="0"/>
        <pt x="473" y="613" on="0"/>
        <pt x="513" y="613" on="1"/>
        <pt x="567" y="613" on="0"/>
        <pt x="624" y="530" on="0"/>
        <pt x="624" y="452" on="1"/>
        <pt x="624" y="0" on="1"/>
        <pt x="528" y="0" on="1"/>
        <pt x="528" y="429" on="1"/>
        <pt x="528" y="519" on="0"/>
        <pt x="464" y="519" on="1"/>
        <pt x="400" y="519" on="0"/>
        <pt x="400" y="429" on="1"/>
        <pt x="400" y="0" on="1"/>
        <pt x="304" y="0" on="1"/>
        <pt x="304" y="429" on="1"/>
        <pt x="304" y="519" on="0"/>
        <pt x="240" y="519" on="1"/>
        <pt x="176" y="519" on="0"/>
        <pt x="176" y="429" on="1"/>
        <pt x="176" y="0" on="1"/>
        <pt x="80" y="0" on="1"/>
        <pt x="80" y="598" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          16
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 30 values pushed */
            2 1 0 1 5 1 0 114 7 1 5 5 1 97 10 9 3 3 1 1 34 77 8 6 2
            4 4 26 4 78
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            17
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 34 values pushed */
              2 1 0 9 5 1 0 114 10 1 9 9 28 77 7 1 5 5 1 97 3 1 1 1 34
              77 8 6 2 4 4 26 4 78
            ELSE[ ]	/* Else */
              MPPEM[ ]	/* MeasurePixelPerEm */
              PUSHB[ ]	/* 1 value pushed */
              50
              LT[ ]	/* LessThan */
              IF[ ]	/* If */
                NPUSHB[ ]	/* 35 values pushed */
                2 1 0 9 5 9 0 5 128 10 1 9 9 28 77 7 1 5 5 1 97 3 1 1 1
                34 77 8 6 2 4 4 26 4 78
              ELSE[ ]	/* Else */
                NPUSHB[ ]	/* 39 values pushed */
                2 1 0 9 5 9 0 5 128 10 1 9 0 4 9 87 3 1 1 7 1 5 4 1 5
                105 10 1 9 9 4 95 8 6 2 4 9 4 79
              EIF[ ]	/* EndIf */
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 18 values pushed */
          0 0 0 32 0 32 18 34 18 34 19 34 18 34 17 11 8 31
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="minus" xMin="93" yMin="306" xMax="607" yMax="394">
      <contour>
        <pt x="93" y="394" on="1"/>
        <pt x="607" y="394" on="1"/>
        <pt x="607" y="306" on="1"/>
        <pt x="93" y="306" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 21 values pushed */
          0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="minus.case" xMin="93" yMin="356" xMax="607" yMax="444">
      <component glyphName="minus" x="0" y="50" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 2 values pushed */
          0 1
          PUSHB[ ]	/* 1 value pushed */
          50
          PUSHB[ ]	/* 1 value pushed */
          53
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="multiply" xMin="118" yMin="118" xMax="582" yMax="582">
      <contour>
        <pt x="350" y="292" on="1"/>
        <pt x="176" y="118" on="1"/>
        <pt x="118" y="176" on="1"/>
        <pt x="292" y="350" on="1"/>
        <pt x="118" y="524" on="1"/>
        <pt x="176" y="582" on="1"/>
        <pt x="350" y="408" on="1"/>
        <pt x="524" y="582" on="1"/>
        <pt x="582" y="524" on="1"/>
        <pt x="408" y="350" on="1"/>
        <pt x="582" y="176" on="1"/>
        <pt x="524" y="118" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 4 values pushed */
          5 1 1 50
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="multiply.case" xMin="118" yMin="168" xMax="582" yMax="632">
      <component glyphName="multiply" x="0" y="50" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 2 values pushed */
          0 1
          PUSHB[ ]	/* 1 value pushed */
          50
          PUSHB[ ]	/* 1 value pushed */
          53
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="n" xMin="120" yMin="0" xMax="592" yMax="613">
      <contour>
        <pt x="216" y="598" on="1"/>
        <pt x="216" y="518" on="1"/>
        <pt x="244" y="518" on="1"/>
        <pt x="258" y="563" on="0"/>
        <pt x="337" y="613" on="0"/>
        <pt x="394" y="613" on="1"/>
        <pt x="485" y="613" on="0"/>
        <pt x="592" y="491" on="0"/>
        <pt x="592" y="387" on="1"/>
        <pt x="592" y="0" on="1"/>
        <pt x="496" y="0" on="1"/>
        <pt x="496" y="361" on="1"/>
        <pt x="496" y="440" on="0"/>
        <pt x="424" y="523" on="0"/>
        <pt x="356" y="523" on="1"/>
        <pt x="288" y="523" on="0"/>
        <pt x="216" y="440" on="0"/>
        <pt x="216" y="361" on="1"/>
        <pt x="216" y="0" on="1"/>
        <pt x="120" y="0" on="1"/>
        <pt x="120" y="598" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          16
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 27 values pushed */
            0 0 3 2 3 0 2 128 0 3 3 1 97 6 5 2 1 1 34 77 4 1 2 2 26
            2 78
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            50
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 31 values pushed */
              0 0 3 2 3 0 2 128 6 1 5 5 28 77 0 3 3 1 97 0 1 1 34 77 4
              1 2 2 26 2 78
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 35 values pushed */
              0 0 3 2 3 0 2 128 6 1 5 3 2 5 87 0 1 0 3 0 1 3 105 6 1
              5 5 2 95 4 1 2 5 2 79
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 14 values pushed */
          0 0 0 20 0 20 19 35 19 34 17 7 8 27
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="nine" xMin="77" yMin="0" xMax="623" yMax="815">
      <contour>
        <pt x="432" y="815" on="0"/>
        <pt x="555" y="748" on="0"/>
        <pt x="623" y="626" on="0"/>
        <pt x="623" y="546" on="1"/>
        <pt x="623" y="485" on="0"/>
        <pt x="584" y="371" on="0"/>
        <pt x="543" y="312" on="1"/>
        <pt x="333" y="0" on="1"/>
        <pt x="213" y="0" on="1"/>
        <pt x="426" y="306" on="1"/>
        <pt x="404" y="322" on="1"/>
        <pt x="391" y="309" on="0"/>
        <pt x="337" y="293" on="0"/>
        <pt x="306" y="293" on="1"/>
        <pt x="240" y="293" on="0"/>
        <pt x="136" y="358" on="0"/>
        <pt x="77" y="473" on="0"/>
        <pt x="77" y="546" on="1"/>
        <pt x="77" y="626" on="0"/>
        <pt x="145" y="748" on="0"/>
        <pt x="269" y="815" on="0"/>
        <pt x="351" y="815" on="1"/>
      </contour>
      <contour>
        <pt x="179" y="467" on="0"/>
        <pt x="273" y="372" on="0"/>
        <pt x="350" y="372" on="1"/>
        <pt x="427" y="372" on="0"/>
        <pt x="521" y="467" on="0"/>
        <pt x="521" y="546" on="1"/>
        <pt x="521" y="624" on="0"/>
        <pt x="427" y="719" on="0"/>
        <pt x="350" y="719" on="1"/>
        <pt x="273" y="719" on="0"/>
        <pt x="179" y="624" on="0"/>
        <pt x="179" y="546" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          10 9 2 1 3 1 76
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 25 values pushed */
            0 3 0 1 0 3 1 105 0 4 4 2 97 5 1 2 2 31 77 0 0 0 26 0 78
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 30 values pushed */
            0 0 1 0 134 5 1 2 0 4 3 2 4 105 0 3 1 1 3 89 0 3 3 1 97
            0 1 3 1 81
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 15 values pushed */
          0 0 31 29 25 23 0 21 0 20 36 23 6 8 24
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="notequal" xMin="90" yMin="10" xMax="610" yMax="690">
      <contour>
        <pt x="90" y="530" on="1"/>
        <pt x="390" y="530" on="1"/>
        <pt x="465" y="690" on="1"/>
        <pt x="553" y="690" on="1"/>
        <pt x="478" y="530" on="1"/>
        <pt x="610" y="530" on="1"/>
        <pt x="610" y="443" on="1"/>
        <pt x="437" y="443" on="1"/>
        <pt x="351" y="257" on="1"/>
        <pt x="610" y="257" on="1"/>
        <pt x="610" y="170" on="1"/>
        <pt x="310" y="170" on="1"/>
        <pt x="235" y="10" on="1"/>
        <pt x="147" y="10" on="1"/>
        <pt x="222" y="170" on="1"/>
        <pt x="90" y="170" on="1"/>
        <pt x="90" y="257" on="1"/>
        <pt x="263" y="257" on="1"/>
        <pt x="349" y="443" on="1"/>
        <pt x="90" y="443" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 53 values pushed */
          0 1 0 1 133 0 6 5 6 134 2 1 0 9 1 3 4 0 3 104 8 1 4 5 5
          4 87 8 1 4 4 5 95 7 1 5 4 5 79 19 18 17 17 17 17 17 17 17 17 16
          10 6 31
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="notequal.case" xMin="90" yMin="60" xMax="610" yMax="740">
      <component glyphName="notequal" x="0" y="50" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 2 values pushed */
          0 1
          PUSHB[ ]	/* 1 value pushed */
          50
          PUSHB[ ]	/* 1 value pushed */
          53
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="numbersign" xMin="48" yMin="0" xMax="652" yMax="800">
      <contour>
        <pt x="321" y="594" on="1"/>
        <pt x="456" y="594" on="1"/>
        <pt x="496" y="800" on="1"/>
        <pt x="576" y="800" on="1"/>
        <pt x="536" y="594" on="1"/>
        <pt x="652" y="594" on="1"/>
        <pt x="652" y="510" on="1"/>
        <pt x="519" y="510" on="1"/>
        <pt x="476" y="290" on="1"/>
        <pt x="598" y="290" on="1"/>
        <pt x="598" y="206" on="1"/>
        <pt x="459" y="206" on="1"/>
        <pt x="419" y="0" on="1"/>
        <pt x="339" y="0" on="1"/>
        <pt x="379" y="206" on="1"/>
        <pt x="244" y="206" on="1"/>
        <pt x="204" y="0" on="1"/>
        <pt x="124" y="0" on="1"/>
        <pt x="164" y="206" on="1"/>
        <pt x="48" y="206" on="1"/>
        <pt x="48" y="290" on="1"/>
        <pt x="181" y="290" on="1"/>
        <pt x="224" y="510" on="1"/>
        <pt x="102" y="510" on="1"/>
        <pt x="102" y="594" on="1"/>
        <pt x="241" y="594" on="1"/>
        <pt x="281" y="800" on="1"/>
        <pt x="361" y="800" on="1"/>
      </contour>
      <contour>
        <pt x="396" y="290" on="1"/>
        <pt x="439" y="510" on="1"/>
        <pt x="304" y="510" on="1"/>
        <pt x="261" y="290" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 40 values pushed */
            16 15 10 3 4 9 7 2 5 6 4 5 103 13 1 1 1 25 77 14 11 2 3 3 0
            95 12 2 2 0 0 28 77 8 1 6 6 26 6 78
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 48 values pushed */
            13 1 1 0 1 133 8 1 6 5 6 134 12 2 2 0 14 11 2 3 4 0 3 104 16
            15 10 3 4 5 5 4 87 16 15 10 3 4 4 5 95 9 7 2 5 4 5 79
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 30 values pushed */
          28 28 28 31 28 31 30 29 27 26 25 24 23 22 21 20 19 18 17 17 17 17 17 17 17
          17 16 17 8 31
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="o" xMin="84" yMin="-15" xMax="616" yMax="613">
      <contour>
        <pt x="269" y="-15" on="0"/>
        <pt x="149" y="61" on="0"/>
        <pt x="84" y="203" on="0"/>
        <pt x="84" y="300" on="1"/>
        <pt x="84" y="396" on="0"/>
        <pt x="149" y="537" on="0"/>
        <pt x="269" y="613" on="0"/>
        <pt x="350" y="613" on="1"/>
        <pt x="431" y="613" on="0"/>
        <pt x="551" y="537" on="0"/>
        <pt x="616" y="396" on="0"/>
        <pt x="616" y="300" on="1"/>
        <pt x="616" y="203" on="0"/>
        <pt x="551" y="61" on="0"/>
        <pt x="431" y="-15" on="0"/>
        <pt x="350" y="-15" on="1"/>
      </contour>
      <contour>
        <pt x="180" y="193" on="0"/>
        <pt x="269" y="75" on="0"/>
        <pt x="350" y="75" on="1"/>
        <pt x="431" y="75" on="0"/>
        <pt x="520" y="193" on="0"/>
        <pt x="520" y="300" on="1"/>
        <pt x="520" y="406" on="0"/>
        <pt x="431" y="523" on="0"/>
        <pt x="350" y="523" on="1"/>
        <pt x="269" y="523" on="0"/>
        <pt x="180" y="406" on="0"/>
        <pt x="180" y="300" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 22 values pushed */
            0 3 3 0 97 0 0 0 34 77 0 2 2 1 97 4 1 1 1 32 1 78
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 25 values pushed */
            0 0 0 3 2 0 3 105 0 2 1 1 2 89 0 2 2 1 97 4 1 1 2 1 81
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 14 values pushed */
          0 0 25 23 19 17 0 15 0 14 38 5 8 23
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="one" xMin="110" yMin="0" xMax="643" yMax="800">
      <contour>
        <pt x="437" y="90" on="1"/>
        <pt x="643" y="90" on="1"/>
        <pt x="643" y="0" on="1"/>
        <pt x="110" y="0" on="1"/>
        <pt x="110" y="90" on="1"/>
        <pt x="337" y="90" on="1"/>
        <pt x="337" y="719" on="1"/>
        <pt x="110" y="565" on="1"/>
        <pt x="110" y="683" on="1"/>
        <pt x="293" y="800" on="1"/>
        <pt x="437" y="800" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          8 7 6 3 0 3 1 76
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 17 values pushed */
            0 3 3 25 77 2 1 0 0 1 96 0 1 1 26 1 78
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 23 values pushed */
            0 3 0 3 133 2 1 0 1 1 0 87 2 1 0 0 1 96 0 1 0 1 80
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 7 values pushed */
          20 17 17 16 4 8 26
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="p" xMin="113" yMin="-200" xMax="632" yMax="613">
      <contour>
        <pt x="468" y="613" on="0"/>
        <pt x="575" y="537" on="0"/>
        <pt x="632" y="395" on="0"/>
        <pt x="632" y="299" on="1"/>
        <pt x="632" y="203" on="0"/>
        <pt x="575" y="61" on="0"/>
        <pt x="468" y="-15" on="0"/>
        <pt x="396" y="-15" on="1"/>
        <pt x="335" y="-15" on="0"/>
        <pt x="252" y="37" on="0"/>
        <pt x="237" y="85" on="1"/>
        <pt x="209" y="85" on="1"/>
        <pt x="209" y="-200" on="1"/>
        <pt x="113" y="-200" on="1"/>
        <pt x="113" y="598" on="1"/>
        <pt x="209" y="598" on="1"/>
        <pt x="209" y="513" on="1"/>
        <pt x="237" y="513" on="1"/>
        <pt x="252" y="561" on="0"/>
        <pt x="335" y="613" on="0"/>
        <pt x="396" y="613" on="1"/>
      </contour>
      <contour>
        <pt x="204" y="192" on="0"/>
        <pt x="291" y="73" on="0"/>
        <pt x="369" y="73" on="1"/>
        <pt x="447" y="73" on="0"/>
        <pt x="534" y="192" on="0"/>
        <pt x="534" y="299" on="1"/>
        <pt x="534" y="406" on="0"/>
        <pt x="447" y="524" on="0"/>
        <pt x="369" y="524" on="1"/>
        <pt x="291" y="524" on="0"/>
        <pt x="204" y="406" on="0"/>
        <pt x="204" y="299" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          16
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 36 values pushed */
            0 4 0 1 6 4 1 103 0 7 7 3 97 8 5 2 3 3 28 77 0 6 6 0 97
            0 0 0 32 77 0 2 2 30 2 78
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            50
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 40 values pushed */
              0 4 0 1 6 4 1 103 0 3 3 28 77 0 7 7 5 97 8 1 5 5 34 77 0
              6 6 0 97 0 0 0 32 77 0 2 2 30 2 78
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 41 values pushed */
              0 3 7 2 3 87 8 1 5 0 7 4 5 7 105 0 4 0 1 6 4 1 103 0 6
              0 0 2 6 0 105 0 3 3 2 95 0 2 3 2 79
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 18 values pushed */
          0 0 30 28 24 22 0 20 0 19 17 17 17 18 38 9 8 27
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="parenleft" xMin="250" yMin="-146" xMax="550" yMax="906">
      <contour>
        <pt x="452" y="765" on="0"/>
        <pt x="346" y="539" on="0"/>
        <pt x="346" y="384" on="1"/>
        <pt x="346" y="226" on="0"/>
        <pt x="452" y="-5" on="0"/>
        <pt x="550" y="-60" on="1"/>
        <pt x="550" y="-146" on="1"/>
        <pt x="457" y="-104" on="0"/>
        <pt x="322" y="52" on="0"/>
        <pt x="250" y="262" on="0"/>
        <pt x="250" y="383" on="1"/>
        <pt x="250" y="504" on="0"/>
        <pt x="322" y="711" on="0"/>
        <pt x="457" y="865" on="0"/>
        <pt x="550" y="906" on="1"/>
        <pt x="550" y="820" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 4 values pushed */
          14 6 1 50
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="parenright" xMin="150" yMin="-146" xMax="450" yMax="906">
      <contour>
        <pt x="243" y="865" on="0"/>
        <pt x="378" y="711" on="0"/>
        <pt x="450" y="504" on="0"/>
        <pt x="450" y="383" on="1"/>
        <pt x="450" y="262" on="0"/>
        <pt x="378" y="52" on="0"/>
        <pt x="243" y="-104" on="0"/>
        <pt x="150" y="-146" on="1"/>
        <pt x="150" y="-60" on="1"/>
        <pt x="248" y="-5" on="0"/>
        <pt x="354" y="226" on="0"/>
        <pt x="354" y="384" on="1"/>
        <pt x="354" y="539" on="0"/>
        <pt x="248" y="765" on="0"/>
        <pt x="150" y="820" on="1"/>
        <pt x="150" y="906" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 4 values pushed */
          15 7 1 50
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="percent" xMin="49" yMin="-15" xMax="651" yMax="815">
      <contour>
        <pt x="49" y="229" on="1"/>
        <pt x="651" y="657" on="1"/>
        <pt x="651" y="571" on="1"/>
        <pt x="49" y="143" on="1"/>
      </contour>
      <contour>
        <pt x="65" y="723" on="0"/>
        <pt x="140" y="815" on="0"/>
        <pt x="211" y="815" on="1"/>
        <pt x="282" y="815" on="0"/>
        <pt x="358" y="724" on="0"/>
        <pt x="358" y="638" on="1"/>
        <pt x="358" y="552" on="0"/>
        <pt x="282" y="460" on="0"/>
        <pt x="211" y="460" on="1"/>
        <pt x="140" y="460" on="0"/>
        <pt x="65" y="552" on="0"/>
        <pt x="65" y="638" on="1"/>
      </contour>
      <contour>
        <pt x="150" y="592" on="0"/>
        <pt x="182" y="543" on="0"/>
        <pt x="211" y="543" on="1"/>
        <pt x="241" y="543" on="0"/>
        <pt x="273" y="592" on="0"/>
        <pt x="273" y="638" on="1"/>
        <pt x="273" y="684" on="0"/>
        <pt x="241" y="732" on="0"/>
        <pt x="211" y="732" on="1"/>
        <pt x="182" y="732" on="0"/>
        <pt x="150" y="684" on="0"/>
        <pt x="150" y="638" on="1"/>
      </contour>
      <contour>
        <pt x="342" y="248" on="0"/>
        <pt x="418" y="340" on="0"/>
        <pt x="489" y="340" on="1"/>
        <pt x="560" y="340" on="0"/>
        <pt x="635" y="248" on="0"/>
        <pt x="635" y="162" on="1"/>
        <pt x="635" y="77" on="0"/>
        <pt x="560" y="-15" on="0"/>
        <pt x="489" y="-15" on="1"/>
        <pt x="418" y="-15" on="0"/>
        <pt x="342" y="76" on="0"/>
        <pt x="342" y="162" on="1"/>
      </contour>
      <contour>
        <pt x="427" y="116" on="0"/>
        <pt x="459" y="68" on="0"/>
        <pt x="489" y="68" on="1"/>
        <pt x="518" y="68" on="0"/>
        <pt x="550" y="116" on="0"/>
        <pt x="550" y="162" on="1"/>
        <pt x="550" y="208" on="0"/>
        <pt x="518" y="257" on="0"/>
        <pt x="489" y="257" on="1"/>
        <pt x="459" y="257" on="0"/>
        <pt x="427" y="208" on="0"/>
        <pt x="427" y="162" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 12 values pushed */
          2 1 2 2 3 3 0 2 6 7 2 76
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 37 values pushed */
            0 2 0 1 4 2 1 105 0 4 0 7 6 4 7 105 0 3 3 0 97 0 0 0 31
            77 0 6 6 5 97 0 5 5 32 5 78
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 40 values pushed */
            0 0 0 3 2 0 3 105 0 2 0 1 4 2 1 105 0 4 0 7 6 4 7 105 0
            6 5 5 6 89 0 6 6 5 97 0 5 6 5 81
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 11 values pushed */
          36 36 36 36 36 36 36 37 8 8 30
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="percent.cv01" xMin="65" yMin="-15" xMax="635" yMax="815">
      <contour>
        <pt x="415" y="-15" on="0"/>
        <pt x="342" y="88" on="0"/>
        <pt x="342" y="194" on="1"/>
        <pt x="342" y="298" on="0"/>
        <pt x="415" y="400" on="0"/>
        <pt x="489" y="400" on="1"/>
        <pt x="635" y="400" on="0"/>
        <pt x="635" y="194" on="1"/>
        <pt x="635" y="88" on="0"/>
        <pt x="563" y="-15" on="0"/>
        <pt x="489" y="-15" on="1"/>
      </contour>
      <contour>
        <pt x="65" y="712" on="0"/>
        <pt x="137" y="815" on="0"/>
        <pt x="211" y="815" on="1"/>
        <pt x="285" y="815" on="0"/>
        <pt x="358" y="712" on="0"/>
        <pt x="358" y="606" on="1"/>
        <pt x="358" y="502" on="0"/>
        <pt x="285" y="400" on="0"/>
        <pt x="211" y="400" on="1"/>
        <pt x="65" y="400" on="0"/>
        <pt x="65" y="606" on="1"/>
      </contour>
      <contour>
        <pt x="237" y="340" on="1"/>
        <pt x="311" y="340" on="1"/>
        <pt x="174" y="0" on="1"/>
        <pt x="95" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="150" y="483" on="0"/>
        <pt x="211" y="483" on="1"/>
        <pt x="273" y="483" on="0"/>
        <pt x="273" y="606" on="1"/>
        <pt x="273" y="732" on="0"/>
        <pt x="211" y="732" on="1"/>
        <pt x="150" y="732" on="0"/>
        <pt x="150" y="606" on="1"/>
      </contour>
      <contour>
        <pt x="526" y="800" on="1"/>
        <pt x="605" y="800" on="1"/>
        <pt x="463" y="460" on="1"/>
        <pt x="389" y="460" on="1"/>
      </contour>
      <contour>
        <pt x="427" y="68" on="0"/>
        <pt x="489" y="68" on="1"/>
        <pt x="550" y="68" on="0"/>
        <pt x="550" y="194" on="1"/>
        <pt x="550" y="317" on="0"/>
        <pt x="489" y="317" on="1"/>
        <pt x="427" y="317" on="0"/>
        <pt x="427" y="194" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          16
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 56 values pushed */
            0 9 6 3 6 9 3 128 0 4 0 11 0 4 11 128 0 6 0 3 0 6 3 105 0
            0 0 11 10 0 11 106 0 7 7 2 97 8 1 2 2 31 77 0 10 10 1 97 5 12
            2 1 1 32 1 78
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            50
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 64 values pushed */
              0 9 6 3 6 9 3 128 0 4 0 11 0 4 11 128 0 6 0 3 0 6 3 105 0
              0 0 11 10 0 11 106 0 8 8 25 77 0 7 7 2 97 0 2 2 31 77 0 5 5
              26 77 0 10 10 1 97 12 1 1 1 32 1 78
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 73 values pushed */
              0 8 2 7 2 8 7 128 0 9 6 3 6 9 3 128 0 4 0 11 0 4 11 128 0
              5 10 1 10 5 1 128 0 2 0 7 6 2 7 105 0 6 0 3 0 6 3 105 0 0
              0 11 10 0 11 106 0 10 5 1 10 89 0 10 10 1 97 12 1 1 10 1 81
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 30 values pushed */
          0 0 44 42 40 38 37 36 35 34 32 30 28 26 25 24 23 22 20 18 14 12 0 10 0
          9 36 13 8 23
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="percent.cv02" xMin="65" yMin="-18" xMax="635" yMax="818">
      <contour>
        <pt x="418" y="-15" on="0"/>
        <pt x="342" y="76" on="0"/>
        <pt x="342" y="162" on="1"/>
        <pt x="342" y="248" on="0"/>
        <pt x="418" y="340" on="0"/>
        <pt x="489" y="340" on="1"/>
        <pt x="560" y="340" on="0"/>
        <pt x="635" y="248" on="0"/>
        <pt x="635" y="162" on="1"/>
        <pt x="635" y="77" on="0"/>
        <pt x="560" y="-15" on="0"/>
        <pt x="489" y="-15" on="1"/>
      </contour>
      <contour>
        <pt x="65" y="723" on="0"/>
        <pt x="140" y="815" on="0"/>
        <pt x="211" y="815" on="1"/>
        <pt x="282" y="815" on="0"/>
        <pt x="358" y="724" on="0"/>
        <pt x="358" y="638" on="1"/>
        <pt x="358" y="552" on="0"/>
        <pt x="282" y="460" on="0"/>
        <pt x="211" y="460" on="1"/>
        <pt x="140" y="460" on="0"/>
        <pt x="65" y="552" on="0"/>
        <pt x="65" y="638" on="1"/>
      </contour>
      <contour>
        <pt x="101" y="97" on="1"/>
        <pt x="599" y="818" on="1"/>
        <pt x="599" y="703" on="1"/>
        <pt x="101" y="-18" on="1"/>
      </contour>
      <contour>
        <pt x="150" y="592" on="0"/>
        <pt x="182" y="543" on="0"/>
        <pt x="211" y="543" on="1"/>
        <pt x="241" y="543" on="0"/>
        <pt x="273" y="592" on="0"/>
        <pt x="273" y="638" on="1"/>
        <pt x="273" y="684" on="0"/>
        <pt x="241" y="732" on="0"/>
        <pt x="211" y="732" on="1"/>
        <pt x="182" y="732" on="0"/>
        <pt x="150" y="684" on="0"/>
        <pt x="150" y="638" on="1"/>
      </contour>
      <contour>
        <pt x="427" y="116" on="0"/>
        <pt x="459" y="68" on="0"/>
        <pt x="489" y="68" on="1"/>
        <pt x="518" y="68" on="0"/>
        <pt x="550" y="116" on="0"/>
        <pt x="550" y="162" on="1"/>
        <pt x="550" y="208" on="0"/>
        <pt x="518" y="257" on="0"/>
        <pt x="489" y="257" on="1"/>
        <pt x="459" y="257" on="0"/>
        <pt x="427" y="208" on="0"/>
        <pt x="427" y="162" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 18 values pushed */
          26 1 4 5 24 1 6 7 2 76 25 1 2 74 27 1 1 73
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 38 values pushed */
            0 4 0 3 0 4 3 105 0 0 0 7 6 0 7 105 0 5 5 2 97 0 2 2 31
            77 0 6 6 1 97 8 1 1 1 32 1 78
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 41 values pushed */
            0 2 0 5 4 2 5 105 0 4 0 3 0 4 3 105 0 0 0 7 6 0 7 105 0
            6 1 1 6 89 0 6 6 1 97 8 1 1 6 1 81
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 22 values pushed */
          0 0 49 47 43 41 37 35 31 29 21 19 15 13 0 11 0 10 36 9 8 23
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="period" xMin="267" yMin="-8" xMax="433" yMax="164">
      <contour>
        <pt x="310" y="-8" on="0"/>
        <pt x="267" y="37" on="0"/>
        <pt x="267" y="78" on="1"/>
        <pt x="267" y="119" on="0"/>
        <pt x="310" y="164" on="0"/>
        <pt x="350" y="164" on="1"/>
        <pt x="390" y="164" on="0"/>
        <pt x="433" y="119" on="0"/>
        <pt x="433" y="78" on="1"/>
        <pt x="433" y="37" on="0"/>
        <pt x="390" y="-8" on="0"/>
        <pt x="350" y="-8" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          9
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 12 values pushed */
            0 0 0 1 97 2 1 1 1 26 1 78
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            50
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 12 values pushed */
              0 0 0 1 97 2 1 1 1 32 1 78
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 17 values pushed */
              0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 10 values pushed */
          0 0 0 11 0 10 36 3 8 23
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="plus" xMin="93" yMin="93" xMax="607" yMax="607">
      <contour>
        <pt x="93" y="394" on="1"/>
        <pt x="306" y="394" on="1"/>
        <pt x="306" y="607" on="1"/>
        <pt x="394" y="607" on="1"/>
        <pt x="394" y="394" on="1"/>
        <pt x="607" y="394" on="1"/>
        <pt x="607" y="306" on="1"/>
        <pt x="394" y="306" on="1"/>
        <pt x="394" y="93" on="1"/>
        <pt x="306" y="93" on="1"/>
        <pt x="306" y="306" on="1"/>
        <pt x="93" y="306" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 21 values pushed */
            2 1 0 5 1 3 4 0 3 103 0 4 4 1 95 0 1 1 28 4 78
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 26 values pushed */
            0 1 0 4 1 87 2 1 0 5 1 3 4 0 3 103 0 1 1 4 95 0 4 1 4
            79
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 9 values pushed */
          17 17 17 17 17 16 6 8 28
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="plus.case" xMin="93" yMin="143" xMax="607" yMax="657">
      <component glyphName="plus" x="0" y="50" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 2 values pushed */
          0 1
          PUSHB[ ]	/* 1 value pushed */
          50
          PUSHB[ ]	/* 1 value pushed */
          53
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="q" xMin="68" yMin="-200" xMax="587" yMax="613">
      <contour>
        <pt x="365" y="613" on="0"/>
        <pt x="448" y="561" on="0"/>
        <pt x="463" y="513" on="1"/>
        <pt x="491" y="513" on="1"/>
        <pt x="491" y="598" on="1"/>
        <pt x="587" y="598" on="1"/>
        <pt x="587" y="-200" on="1"/>
        <pt x="491" y="-200" on="1"/>
        <pt x="491" y="85" on="1"/>
        <pt x="463" y="85" on="1"/>
        <pt x="448" y="37" on="0"/>
        <pt x="365" y="-15" on="0"/>
        <pt x="304" y="-15" on="1"/>
        <pt x="232" y="-15" on="0"/>
        <pt x="125" y="61" on="0"/>
        <pt x="68" y="203" on="0"/>
        <pt x="68" y="299" on="1"/>
        <pt x="68" y="395" on="0"/>
        <pt x="125" y="537" on="0"/>
        <pt x="232" y="613" on="0"/>
        <pt x="304" y="613" on="1"/>
      </contour>
      <contour>
        <pt x="166" y="192" on="0"/>
        <pt x="253" y="73" on="0"/>
        <pt x="331" y="73" on="1"/>
        <pt x="409" y="73" on="0"/>
        <pt x="496" y="192" on="0"/>
        <pt x="496" y="299" on="1"/>
        <pt x="496" y="406" on="0"/>
        <pt x="409" y="524" on="0"/>
        <pt x="331" y="524" on="1"/>
        <pt x="253" y="524" on="0"/>
        <pt x="166" y="406" on="0"/>
        <pt x="166" y="299" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          16
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 36 values pushed */
            0 0 0 3 6 0 3 103 0 7 7 1 97 8 5 2 1 1 28 77 0 6 6 4 97
            0 4 4 32 77 0 2 2 30 2 78
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            50
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 40 values pushed */
              0 0 0 3 6 0 3 103 0 1 1 28 77 0 7 7 5 97 8 1 5 5 34 77 0
              6 6 4 97 0 4 4 32 77 0 2 2 30 2 78
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 41 values pushed */
              0 1 7 2 1 87 8 1 5 0 7 0 5 7 105 0 0 0 3 6 0 3 103 0 6
              0 4 2 6 4 105 0 1 1 2 95 0 2 1 2 79
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 18 values pushed */
          0 0 30 28 24 22 0 20 0 19 34 17 17 17 18 9 8 27
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="question" xMin="76" yMin="-7" xMax="606" yMax="815">
      <contour>
        <pt x="277" y="276" on="0"/>
        <pt x="311" y="357" on="0"/>
        <pt x="361" y="409" on="0"/>
        <pt x="402" y="441" on="1"/>
        <pt x="436" y="468" on="0"/>
        <pt x="477" y="507" on="0"/>
        <pt x="504" y="564" on="0"/>
        <pt x="504" y="601" on="1"/>
        <pt x="504" y="656" on="0"/>
        <pt x="424" y="719" on="0"/>
        <pt x="354" y="719" on="1"/>
        <pt x="279" y="719" on="0"/>
        <pt x="190" y="644" on="0"/>
        <pt x="183" y="576" on="1"/>
        <pt x="76" y="576" on="1"/>
        <pt x="90" y="691" on="0"/>
        <pt x="234" y="815" on="0"/>
        <pt x="354" y="815" on="1"/>
        <pt x="471" y="815" on="0"/>
        <pt x="606" y="700" on="0"/>
        <pt x="606" y="601" on="1"/>
        <pt x="606" y="547" on="0"/>
        <pt x="571" y="468" on="0"/>
        <pt x="521" y="416" on="0"/>
        <pt x="480" y="383" on="1"/>
        <pt x="445" y="354" on="0"/>
        <pt x="404" y="313" on="0"/>
        <pt x="377" y="255" on="0"/>
        <pt x="377" y="218" on="1"/>
        <pt x="277" y="218" on="1"/>
      </contour>
      <contour>
        <pt x="250" y="103" on="0"/>
        <pt x="291" y="141" on="0"/>
        <pt x="329" y="141" on="1"/>
        <pt x="367" y="141" on="0"/>
        <pt x="408" y="103" on="0"/>
        <pt x="408" y="67" on="1"/>
        <pt x="408" y="32" on="0"/>
        <pt x="367" y="-7" on="0"/>
        <pt x="329" y="-7" on="1"/>
        <pt x="291" y="-7" on="0"/>
        <pt x="250" y="32" on="0"/>
        <pt x="250" y="67" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 36 values pushed */
            0 1 0 3 0 1 3 128 0 3 4 0 3 4 126 0 0 0 2 97 0 2 2 31 77
            0 4 4 5 97 0 5 5 26 5 78
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 39 values pushed */
            0 1 0 3 0 1 3 128 0 3 4 0 3 4 126 0 2 0 0 1 2 0 105 0 4
            5 5 4 89 0 4 4 5 97 0 5 4 5 81
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 9 values pushed */
          36 34 26 34 18 41 6 8 28
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="quotedbl" xMin="186" yMin="466" xMax="514" yMax="848">
      <component glyphName="quotesingle" x="-109" y="0" flags="0x0"/>
      <component glyphName="quotesingle" x="109" y="0" flags="0x0"/>
    </TTGlyph>

    <TTGlyph name="quotedblbase" xMin="116" yMin="-178" xMax="553" yMax="164">
      <component glyphName="comma" x="-139" y="0" flags="0x0"/>
      <component glyphName="comma" x="111" y="0" flags="0x0"/>
    </TTGlyph>

    <TTGlyph name="quotedblleft" xMin="147" yMin="494" xMax="584" yMax="836">
      <contour>
        <pt x="529" y="666" on="0"/>
        <pt x="572" y="621" on="0"/>
        <pt x="572" y="580" on="1"/>
        <pt x="572" y="539" on="0"/>
        <pt x="529" y="494" on="0"/>
        <pt x="489" y="494" on="1"/>
        <pt x="442" y="494" on="0"/>
        <pt x="397" y="549" on="0"/>
        <pt x="397" y="606" on="1"/>
        <pt x="397" y="678" on="0"/>
        <pt x="427" y="790" on="0"/>
        <pt x="458" y="836" on="1"/>
        <pt x="584" y="836" on="1"/>
        <pt x="531" y="795" on="0"/>
        <pt x="472" y="711" on="0"/>
        <pt x="463" y="663" on="1"/>
        <pt x="475" y="666" on="0"/>
        <pt x="489" y="666" on="1"/>
      </contour>
      <contour>
        <pt x="147" y="678" on="0"/>
        <pt x="177" y="790" on="0"/>
        <pt x="208" y="836" on="1"/>
        <pt x="334" y="836" on="1"/>
        <pt x="281" y="795" on="0"/>
        <pt x="222" y="711" on="0"/>
        <pt x="213" y="663" on="1"/>
        <pt x="225" y="666" on="0"/>
        <pt x="239" y="666" on="1"/>
        <pt x="279" y="666" on="0"/>
        <pt x="322" y="621" on="0"/>
        <pt x="322" y="580" on="1"/>
        <pt x="322" y="539" on="0"/>
        <pt x="279" y="494" on="0"/>
        <pt x="239" y="494" on="1"/>
        <pt x="192" y="494" on="0"/>
        <pt x="147" y="549" on="0"/>
        <pt x="147" y="606" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 41 values pushed */
          24 15 2 0 2 1 76 4 6 2 2 5 1 0 2 0 102 3 1 1 1 27 1 78 0
          0 33 31 27 25 21 20 0 17 0 16 21 36 7 8 24
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="quotedblright" xMin="116" yMin="556" xMax="553" yMax="898">
      <component glyphName="quotedblbase" x="0" y="734" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 2 values pushed */
          0 2
          PUSHW[ ]	/* 1 value pushed */
          734
          PUSHB[ ]	/* 1 value pushed */
          53
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="quoteleft" xMin="258" yMin="494" xMax="445" yMax="836">
      <contour>
        <pt x="390" y="666" on="0"/>
        <pt x="433" y="621" on="0"/>
        <pt x="433" y="580" on="1"/>
        <pt x="433" y="539" on="0"/>
        <pt x="390" y="494" on="0"/>
        <pt x="350" y="494" on="1"/>
        <pt x="303" y="494" on="0"/>
        <pt x="258" y="549" on="0"/>
        <pt x="258" y="606" on="1"/>
        <pt x="258" y="678" on="0"/>
        <pt x="288" y="790" on="0"/>
        <pt x="319" y="836" on="1"/>
        <pt x="445" y="836" on="1"/>
        <pt x="392" y="795" on="0"/>
        <pt x="333" y="711" on="0"/>
        <pt x="324" y="663" on="1"/>
        <pt x="336" y="666" on="0"/>
        <pt x="350" y="666" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 31 values pushed */
          15 1 0 2 1 76 3 1 2 0 0 2 0 102 0 1 1 27 1 78 0 0 0 17 0
          16 21 36 4 8 24
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="quoteright" xMin="255" yMin="556" xMax="442" yMax="898">
      <component glyphName="comma" x="0" y="734" flags="0x4"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 2 values pushed */
          0 1
          PUSHW[ ]	/* 1 value pushed */
          734
          PUSHB[ ]	/* 1 value pushed */
          53
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="quotesinglbase" xMin="255" yMin="-178" xMax="442" yMax="164">
      <component glyphName="comma" x="0" y="0" flags="0x0"/>
    </TTGlyph>

    <TTGlyph name="quotesingle" xMin="295" yMin="466" xMax="405" yMax="848">
      <contour>
        <pt x="405" y="848" on="1"/>
        <pt x="387" y="466" on="1"/>
        <pt x="313" y="466" on="1"/>
        <pt x="295" y="848" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 22 values pushed */
          0 0 0 1 95 2 1 1 1 27 0 78 0 0 0 3 0 3 17 3 8 23
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="r" xMin="97" yMin="0" xMax="630" yMax="613">
      <contour>
        <pt x="328" y="598" on="1"/>
        <pt x="328" y="531" on="1"/>
        <pt x="356" y="531" on="1"/>
        <pt x="384" y="613" on="0"/>
        <pt x="480" y="613" on="1"/>
        <pt x="551" y="613" on="0"/>
        <pt x="630" y="516" on="0"/>
        <pt x="630" y="428" on="1"/>
        <pt x="630" y="340" on="1"/>
        <pt x="529" y="340" on="1"/>
        <pt x="529" y="413" on="1"/>
        <pt x="529" y="522" on="0"/>
        <pt x="441" y="522" on="1"/>
        <pt x="328" y="522" on="0"/>
        <pt x="328" y="329" on="1"/>
        <pt x="328" y="90" on="1"/>
        <pt x="521" y="90" on="1"/>
        <pt x="521" y="0" on="1"/>
        <pt x="117" y="0" on="1"/>
        <pt x="117" y="90" on="1"/>
        <pt x="232" y="90" on="1"/>
        <pt x="232" y="508" on="1"/>
        <pt x="97" y="508" on="1"/>
        <pt x="97" y="598" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          16
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 40 values pushed */
            0 0 1 3 1 0 114 0 2 3 4 3 2 4 128 7 1 3 3 1 97 9 8 2 1
            1 34 77 6 1 4 4 5 95 0 5 5 26 5 78
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            17
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 51 values pushed */
              0 0 8 3 8 0 3 128 0 2 3 4 3 2 4 128 7 1 3 3 1 97 0 1 1
              34 77 7 1 3 3 8 95 9 1 8 8 28 77 6 1 4 4 5 95 0 5 5 26 5
              78
            ELSE[ ]	/* Else */
              MPPEM[ ]	/* MeasurePixelPerEm */
              PUSHB[ ]	/* 1 value pushed */
              50
              LT[ ]	/* LessThan */
              IF[ ]	/* If */
                NPUSHB[ ]	/* 49 values pushed */
                0 0 8 3 8 0 3 128 0 2 7 4 7 2 4 128 0 3 3 1 97 0 1 1 34
                77 0 7 7 8 95 9 1 8 8 28 77 6 1 4 4 5 95 0 5 5 26 5 78
              ELSE[ ]	/* Else */
                NPUSHB[ ]	/* 51 values pushed */
                0 0 8 3 8 0 3 128 0 2 7 4 7 2 4 128 0 1 0 3 7 1 3 105 9
                1 8 0 7 2 8 7 103 6 1 4 5 5 4 87 6 1 4 4 5 95 0 5 4 5
                79
              EIF[ ]	/* EndIf */
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 17 values pushed */
          0 0 0 23 0 23 17 17 17 18 34 19 33 17 10 8 30
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="s" xMin="115" yMin="-15" xMax="600" yMax="613">
      <contour>
        <pt x="217" y="130" on="0"/>
        <pt x="292" y="75" on="0"/>
        <pt x="356" y="75" on="1"/>
        <pt x="418" y="75" on="0"/>
        <pt x="488" y="124" on="0"/>
        <pt x="488" y="167" on="1"/>
        <pt x="488" y="200" on="0"/>
        <pt x="436" y="239" on="0"/>
        <pt x="380" y="247" on="1"/>
        <pt x="305" y="258" on="1"/>
        <pt x="211" y="272" on="0"/>
        <pt x="119" y="357" on="0"/>
        <pt x="119" y="429" on="1"/>
        <pt x="119" y="515" on="0"/>
        <pt x="244" y="613" on="0"/>
        <pt x="354" y="613" on="1"/>
        <pt x="464" y="613" on="0"/>
        <pt x="594" y="502" on="0"/>
        <pt x="600" y="402" on="1"/>
        <pt x="505" y="402" on="1"/>
        <pt x="501" y="461" on="0"/>
        <pt x="422" y="523" on="0"/>
        <pt x="353" y="523" on="1"/>
        <pt x="287" y="523" on="0"/>
        <pt x="215" y="474" on="0"/>
        <pt x="215" y="430" on="1"/>
        <pt x="215" y="397" on="0"/>
        <pt x="266" y="359" on="0"/>
        <pt x="323" y="351" on="1"/>
        <pt x="398" y="340" on="1"/>
        <pt x="492" y="325" on="0"/>
        <pt x="583" y="241" on="0"/>
        <pt x="583" y="168" on="1"/>
        <pt x="583" y="83" on="0"/>
        <pt x="462" y="-15" on="0"/>
        <pt x="355" y="-15" on="1"/>
        <pt x="249" y="-15" on="0"/>
        <pt x="124" y="88" on="0"/>
        <pt x="115" y="182" on="1"/>
        <pt x="210" y="182" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 36 values pushed */
            0 2 3 5 3 2 5 128 0 5 0 3 5 0 126 0 3 3 1 97 0 1 1 34 77
            0 0 0 4 97 0 4 4 32 4 78
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 39 values pushed */
            0 2 3 5 3 2 5 128 0 5 0 3 5 0 126 0 1 0 3 2 1 3 105 0 0
            4 4 0 89 0 0 0 4 97 0 4 0 4 81
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 9 values pushed */
          18 43 34 18 43 33 6 8 28
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="section" xMin="121" yMin="-216" xMax="579" yMax="816">
      <contour>
        <pt x="462" y="661" on="0"/>
        <pt x="404" y="720" on="0"/>
        <pt x="356" y="720" on="1"/>
        <pt x="313" y="720" on="0"/>
        <pt x="262" y="670" on="0"/>
        <pt x="262" y="628" on="1"/>
        <pt x="262" y="580" on="0"/>
        <pt x="322" y="521" on="0"/>
        <pt x="380" y="510" on="1"/>
        <pt x="473" y="493" on="0"/>
        <pt x="579" y="385" on="0"/>
        <pt x="579" y="307" on="1"/>
        <pt x="579" y="239" on="0"/>
        <pt x="504" y="147" on="0"/>
        <pt x="436" y="129" on="1"/>
        <pt x="436" y="101" on="1"/>
        <pt x="486" y="86" on="0"/>
        <pt x="540" y="14" on="0"/>
        <pt x="540" y="-38" on="1"/>
        <pt x="540" y="-119" on="0"/>
        <pt x="434" y="-216" on="0"/>
        <pt x="345" y="-216" on="1"/>
        <pt x="252" y="-216" on="0"/>
        <pt x="140" y="-107" on="0"/>
        <pt x="131" y="-7" on="1"/>
        <pt x="234" y="-7" on="1"/>
        <pt x="238" y="-61" on="0"/>
        <pt x="296" y="-120" on="0"/>
        <pt x="344" y="-120" on="1"/>
        <pt x="387" y="-120" on="0"/>
        <pt x="438" y="-70" on="0"/>
        <pt x="438" y="-28" on="1"/>
        <pt x="438" y="20" on="0"/>
        <pt x="378" y="79" on="0"/>
        <pt x="320" y="90" on="1"/>
        <pt x="227" y="107" on="0"/>
        <pt x="121" y="215" on="0"/>
        <pt x="121" y="293" on="1"/>
        <pt x="121" y="361" on="0"/>
        <pt x="196" y="453" on="0"/>
        <pt x="264" y="471" on="1"/>
        <pt x="264" y="499" on="1"/>
        <pt x="214" y="514" on="0"/>
        <pt x="160" y="586" on="0"/>
        <pt x="160" y="638" on="1"/>
        <pt x="160" y="719" on="0"/>
        <pt x="266" y="816" on="0"/>
        <pt x="355" y="816" on="1"/>
        <pt x="448" y="816" on="0"/>
        <pt x="560" y="707" on="0"/>
        <pt x="569" y="607" on="1"/>
        <pt x="466" y="607" on="1"/>
      </contour>
      <contour>
        <pt x="223" y="248" on="0"/>
        <pt x="291" y="188" on="0"/>
        <pt x="350" y="188" on="1"/>
        <pt x="409" y="188" on="0"/>
        <pt x="477" y="248" on="0"/>
        <pt x="477" y="300" on="1"/>
        <pt x="477" y="352" on="0"/>
        <pt x="409" y="412" on="0"/>
        <pt x="350" y="412" on="1"/>
        <pt x="291" y="412" on="0"/>
        <pt x="223" y="352" on="0"/>
        <pt x="223" y="300" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 12 values pushed */
          41 40 2 7 5 15 14 2 2 6 2 76
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 50 values pushed */
            0 5 0 7 0 5 7 128 0 7 6 0 7 6 126 0 6 2 0 6 2 126 0 2 3
            0 2 3 126 0 0 0 4 97 0 4 4 31 77 0 3 3 1 98 0 1 1 36 1 78
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 53 values pushed */
            0 5 0 7 0 5 7 128 0 7 6 0 7 6 126 0 6 2 0 6 2 126 0 2 3
            0 2 3 126 0 4 0 0 5 4 0 105 0 3 1 1 3 89 0 3 3 1 98 0 1
            3 1 82
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 18 values pushed */
          61 59 55 53 51 50 48 46 29 27 25 24 22 20 33 8 8 23
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="semicolon" xMin="255" yMin="-178" xMax="442" yMax="606">
      <component glyphName="period" x="0" y="442" flags="0x4"/>
      <component glyphName="comma" x="0" y="0" flags="0x0"/>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 2 values pushed */
          0 1
          PUSHW[ ]	/* 1 value pushed */
          442
          PUSHB[ ]	/* 1 value pushed */
          53
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="seven" xMin="90" yMin="0" xMax="594" yMax="800">
      <contour>
        <pt x="297" y="0" on="1"/>
        <pt x="188" y="0" on="1"/>
        <pt x="518" y="704" on="1"/>
        <pt x="90" y="704" on="1"/>
        <pt x="90" y="800" on="1"/>
        <pt x="594" y="800" on="1"/>
        <pt x="594" y="645" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 6 values pushed */
          6 1 0 1 1 76
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 16 values pushed */
            0 1 1 2 95 0 2 2 25 77 0 0 0 26 0 78
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 21 values pushed */
            0 0 1 0 134 0 2 1 1 2 87 0 2 2 1 95 0 1 2 1 79
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 6 values pushed */
          17 17 16 3 8 25
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="six" xMin="77" yMin="-15" xMax="623" yMax="800">
      <contour>
        <pt x="268" y="-15" on="0"/>
        <pt x="145" y="52" on="0"/>
        <pt x="77" y="174" on="0"/>
        <pt x="77" y="254" on="1"/>
        <pt x="77" y="315" on="0"/>
        <pt x="116" y="429" on="0"/>
        <pt x="157" y="488" on="1"/>
        <pt x="367" y="800" on="1"/>
        <pt x="487" y="800" on="1"/>
        <pt x="274" y="494" on="1"/>
        <pt x="296" y="478" on="1"/>
        <pt x="309" y="491" on="0"/>
        <pt x="363" y="507" on="0"/>
        <pt x="394" y="507" on="1"/>
        <pt x="460" y="507" on="0"/>
        <pt x="564" y="442" on="0"/>
        <pt x="623" y="327" on="0"/>
        <pt x="623" y="254" on="1"/>
        <pt x="623" y="174" on="0"/>
        <pt x="555" y="52" on="0"/>
        <pt x="431" y="-15" on="0"/>
        <pt x="349" y="-15" on="1"/>
      </contour>
      <contour>
        <pt x="179" y="176" on="0"/>
        <pt x="273" y="81" on="0"/>
        <pt x="350" y="81" on="1"/>
        <pt x="427" y="81" on="0"/>
        <pt x="521" y="176" on="0"/>
        <pt x="521" y="254" on="1"/>
        <pt x="521" y="333" on="0"/>
        <pt x="427" y="428" on="0"/>
        <pt x="350" y="428" on="1"/>
        <pt x="273" y="428" on="0"/>
        <pt x="179" y="333" on="0"/>
        <pt x="179" y="254" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          10 9 2 4 1 1 76
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 25 values pushed */
            0 1 0 4 3 1 4 106 0 0 0 25 77 0 3 3 2 97 5 1 2 2 32 2 78
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 30 values pushed */
            0 0 1 0 133 0 1 0 4 3 1 4 106 0 3 2 2 3 89 0 3 3 2 97 5
            1 2 3 2 81
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 15 values pushed */
          0 0 31 29 25 23 0 21 0 20 36 23 6 8 24
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="slash" xMin="129" yMin="-170" xMax="571" yMax="848">
      <contour>
        <pt x="224" y="-170" on="1"/>
        <pt x="129" y="-170" on="1"/>
        <pt x="476" y="848" on="1"/>
        <pt x="571" y="848" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 16 values pushed */
          0 0 1 0 134 0 1 1 27 1 78 17 16 2 8 24
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="space"/><!-- contains no outline data -->

    <TTGlyph name="sterling" xMin="100" yMin="0" xMax="619" yMax="815">
      <contour>
        <pt x="160" y="186" on="0"/>
        <pt x="218" y="250" on="0"/>
        <pt x="218" y="299" on="1"/>
        <pt x="218" y="324" on="0"/>
        <pt x="212" y="346" on="1"/>
        <pt x="100" y="346" on="1"/>
        <pt x="100" y="430" on="1"/>
        <pt x="180" y="430" on="1"/>
        <pt x="165" y="468" on="0"/>
        <pt x="148" y="537" on="0"/>
        <pt x="148" y="580" on="1"/>
        <pt x="148" y="690" on="0"/>
        <pt x="270" y="815" on="0"/>
        <pt x="378" y="815" on="1"/>
        <pt x="486" y="815" on="0"/>
        <pt x="609" y="683" on="0"/>
        <pt x="619" y="555" on="1"/>
        <pt x="517" y="555" on="1"/>
        <pt x="509" y="636" on="0"/>
        <pt x="438" y="719" on="0"/>
        <pt x="378" y="719" on="1"/>
        <pt x="317" y="719" on="0"/>
        <pt x="249" y="646" on="0"/>
        <pt x="249" y="580" on="1"/>
        <pt x="249" y="542" on="0"/>
        <pt x="268" y="475" on="0"/>
        <pt x="287" y="430" on="1"/>
        <pt x="489" y="430" on="1"/>
        <pt x="489" y="346" on="1"/>
        <pt x="314" y="346" on="1"/>
        <pt x="319" y="321" on="0"/>
        <pt x="319" y="299" on="1"/>
        <pt x="319" y="222" on="0"/>
        <pt x="230" y="121" on="0"/>
        <pt x="137" y="96" on="1"/>
        <pt x="600" y="96" on="1"/>
        <pt x="600" y="0" on="1"/>
        <pt x="100" y="0" on="1"/>
        <pt x="100" y="170" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 6 values pushed */
          38 1 7 0 1 76
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 39 values pushed */
            0 3 4 1 4 3 1 128 5 1 1 6 1 0 7 1 0 103 0 4 4 2 97 0 2
            2 31 77 0 7 7 8 95 0 8 8 26 8 78
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 42 values pushed */
            0 3 4 1 4 3 1 128 0 2 0 4 3 2 4 105 5 1 1 6 1 0 7 1 0
            103 0 7 8 8 7 87 0 7 7 8 95 0 8 7 8 79
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 12 values pushed */
          17 21 17 21 34 18 37 17 20 9 8 31
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="t" xMin="83" yMin="-15" xMax="607" yMax="750">
      <contour>
        <pt x="315" y="598" on="1"/>
        <pt x="588" y="598" on="1"/>
        <pt x="588" y="508" on="1"/>
        <pt x="315" y="508" on="1"/>
        <pt x="315" y="193" on="1"/>
        <pt x="315" y="75" on="0"/>
        <pt x="409" y="75" on="1"/>
        <pt x="503" y="75" on="0"/>
        <pt x="516" y="206" on="1"/>
        <pt x="607" y="206" on="1"/>
        <pt x="598" y="98" on="0"/>
        <pt x="495" y="-15" on="0"/>
        <pt x="405" y="-15" on="1"/>
        <pt x="314" y="-15" on="0"/>
        <pt x="219" y="92" on="0"/>
        <pt x="219" y="193" on="1"/>
        <pt x="219" y="508" on="1"/>
        <pt x="83" y="508" on="1"/>
        <pt x="83" y="598" on="1"/>
        <pt x="219" y="598" on="1"/>
        <pt x="219" y="750" on="1"/>
        <pt x="315" y="750" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 36 values pushed */
            0 7 0 7 133 0 3 1 2 1 3 2 128 5 1 1 1 0 95 6 1 0 0 28 77
            0 2 2 4 97 0 4 4 32 4 78
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 39 values pushed */
            0 7 0 7 133 0 3 1 2 1 3 2 128 6 1 0 5 1 1 3 0 1 103 0 2
            4 4 2 89 0 2 2 4 97 0 4 2 4 81
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 11 values pushed */
          17 17 19 34 17 34 17 16 8 8 30
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="three" xMin="74" yMin="-15" xMax="618" yMax="815">
      <contour>
        <pt x="614" y="106" on="0"/>
        <pt x="475" y="-15" on="0"/>
        <pt x="354" y="-15" on="1"/>
        <pt x="232" y="-15" on="0"/>
        <pt x="90" y="114" on="0"/>
        <pt x="79" y="234" on="1"/>
        <pt x="183" y="234" on="1"/>
        <pt x="191" y="160" on="0"/>
        <pt x="280" y="81" on="0"/>
        <pt x="354" y="81" on="1"/>
        <pt x="428" y="81" on="0"/>
        <pt x="513" y="154" on="0"/>
        <pt x="513" y="217" on="1"/>
        <pt x="513" y="281" on="0"/>
        <pt x="435" y="354" on="0"/>
        <pt x="367" y="354" on="1"/>
        <pt x="275" y="354" on="1"/>
        <pt x="275" y="448" on="1"/>
        <pt x="367" y="448" on="1"/>
        <pt x="437" y="448" on="0"/>
        <pt x="516" y="519" on="0"/>
        <pt x="516" y="581" on="1"/>
        <pt x="516" y="645" on="0"/>
        <pt x="433" y="719" on="0"/>
        <pt x="361" y="719" on="1"/>
        <pt x="284" y="719" on="0"/>
        <pt x="190" y="634" on="0"/>
        <pt x="180" y="556" on="1"/>
        <pt x="74" y="556" on="1"/>
        <pt x="86" y="681" on="0"/>
        <pt x="235" y="815" on="0"/>
        <pt x="361" y="815" on="1"/>
        <pt x="480" y="815" on="0"/>
        <pt x="618" y="691" on="0"/>
        <pt x="618" y="584" on="1"/>
        <pt x="618" y="515" on="0"/>
        <pt x="545" y="425" on="0"/>
        <pt x="482" y="415" on="1"/>
        <pt x="482" y="387" on="1"/>
        <pt x="543" y="377" on="0"/>
        <pt x="614" y="284" on="0"/>
        <pt x="614" y="213" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          38 37 2 3 4 1 76
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 45 values pushed */
            0 6 5 4 5 6 4 128 0 1 3 2 3 1 2 128 0 4 0 3 1 4 3 103 0
            5 5 7 97 0 7 7 31 77 0 2 2 0 97 0 0 0 32 0 78
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 48 values pushed */
            0 6 5 4 5 6 4 128 0 1 3 2 3 1 2 128 0 7 0 5 6 7 5 105 0
            4 0 3 1 4 3 103 0 2 0 0 2 89 0 2 2 0 97 0 0 2 0 81
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 11 values pushed */
          34 18 36 33 36 34 18 33 8 8 30
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="two" xMin="88" yMin="0" xMax="618" yMax="815">
      <contour>
        <pt x="457" y="425" on="0"/>
        <pt x="517" y="516" on="0"/>
        <pt x="517" y="568" on="1"/>
        <pt x="517" y="639" on="0"/>
        <pt x="437" y="719" on="0"/>
        <pt x="366" y="719" on="1"/>
        <pt x="294" y="719" on="0"/>
        <pt x="206" y="634" on="0"/>
        <pt x="195" y="556" on="1"/>
        <pt x="88" y="556" on="1"/>
        <pt x="100" y="680" on="0"/>
        <pt x="244" y="815" on="0"/>
        <pt x="366" y="815" on="1"/>
        <pt x="484" y="815" on="0"/>
        <pt x="618" y="683" on="0"/>
        <pt x="618" y="568" on="1"/>
        <pt x="618" y="492" on="0"/>
        <pt x="539" y="366" on="0"/>
        <pt x="454" y="301" on="1"/>
        <pt x="182" y="96" on="1"/>
        <pt x="603" y="96" on="1"/>
        <pt x="603" y="0" on="1"/>
        <pt x="108" y="0" on="1"/>
        <pt x="108" y="152" on="1"/>
        <pt x="393" y="375" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 6 values pushed */
          23 1 3 1 1 76
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 29 values pushed */
            0 1 0 3 0 1 3 128 0 0 0 2 97 0 2 2 31 77 0 3 3 4 95 0 4
            4 26 4 78
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 32 values pushed */
            0 1 0 3 0 1 3 128 0 2 0 0 1 2 0 105 0 3 4 4 3 87 0 3 3
            4 95 0 4 3 4 79
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 8 values pushed */
          17 22 34 18 36 5 8 27
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="u" xMin="108" yMin="-15" xMax="580" yMax="598">
      <contour>
        <pt x="484" y="0" on="1"/>
        <pt x="484" y="80" on="1"/>
        <pt x="456" y="80" on="1"/>
        <pt x="442" y="35" on="0"/>
        <pt x="363" y="-15" on="0"/>
        <pt x="306" y="-15" on="1"/>
        <pt x="215" y="-15" on="0"/>
        <pt x="108" y="107" on="0"/>
        <pt x="108" y="211" on="1"/>
        <pt x="108" y="598" on="1"/>
        <pt x="204" y="598" on="1"/>
        <pt x="204" y="237" on="1"/>
        <pt x="204" y="158" on="0"/>
        <pt x="276" y="75" on="0"/>
        <pt x="344" y="75" on="1"/>
        <pt x="412" y="75" on="0"/>
        <pt x="484" y="158" on="0"/>
        <pt x="484" y="237" on="1"/>
        <pt x="484" y="598" on="1"/>
        <pt x="580" y="598" on="1"/>
        <pt x="580" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          16
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 27 values pushed */
            0 0 2 3 2 0 3 128 4 1 2 2 28 77 0 3 3 1 97 6 5 2 1 1 32
            1 78
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            50
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 31 values pushed */
              0 0 2 3 2 0 3 128 4 1 2 2 28 77 6 1 5 5 26 77 0 3 3 1 97
              0 1 1 32 1 78
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 34 values pushed */
              0 0 2 3 2 0 3 128 0 3 5 1 3 89 4 1 2 6 1 5 1 2 5 103 0
              3 3 1 97 0 1 3 1 81
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 14 values pushed */
          0 0 0 20 0 20 19 35 19 34 17 7 8 27
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="underscore" xMin="83" yMin="-121" xMax="617" yMax="-50">
      <contour>
        <pt x="617" y="-50" on="1"/>
        <pt x="617" y="-121" on="1"/>
        <pt x="83" y="-121" on="1"/>
        <pt x="83" y="-50" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 2 values pushed */
          6 100
          WCVTP[ ]	/* WriteCVTInPixels */
          NPUSHB[ ]	/* 28 values pushed */
          2 1 1 0 0 1 87 2 1 1 1 0 95 0 0 1 0 79 0 0 0 3 0 3 17
          3 8 23
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 2 values pushed */
          6 0
          WCVTP[ ]	/* WriteCVTInPixels */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni0237" xMin="103" yMin="-215" xMax="495" yMax="598">
      <contour>
        <pt x="495" y="598" on="1"/>
        <pt x="495" y="-19" on="1"/>
        <pt x="495" y="-113" on="0"/>
        <pt x="393" y="-215" on="0"/>
        <pt x="300" y="-215" on="1"/>
        <pt x="213" y="-215" on="0"/>
        <pt x="110" y="-127" on="0"/>
        <pt x="103" y="-46" on="1"/>
        <pt x="197" y="-46" on="1"/>
        <pt x="202" y="-86" on="0"/>
        <pt x="254" y="-127" on="0"/>
        <pt x="300" y="-127" on="1"/>
        <pt x="348" y="-127" on="0"/>
        <pt x="399" y="-72" on="0"/>
        <pt x="399" y="-19" on="1"/>
        <pt x="399" y="508" on="1"/>
        <pt x="135" y="508" on="1"/>
        <pt x="135" y="598" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 30 values pushed */
            0 1 3 2 3 1 2 128 0 3 3 4 95 5 1 4 4 28 77 0 2 2 0 97 0
            0 0 36 0 78
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 33 values pushed */
            0 1 3 2 3 1 2 128 5 1 4 0 3 1 4 3 103 0 2 0 0 2 89 0 2
            2 0 97 0 0 2 0 81
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 13 values pushed */
          0 0 0 17 0 17 19 34 18 35 6 8 26
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni0306.cy" xMin="6" yMin="880" xMax="338" yMax="1024">
      <contour>
        <pt x="96" y="948" on="0"/>
        <pt x="172" y="948" on="1"/>
        <pt x="248" y="948" on="0"/>
        <pt x="252" y="1024" on="1"/>
        <pt x="338" y="1024" on="1"/>
        <pt x="332" y="956" on="0"/>
        <pt x="244" y="880" on="0"/>
        <pt x="172" y="880" on="1"/>
        <pt x="100" y="880" on="0"/>
        <pt x="12" y="956" on="0"/>
        <pt x="6" y="1024" on="1"/>
        <pt x="92" y="1024" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 29 values pushed */
          3 1 1 0 1 133 0 0 2 2 0 89 0 0 0 2 97 0 2 0 2 81 18 34 17
          32 4 6 26
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni0307" xMin="10" yMin="692" xMax="158" yMax="845">
      <contour>
        <pt x="51" y="692" on="0"/>
        <pt x="10" y="733" on="0"/>
        <pt x="10" y="768" on="1"/>
        <pt x="10" y="804" on="0"/>
        <pt x="51" y="845" on="0"/>
        <pt x="84" y="845" on="1"/>
        <pt x="117" y="845" on="0"/>
        <pt x="158" y="804" on="0"/>
        <pt x="158" y="768" on="1"/>
        <pt x="158" y="733" on="0"/>
        <pt x="117" y="692" on="0"/>
        <pt x="84" y="692" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 2 values pushed */
          6 100
          WCVTP[ ]	/* WriteCVTInPixels */
          NPUSHB[ ]	/* 27 values pushed */
          0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81 0 0 0 11 0 10 36 3
          8 23
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 2 values pushed */
          6 0
          WCVTP[ ]	/* WriteCVTInPixels */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni0308" xMin="-136" yMin="875" xMax="236" yMax="996">
      <contour>
        <pt x="-102" y="875" on="0"/>
        <pt x="-136" y="907" on="0"/>
        <pt x="-136" y="935" on="1"/>
        <pt x="-136" y="963" on="0"/>
        <pt x="-102" y="996" on="0"/>
        <pt x="-73" y="996" on="1"/>
        <pt x="-43" y="996" on="0"/>
        <pt x="-9" y="964" on="0"/>
        <pt x="-9" y="935" on="1"/>
        <pt x="-9" y="907" on="0"/>
        <pt x="-43" y="875" on="0"/>
        <pt x="-73" y="875" on="1"/>
      </contour>
      <contour>
        <pt x="109" y="964" on="0"/>
        <pt x="143" y="996" on="0"/>
        <pt x="173" y="996" on="1"/>
        <pt x="202" y="996" on="0"/>
        <pt x="236" y="963" on="0"/>
        <pt x="236" y="935" on="1"/>
        <pt x="236" y="907" on="0"/>
        <pt x="202" y="875" on="0"/>
        <pt x="173" y="875" on="1"/>
        <pt x="143" y="875" on="0"/>
        <pt x="109" y="907" on="0"/>
        <pt x="109" y="935" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 2 values pushed */
          6 100
          WCVTP[ ]	/* WriteCVTInPixels */
          NPUSHB[ ]	/* 34 values pushed */
          2 1 0 1 1 0 89 2 1 0 0 1 97 3 4 2 1 0 1 81 0 0 21 19 15
          13 0 11 0 10 36 5 8 23
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 2 values pushed */
          6 0
          WCVTP[ ]	/* WriteCVTInPixels */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni043D" xMin="120" yMin="0" xMax="580" yMax="598">
      <contour>
        <pt x="216" y="598" on="1"/>
        <pt x="216" y="340" on="1"/>
        <pt x="484" y="340" on="1"/>
        <pt x="484" y="598" on="1"/>
        <pt x="580" y="598" on="1"/>
        <pt x="580" y="0" on="1"/>
        <pt x="484" y="0" on="1"/>
        <pt x="484" y="250" on="1"/>
        <pt x="216" y="250" on="1"/>
        <pt x="216" y="0" on="1"/>
        <pt x="120" y="0" on="1"/>
        <pt x="120" y="598" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 22 values pushed */
            0 0 0 3 2 0 3 103 6 5 2 1 1 17 77 4 1 2 2 18 2 78
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 29 values pushed */
            6 5 2 1 0 2 1 87 0 0 0 3 2 0 3 103 6 5 2 1 1 2 95 4 1
            2 1 2 79
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 14 values pushed */
          0 0 0 11 0 11 17 17 17 17 17 7 7 27
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni043E" xMin="84" yMin="-15" xMax="616" yMax="613">
      <component glyphName="o" x="0" y="0" flags="0x0"/>
    </TTGlyph>

    <TTGlyph name="uni2002"/><!-- contains no outline data -->

    <TTGlyph name="uni2003"/><!-- contains no outline data -->

    <TTGlyph name="uni20BD" xMin="54" yMin="0" xMax="650" yMax="800">
      <contour>
        <pt x="515" y="800" on="0"/>
        <pt x="650" y="674" on="0"/>
        <pt x="650" y="564" on="1"/>
        <pt x="650" y="453" on="0"/>
        <pt x="515" y="327" on="0"/>
        <pt x="397" y="327" on="1"/>
        <pt x="255" y="327" on="1"/>
        <pt x="255" y="237" on="1"/>
        <pt x="443" y="237" on="1"/>
        <pt x="443" y="156" on="1"/>
        <pt x="255" y="156" on="1"/>
        <pt x="255" y="0" on="1"/>
        <pt x="159" y="0" on="1"/>
        <pt x="159" y="156" on="1"/>
        <pt x="54" y="156" on="1"/>
        <pt x="54" y="237" on="1"/>
        <pt x="159" y="237" on="1"/>
        <pt x="159" y="327" on="1"/>
        <pt x="54" y="327" on="1"/>
        <pt x="54" y="408" on="1"/>
        <pt x="159" y="408" on="1"/>
        <pt x="159" y="800" on="1"/>
        <pt x="397" y="800" on="1"/>
      </contour>
      <contour>
        <pt x="401" y="416" on="1"/>
        <pt x="470" y="416" on="0"/>
        <pt x="548" y="493" on="0"/>
        <pt x="548" y="560" on="1"/>
        <pt x="548" y="628" on="0"/>
        <pt x="470" y="704" on="0"/>
        <pt x="401" y="704" on="1"/>
        <pt x="255" y="704" on="1"/>
        <pt x="255" y="416" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          30
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 38 values pushed */
            12 9 2 7 6 1 0 1 7 0 103 5 1 1 4 1 2 3 1 2 103 0 10 10 8
            95 11 1 8 8 25 77 0 3 3 26 3 78
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            50
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 43 values pushed */
              12 1 9 7 0 9 87 0 7 6 1 0 1 7 0 103 5 1 1 4 1 2 3 1 2
              103 0 10 10 8 95 11 1 8 8 25 77 0 3 3 26 3 78
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 49 values pushed */
              0 3 2 3 134 11 1 8 0 10 9 8 10 103 12 1 9 7 0 9 87 0 7 6 1
              0 1 7 0 103 5 1 1 2 2 1 87 5 1 1 1 2 95 4 1 2 1 2 79
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 25 values pushed */
          24 23 0 0 30 28 23 31 24 31 0 22 0 21 17 17 17 17 17 17 17 36 13 8 30
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="v" xMin="70" yMin="0" xMax="630" yMax="598">
      <contour>
        <pt x="171" y="598" on="1"/>
        <pt x="353" y="45" on="1"/>
        <pt x="535" y="598" on="1"/>
        <pt x="630" y="598" on="1"/>
        <pt x="428" y="0" on="1"/>
        <pt x="272" y="0" on="1"/>
        <pt x="70" y="598" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 6 values pushed */
          1 1 1 0 1 76
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 13 values pushed */
            3 2 2 0 0 28 77 0 1 1 26 1 78
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 11 values pushed */
            3 2 2 0 1 0 133 0 1 1 118
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 11 values pushed */
          0 0 0 6 0 6 17 18 4 8 24
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="w" xMin="35" yMin="0" xMax="665" yMax="598">
      <contour>
        <pt x="136" y="598" on="1"/>
        <pt x="217" y="58" on="1"/>
        <pt x="282" y="598" on="1"/>
        <pt x="425" y="598" on="1"/>
        <pt x="487" y="59" on="1"/>
        <pt x="568" y="598" on="1"/>
        <pt x="665" y="598" on="1"/>
        <pt x="553" y="0" on="1"/>
        <pt x="418" y="0" on="1"/>
        <pt x="351" y="555" on="1"/>
        <pt x="283" y="0" on="1"/>
        <pt x="147" y="0" on="1"/>
        <pt x="35" y="598" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          9 4 1 3 2 0 1 76
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 15 values pushed */
            5 4 1 3 0 0 28 77 3 1 2 2 26 2 78
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 23 values pushed */
            5 4 1 3 0 2 2 0 87 5 4 1 3 0 0 2 95 3 1 2 0 2 79
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 13 values pushed */
          0 0 0 12 0 12 18 17 18 18 6 8 26
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="x" xMin="79" yMin="0" xMax="621" yMax="598">
      <contour>
        <pt x="269" y="286" on="1"/>
        <pt x="79" y="598" on="1"/>
        <pt x="187" y="598" on="1"/>
        <pt x="349" y="327" on="1"/>
        <pt x="519" y="598" on="1"/>
        <pt x="621" y="598" on="1"/>
        <pt x="427" y="294" on="1"/>
        <pt x="610" y="0" on="1"/>
        <pt x="501" y="0" on="1"/>
        <pt x="348" y="252" on="1"/>
        <pt x="192" y="0" on="1"/>
        <pt x="90" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          9 6 3 3 2 0 1 76
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 13 values pushed */
            1 1 0 0 28 77 3 1 2 2 26 2 78
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 19 values pushed */
            1 1 0 2 2 0 87 1 1 0 0 2 95 3 1 2 0 2 79
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 7 values pushed */
          18 18 18 17 4 8 26
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="y" xMin="59" yMin="-215" xMax="642" yMax="598">
      <contour>
        <pt x="168" y="598" on="1"/>
        <pt x="371" y="77" on="1"/>
        <pt x="538" y="598" on="1"/>
        <pt x="642" y="598" on="1"/>
        <pt x="417" y="-80" on="1"/>
        <pt x="372" y="-215" on="0"/>
        <pt x="264" y="-215" on="1"/>
        <pt x="194" y="-215" on="0"/>
        <pt x="111" y="-135" on="0"/>
        <pt x="101" y="-59" on="1"/>
        <pt x="195" y="-59" on="1"/>
        <pt x="203" y="-93" on="0"/>
        <pt x="235" y="-126" on="0"/>
        <pt x="261" y="-126" on="1"/>
        <pt x="307" y="-126" on="0"/>
        <pt x="329" y="-53" on="1"/>
        <pt x="362" y="50" on="1"/>
        <pt x="282" y="50" on="1"/>
        <pt x="59" y="598" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 6 values pushed */
          1 1 4 0 1 76
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 33 values pushed */
            0 4 0 2 0 4 2 128 0 2 3 0 2 3 126 6 5 2 0 0 28 77 0 3 3
            1 97 0 1 1 36 1 78
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 33 values pushed */
            6 5 2 0 4 0 133 0 4 2 4 133 0 2 3 2 133 0 3 1 1 3 89 0 3
            3 1 97 0 1 3 1 81
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 14 values pushed */
          0 0 0 18 0 18 18 34 18 34 18 7 8 27
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="yen" xMin="49" yMin="0" xMax="651" yMax="800">
      <contour>
        <pt x="351" y="446" on="1"/>
        <pt x="541" y="800" on="1"/>
        <pt x="651" y="800" on="1"/>
        <pt x="421" y="384" on="1"/>
        <pt x="581" y="384" on="1"/>
        <pt x="581" y="303" on="1"/>
        <pt x="400" y="303" on="1"/>
        <pt x="400" y="213" on="1"/>
        <pt x="581" y="213" on="1"/>
        <pt x="581" y="132" on="1"/>
        <pt x="400" y="132" on="1"/>
        <pt x="400" y="0" on="1"/>
        <pt x="300" y="0" on="1"/>
        <pt x="300" y="132" on="1"/>
        <pt x="119" y="132" on="1"/>
        <pt x="119" y="213" on="1"/>
        <pt x="300" y="213" on="1"/>
        <pt x="300" y="303" on="1"/>
        <pt x="119" y="303" on="1"/>
        <pt x="119" y="384" on="1"/>
        <pt x="279" y="384" on="1"/>
        <pt x="49" y="800" on="1"/>
        <pt x="161" y="800" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 32 values pushed */
            9 1 1 8 1 2 3 1 2 104 7 1 3 6 1 4 5 3 4 103 10 1 0 0 25
            77 0 5 5 26 5 78
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 40 values pushed */
            10 1 0 1 0 133 0 5 4 5 134 9 1 1 8 1 2 3 1 2 104 7 1 3 4
            4 3 87 7 1 3 3 4 95 6 1 4 3 4 79
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 16 values pushed */
          22 21 20 19 17 17 17 17 17 17 17 17 17 11 8 31
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="z" xMin="129" yMin="0" xMax="571" yMax="598">
      <contour>
        <pt x="571" y="598" on="1"/>
        <pt x="571" y="431" on="1"/>
        <pt x="177" y="90" on="1"/>
        <pt x="571" y="90" on="1"/>
        <pt x="571" y="0" on="1"/>
        <pt x="129" y="0" on="1"/>
        <pt x="129" y="167" on="1"/>
        <pt x="524" y="508" on="1"/>
        <pt x="129" y="508" on="1"/>
        <pt x="129" y="598" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          6 1 2 0 2 1 76
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 22 values pushed */
            0 2 2 3 95 4 1 3 3 28 77 0 0 0 1 95 0 1 1 26 1 78
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 25 values pushed */
            4 1 3 0 2 0 3 2 103 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 12 values pushed */
          0 0 0 9 0 9 18 17 18 5 8 25
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="zero" xMin="65" yMin="-15" xMax="635" yMax="815">
      <contour>
        <pt x="65" y="-15" on="0"/>
        <pt x="65" y="400" on="1"/>
        <pt x="65" y="815" on="0"/>
        <pt x="350" y="815" on="1"/>
        <pt x="635" y="815" on="0"/>
        <pt x="635" y="400" on="1"/>
        <pt x="635" y="-15" on="0"/>
        <pt x="350" y="-15" on="1"/>
      </contour>
      <contour>
        <pt x="164" y="356" on="0"/>
        <pt x="167" y="317" on="1"/>
        <pt x="516" y="582" on="1"/>
        <pt x="476" y="722" on="0"/>
        <pt x="350" y="722" on="1"/>
        <pt x="255" y="722" on="0"/>
        <pt x="164" y="564" on="0"/>
        <pt x="164" y="400" on="1"/>
      </contour>
      <contour>
        <pt x="205" y="147" on="0"/>
        <pt x="287" y="78" on="0"/>
        <pt x="350" y="78" on="1"/>
        <pt x="445" y="78" on="0"/>
        <pt x="536" y="236" on="0"/>
        <pt x="536" y="400" on="1"/>
        <pt x="536" y="445" on="0"/>
        <pt x="533" y="482" on="1"/>
        <pt x="184" y="218" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 9 values pushed */
          24 23 10 9 4 3 2 1 76
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 22 values pushed */
            0 2 2 0 97 0 0 0 31 77 0 3 3 1 97 4 1 1 1 32 1 78
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 25 values pushed */
            0 0 0 2 3 0 2 105 0 3 1 1 3 89 0 3 3 1 97 4 1 1 3 1 81
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 14 values pushed */
          0 0 19 17 13 11 0 7 0 6 34 5 8 23
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

  </glyf>

  <name>
    <namerecord nameID="1" platformID="1" platEncID="0" langID="0x0" unicode="True">
      Martian Mono EARLY ADOPTERS Std Lt
    </namerecord>
    <namerecord nameID="2" platformID="1" platEncID="0" langID="0x0" unicode="True">
      Regular
    </namerecord>
    <namerecord nameID="4" platformID="1" platEncID="0" langID="0x0" unicode="True">
      Martian Mono EARLY ADOPTERS Std Lt
    </namerecord>
    <namerecord nameID="5" platformID="1" platEncID="0" langID="0x0" unicode="True">
      Version 0.850
    </namerecord>
    <namerecord nameID="6" platformID="1" platEncID="0" langID="0x0" unicode="True">
      MartianMonoEARLYADOPTERS-StdLt
    </namerecord>
    <namerecord nameID="1" platformID="3" platEncID="1" langID="0x409">
      Martian Mono EARLY ADOPTERS Std Lt
    </namerecord>
    <namerecord nameID="2" platformID="3" platEncID="1" langID="0x409">
      Regular
    </namerecord>
    <namerecord nameID="3" platformID="3" platEncID="1" langID="0x409">
      0.850;UKWN;MartianMonoEARLYADOPTERS-StdLt
    </namerecord>
    <namerecord nameID="4" platformID="3" platEncID="1" langID="0x409">
      Martian Mono EARLY ADOPTERS Std Lt
    </namerecord>
    <namerecord nameID="5" platformID="3" platEncID="1" langID="0x409">
      Version 0.850
    </namerecord>
    <namerecord nameID="6" platformID="3" platEncID="1" langID="0x409">
      MartianMonoEARLYADOPTERS-StdLt
    </namerecord>
    <namerecord nameID="16" platformID="3" platEncID="1" langID="0x409">
      Martian Mono EARLY ADOPTERS
    </namerecord>
    <namerecord nameID="17" platformID="3" platEncID="1" langID="0x409">
      Std Lt
    </namerecord>
  </name>

  <post>
    <formatType value="2.0"/>
    <italicAngle value="0.0"/>
    <underlinePosition value="-100"/>
    <underlineThickness value="50"/>
    <isFixedPitch value="0"/>
    <minMemType42 value="0"/>
    <maxMemType42 value="0"/>
    <minMemType1 value="0"/>
    <maxMemType1 value="0"/>
    <psNames>
      <!-- This file uses unique glyph names based on the information
           found in the 'post' table. Since these names might not be unique,
           we have to invent artificial names in case of clashes. In order to
           be able to retain the original information, we need a name to
           ps name mapping for those cases where they differ. That's what
           you see below.
            -->
    </psNames>
    <extraNames>
      <!-- following are the name that are not taken from the standard Mac glyph order -->
      <psName name="uni0237"/>
      <psName name="uni043D"/>
      <psName name="uni043E"/>
      <psName name="uni2003"/>
      <psName name="uni2002"/>
      <psName name="colon.case"/>
      <psName name="hyphen.case"/>
      <psName name="endash.case"/>
      <psName name="emdash.case"/>
      <psName name="Euro"/>
      <psName name="uni20BD"/>
      <psName name="cent.bold"/>
      <psName name="dollar.bold"/>
      <psName name="plus.case"/>
      <psName name="minus.case"/>
      <psName name="multiply.case"/>
      <psName name="divide.case"/>
      <psName name="equal.case"/>
      <psName name="notequal.case"/>
      <psName name="greater.case"/>
      <psName name="less.case"/>
      <psName name="approxequal.case"/>
      <psName name="asciitilde.case"/>
      <psName name="percent.cv01"/>
      <psName name="percent.cv02"/>
      <psName name="uni0306.cy"/>
      <psName name="uni0308"/>
      <psName name="uni0307"/>
      <psName name="_part.multiply"/>
    </extraNames>
  </post>

  <gasp>
    <gaspRange rangeMaxPPEM="65535" rangeGaspBehavior="15"/>
  </gasp>

  <GDEF>
    <Version value="0x00010000"/>
    <GlyphClassDef>
      <ClassDef glyph="E" class="1"/>
      <ClassDef glyph="dotlessi" class="1"/>
      <ClassDef glyph="e" class="1"/>
      <ClassDef glyph="i" class="1"/>
      <ClassDef glyph="j" class="1"/>
      <ClassDef glyph="uni0237" class="1"/>
      <ClassDef glyph="uni0306.cy" class="3"/>
      <ClassDef glyph="uni0307" class="3"/>
      <ClassDef glyph="uni0308" class="3"/>
    </GlyphClassDef>
    <MarkAttachClassDef>
      <ClassDef glyph="uni0306.cy" class="1"/>
      <ClassDef glyph="uni0307" class="1"/>
      <ClassDef glyph="uni0308" class="1"/>
    </MarkAttachClassDef>
  </GDEF>

  <GPOS>
    <Version value="0x00010000"/>
    <ScriptList>
      <!-- ScriptCount=1 -->
      <ScriptRecord index="0">
        <ScriptTag value="DFLT"/>
        <Script>
          <DefaultLangSys>
            <ReqFeatureIndex value="65535"/>
            <!-- FeatureCount=1 -->
            <FeatureIndex index="0" value="0"/>
          </DefaultLangSys>
          <!-- LangSysCount=0 -->
        </Script>
      </ScriptRecord>
    </ScriptList>
    <FeatureList>
      <!-- FeatureCount=1 -->
      <FeatureRecord index="0">
        <FeatureTag value="mark"/>
        <Feature>
          <!-- LookupCount=1 -->
          <LookupListIndex index="0" value="0"/>
        </Feature>
      </FeatureRecord>
    </FeatureList>
    <LookupList>
      <!-- LookupCount=1 -->
      <Lookup index="0">
        <LookupType value="4"/>
        <LookupFlag value="0"/>
        <!-- SubTableCount=1 -->
        <MarkBasePos index="0" Format="1">
          <MarkCoverage>
            <Glyph value="uni0306.cy"/>
            <Glyph value="uni0308"/>
            <Glyph value="uni0307"/>
          </MarkCoverage>
          <BaseCoverage>
            <Glyph value="E"/>
            <Glyph value="e"/>
            <Glyph value="i"/>
            <Glyph value="dotlessi"/>
            <Glyph value="j"/>
            <Glyph value="uni0237"/>
          </BaseCoverage>
          <!-- ClassCount=1 -->
          <MarkArray>
            <!-- MarkCount=3 -->
            <MarkRecord index="0">
              <Class value="0"/>
              <MarkAnchor Format="1">
                <XCoordinate value="172"/>
                <YCoordinate value="800"/>
              </MarkAnchor>
            </MarkRecord>
            <MarkRecord index="1">
              <Class value="0"/>
              <MarkAnchor Format="1">
                <XCoordinate value="50"/>
                <YCoordinate value="800"/>
              </MarkAnchor>
            </MarkRecord>
            <MarkRecord index="2">
              <Class value="0"/>
              <MarkAnchor Format="1">
                <XCoordinate value="84"/>
                <YCoordinate value="600"/>
              </MarkAnchor>
            </MarkRecord>
          </MarkArray>
          <BaseArray>
            <!-- BaseCount=6 -->
            <BaseRecord index="0">
              <BaseAnchor index="0" Format="1">
                <XCoordinate value="378"/>
                <YCoordinate value="800"/>
              </BaseAnchor>
            </BaseRecord>
            <BaseRecord index="1">
              <BaseAnchor index="0" Format="1">
                <XCoordinate value="363"/>
                <YCoordinate value="616"/>
              </BaseAnchor>
            </BaseRecord>
            <BaseRecord index="2">
              <BaseAnchor index="0" Format="1">
                <XCoordinate value="381"/>
                <YCoordinate value="598"/>
              </BaseAnchor>
            </BaseRecord>
            <BaseRecord index="3">
              <BaseAnchor index="0" Format="1">
                <XCoordinate value="381"/>
                <YCoordinate value="598"/>
              </BaseAnchor>
            </BaseRecord>
            <BaseRecord index="4">
              <BaseAnchor index="0" Format="1">
                <XCoordinate value="447"/>
                <YCoordinate value="598"/>
              </BaseAnchor>
            </BaseRecord>
            <BaseRecord index="5">
              <BaseAnchor index="0" Format="1">
                <XCoordinate value="447"/>
                <YCoordinate value="598"/>
              </BaseAnchor>
            </BaseRecord>
          </BaseArray>
        </MarkBasePos>
      </Lookup>
    </LookupList>
  </GPOS>

  <GSUB>
    <Version value="0x00010001"/>
    <ScriptList>
      <!-- ScriptCount=1 -->
      <ScriptRecord index="0">
        <ScriptTag value="DFLT"/>
        <Script>
          <DefaultLangSys>
            <ReqFeatureIndex value="65535"/>
            <!-- FeatureCount=7 -->
            <FeatureIndex index="0" value="0"/>
            <FeatureIndex index="1" value="1"/>
            <FeatureIndex index="2" value="2"/>
            <FeatureIndex index="3" value="3"/>
            <FeatureIndex index="4" value="4"/>
            <FeatureIndex index="5" value="5"/>
            <FeatureIndex index="6" value="6"/>
          </DefaultLangSys>
          <!-- LangSysCount=0 -->
        </Script>
      </ScriptRecord>
    </ScriptList>
    <FeatureList>
      <!-- FeatureCount=7 -->
      <FeatureRecord index="0">
        <FeatureTag value="aalt"/>
        <Feature>
          <!-- LookupCount=2 -->
          <LookupListIndex index="0" value="0"/>
          <LookupListIndex index="1" value="1"/>
        </Feature>
      </FeatureRecord>
      <FeatureRecord index="1">
        <FeatureTag value="calt"/>
        <Feature>
          <!-- LookupCount=1 -->
          <LookupListIndex index="0" value="7"/>
        </Feature>
      </FeatureRecord>
      <FeatureRecord index="2">
        <FeatureTag value="case"/>
        <Feature>
          <!-- LookupCount=1 -->
          <LookupListIndex index="0" value="8"/>
        </Feature>
      </FeatureRecord>
      <FeatureRecord index="3">
        <FeatureTag value="ccmp"/>
        <Feature>
          <!-- LookupCount=1 -->
          <LookupListIndex index="0" value="2"/>
        </Feature>
      </FeatureRecord>
      <FeatureRecord index="4">
        <FeatureTag value="cv01"/>
        <Feature>
          <!-- LookupCount=1 -->
          <LookupListIndex index="0" value="3"/>
        </Feature>
      </FeatureRecord>
      <FeatureRecord index="5">
        <FeatureTag value="cv02"/>
        <Feature>
          <!-- LookupCount=1 -->
          <LookupListIndex index="0" value="4"/>
        </Feature>
      </FeatureRecord>
      <FeatureRecord index="6">
        <FeatureTag value="rlig"/>
        <Feature>
          <!-- LookupCount=0 -->
        </Feature>
      </FeatureRecord>
    </FeatureList>
    <LookupList>
      <!-- LookupCount=11 -->
      <Lookup index="0">
        <LookupType value="1"/>
        <LookupFlag value="0"/>
        <!-- SubTableCount=1 -->
        <SingleSubst index="0">
          <Substitution in="approxequal" out="approxequal.case"/>
          <Substitution in="asciitilde" out="asciitilde.case"/>
          <Substitution in="colon" out="colon.case"/>
          <Substitution in="divide" out="divide.case"/>
          <Substitution in="emdash" out="emdash.case"/>
          <Substitution in="endash" out="endash.case"/>
          <Substitution in="equal" out="equal.case"/>
          <Substitution in="greater" out="greater.case"/>
          <Substitution in="hyphen" out="hyphen.case"/>
          <Substitution in="less" out="less.case"/>
          <Substitution in="minus" out="minus.case"/>
          <Substitution in="multiply" out="multiply.case"/>
          <Substitution in="notequal" out="notequal.case"/>
          <Substitution in="plus" out="plus.case"/>
        </SingleSubst>
      </Lookup>
      <Lookup index="1">
        <LookupType value="3"/>
        <LookupFlag value="0"/>
        <!-- SubTableCount=1 -->
        <AlternateSubst index="0">
          <AlternateSet glyph="percent">
            <Alternate glyph="percent.cv01"/>
            <Alternate glyph="percent.cv02"/>
          </AlternateSet>
        </AlternateSubst>
      </Lookup>
      <Lookup index="2">
        <LookupType value="6"/>
        <LookupFlag value="0"/>
        <!-- SubTableCount=1 -->
        <ChainContextSubst index="0" Format="3">
          <!-- BacktrackGlyphCount=0 -->
          <!-- InputGlyphCount=1 -->
          <InputCoverage index="0">
            <Glyph value="i"/>
            <Glyph value="j"/>
          </InputCoverage>
          <!-- LookAheadGlyphCount=1 -->
          <LookAheadCoverage index="0">
            <Glyph value="uni0308"/>
            <Glyph value="uni0307"/>
          </LookAheadCoverage>
          <!-- SubstCount=1 -->
          <SubstLookupRecord index="0">
            <SequenceIndex value="0"/>
            <LookupListIndex value="9"/>
          </SubstLookupRecord>
        </ChainContextSubst>
      </Lookup>
      <Lookup index="3">
        <LookupType value="1"/>
        <LookupFlag value="0"/>
        <!-- SubTableCount=1 -->
        <SingleSubst index="0">
          <Substitution in="percent" out="percent.cv01"/>
        </SingleSubst>
      </Lookup>
      <Lookup index="4">
        <LookupType value="1"/>
        <LookupFlag value="0"/>
        <!-- SubTableCount=1 -->
        <SingleSubst index="0">
          <Substitution in="percent" out="percent.cv02"/>
        </SingleSubst>
      </Lookup>
      <Lookup index="5">
        <LookupType value="1"/>
        <LookupFlag value="0"/>
        <!-- SubTableCount=1 -->
        <SingleSubst index="0">
          <Substitution in="cent" out="cent.bold"/>
          <Substitution in="dollar" out="dollar.bold"/>
        </SingleSubst>
      </Lookup>
      <Lookup index="6">
        <LookupType value="1"/>
        <LookupFlag value="0"/>
        <!-- SubTableCount=1 -->
        <SingleSubst index="0">
          <Substitution in="cent" out="cent.bold"/>
          <Substitution in="dollar" out="dollar.bold"/>
        </SingleSubst>
      </Lookup>
      <Lookup index="7">
        <LookupType value="6"/>
        <LookupFlag value="0"/>
        <!-- SubTableCount=6 -->
        <ChainContextSubst index="0" Format="3">
          <!-- BacktrackGlyphCount=1 -->
          <BacktrackCoverage index="0">
            <Glyph value="zero"/>
            <Glyph value="one"/>
            <Glyph value="two"/>
            <Glyph value="three"/>
            <Glyph value="four"/>
            <Glyph value="five"/>
            <Glyph value="six"/>
            <Glyph value="seven"/>
            <Glyph value="eight"/>
            <Glyph value="nine"/>
          </BacktrackCoverage>
          <!-- InputGlyphCount=1 -->
          <InputCoverage index="0">
            <Glyph value="colon"/>
            <Glyph value="hyphen"/>
            <Glyph value="endash"/>
            <Glyph value="emdash"/>
            <Glyph value="plus"/>
            <Glyph value="minus"/>
            <Glyph value="multiply"/>
            <Glyph value="divide"/>
            <Glyph value="equal"/>
            <Glyph value="notequal"/>
            <Glyph value="greater"/>
            <Glyph value="less"/>
            <Glyph value="approxequal"/>
            <Glyph value="asciitilde"/>
          </InputCoverage>
          <!-- LookAheadGlyphCount=1 -->
          <LookAheadCoverage index="0">
            <Glyph value="zero"/>
            <Glyph value="one"/>
            <Glyph value="two"/>
            <Glyph value="three"/>
            <Glyph value="four"/>
            <Glyph value="five"/>
            <Glyph value="six"/>
            <Glyph value="seven"/>
            <Glyph value="eight"/>
            <Glyph value="nine"/>
          </LookAheadCoverage>
          <!-- SubstCount=1 -->
          <SubstLookupRecord index="0">
            <SequenceIndex value="0"/>
            <LookupListIndex value="10"/>
          </SubstLookupRecord>
        </ChainContextSubst>
        <ChainContextSubst index="1" Format="3">
          <!-- BacktrackGlyphCount=1 -->
          <BacktrackCoverage index="0">
            <Glyph value="A"/>
            <Glyph value="B"/>
            <Glyph value="C"/>
            <Glyph value="D"/>
            <Glyph value="E"/>
            <Glyph value="F"/>
            <Glyph value="G"/>
            <Glyph value="H"/>
            <Glyph value="I"/>
            <Glyph value="J"/>
            <Glyph value="K"/>
            <Glyph value="L"/>
            <Glyph value="M"/>
            <Glyph value="N"/>
            <Glyph value="O"/>
            <Glyph value="P"/>
            <Glyph value="Q"/>
            <Glyph value="R"/>
            <Glyph value="S"/>
            <Glyph value="T"/>
            <Glyph value="U"/>
            <Glyph value="V"/>
            <Glyph value="W"/>
            <Glyph value="X"/>
            <Glyph value="Y"/>
            <Glyph value="Z"/>
          </BacktrackCoverage>
          <!-- InputGlyphCount=1 -->
          <InputCoverage index="0">
            <Glyph value="colon"/>
            <Glyph value="hyphen"/>
            <Glyph value="endash"/>
            <Glyph value="emdash"/>
            <Glyph value="plus"/>
            <Glyph value="minus"/>
            <Glyph value="multiply"/>
            <Glyph value="divide"/>
            <Glyph value="equal"/>
            <Glyph value="notequal"/>
            <Glyph value="greater"/>
            <Glyph value="less"/>
            <Glyph value="approxequal"/>
            <Glyph value="asciitilde"/>
          </InputCoverage>
          <!-- LookAheadGlyphCount=1 -->
          <LookAheadCoverage index="0">
            <Glyph value="A"/>
            <Glyph value="B"/>
            <Glyph value="C"/>
            <Glyph value="D"/>
            <Glyph value="E"/>
            <Glyph value="F"/>
            <Glyph value="G"/>
            <Glyph value="H"/>
            <Glyph value="I"/>
            <Glyph value="J"/>
            <Glyph value="K"/>
            <Glyph value="L"/>
            <Glyph value="M"/>
            <Glyph value="N"/>
            <Glyph value="O"/>
            <Glyph value="P"/>
            <Glyph value="Q"/>
            <Glyph value="R"/>
            <Glyph value="S"/>
            <Glyph value="T"/>
            <Glyph value="U"/>
            <Glyph value="V"/>
            <Glyph value="W"/>
            <Glyph value="X"/>
            <Glyph value="Y"/>
            <Glyph value="Z"/>
          </LookAheadCoverage>
          <!-- SubstCount=1 -->
          <SubstLookupRecord index="0">
            <SequenceIndex value="0"/>
            <LookupListIndex value="10"/>
          </SubstLookupRecord>
        </ChainContextSubst>
        <ChainContextSubst index="2" Format="3">
          <!-- BacktrackGlyphCount=1 -->
          <BacktrackCoverage index="0">
            <Glyph value="zero"/>
            <Glyph value="one"/>
            <Glyph value="two"/>
            <Glyph value="three"/>
            <Glyph value="four"/>
            <Glyph value="five"/>
            <Glyph value="six"/>
            <Glyph value="seven"/>
            <Glyph value="eight"/>
            <Glyph value="nine"/>
          </BacktrackCoverage>
          <!-- InputGlyphCount=1 -->
          <InputCoverage index="0">
            <Glyph value="colon"/>
            <Glyph value="hyphen"/>
            <Glyph value="endash"/>
            <Glyph value="emdash"/>
            <Glyph value="plus"/>
            <Glyph value="minus"/>
            <Glyph value="multiply"/>
            <Glyph value="divide"/>
            <Glyph value="equal"/>
            <Glyph value="notequal"/>
            <Glyph value="greater"/>
            <Glyph value="less"/>
            <Glyph value="approxequal"/>
            <Glyph value="asciitilde"/>
          </InputCoverage>
          <!-- LookAheadGlyphCount=1 -->
          <LookAheadCoverage index="0">
            <Glyph value="A"/>
            <Glyph value="B"/>
            <Glyph value="C"/>
            <Glyph value="D"/>
            <Glyph value="E"/>
            <Glyph value="F"/>
            <Glyph value="G"/>
            <Glyph value="H"/>
            <Glyph value="I"/>
            <Glyph value="J"/>
            <Glyph value="K"/>
            <Glyph value="L"/>
            <Glyph value="M"/>
            <Glyph value="N"/>
            <Glyph value="O"/>
            <Glyph value="P"/>
            <Glyph value="Q"/>
            <Glyph value="R"/>
            <Glyph value="S"/>
            <Glyph value="T"/>
            <Glyph value="U"/>
            <Glyph value="V"/>
            <Glyph value="W"/>
            <Glyph value="X"/>
            <Glyph value="Y"/>
            <Glyph value="Z"/>
          </LookAheadCoverage>
          <!-- SubstCount=1 -->
          <SubstLookupRecord index="0">
            <SequenceIndex value="0"/>
            <LookupListIndex value="10"/>
          </SubstLookupRecord>
        </ChainContextSubst>
        <ChainContextSubst index="3" Format="3">
          <!-- BacktrackGlyphCount=1 -->
          <BacktrackCoverage index="0">
            <Glyph value="A"/>
            <Glyph value="B"/>
            <Glyph value="C"/>
            <Glyph value="D"/>
            <Glyph value="E"/>
            <Glyph value="F"/>
            <Glyph value="G"/>
            <Glyph value="H"/>
            <Glyph value="I"/>
            <Glyph value="J"/>
            <Glyph value="K"/>
            <Glyph value="L"/>
            <Glyph value="M"/>
            <Glyph value="N"/>
            <Glyph value="O"/>
            <Glyph value="P"/>
            <Glyph value="Q"/>
            <Glyph value="R"/>
            <Glyph value="S"/>
            <Glyph value="T"/>
            <Glyph value="U"/>
            <Glyph value="V"/>
            <Glyph value="W"/>
            <Glyph value="X"/>
            <Glyph value="Y"/>
            <Glyph value="Z"/>
          </BacktrackCoverage>
          <!-- InputGlyphCount=1 -->
          <InputCoverage index="0">
            <Glyph value="colon"/>
            <Glyph value="hyphen"/>
            <Glyph value="endash"/>
            <Glyph value="emdash"/>
            <Glyph value="plus"/>
            <Glyph value="minus"/>
            <Glyph value="multiply"/>
            <Glyph value="divide"/>
            <Glyph value="equal"/>
            <Glyph value="notequal"/>
            <Glyph value="greater"/>
            <Glyph value="less"/>
            <Glyph value="approxequal"/>
            <Glyph value="asciitilde"/>
          </InputCoverage>
          <!-- LookAheadGlyphCount=1 -->
          <LookAheadCoverage index="0">
            <Glyph value="zero"/>
            <Glyph value="one"/>
            <Glyph value="two"/>
            <Glyph value="three"/>
            <Glyph value="four"/>
            <Glyph value="five"/>
            <Glyph value="six"/>
            <Glyph value="seven"/>
            <Glyph value="eight"/>
            <Glyph value="nine"/>
          </LookAheadCoverage>
          <!-- SubstCount=1 -->
          <SubstLookupRecord index="0">
            <SequenceIndex value="0"/>
            <LookupListIndex value="10"/>
          </SubstLookupRecord>
        </ChainContextSubst>
        <ChainContextSubst index="4" Format="3">
          <!-- BacktrackGlyphCount=1 -->
          <BacktrackCoverage index="0">
            <Glyph value="zero"/>
            <Glyph value="one"/>
            <Glyph value="two"/>
            <Glyph value="three"/>
            <Glyph value="four"/>
            <Glyph value="five"/>
            <Glyph value="six"/>
            <Glyph value="seven"/>
            <Glyph value="eight"/>
            <Glyph value="nine"/>
          </BacktrackCoverage>
          <!-- InputGlyphCount=1 -->
          <InputCoverage index="0">
            <Glyph value="colon"/>
          </InputCoverage>
          <!-- LookAheadGlyphCount=2 -->
          <LookAheadCoverage index="0">
            <Glyph value="colon"/>
          </LookAheadCoverage>
          <LookAheadCoverage index="1">
            <Glyph value="zero"/>
            <Glyph value="one"/>
            <Glyph value="two"/>
            <Glyph value="three"/>
            <Glyph value="four"/>
            <Glyph value="five"/>
            <Glyph value="six"/>
            <Glyph value="seven"/>
            <Glyph value="eight"/>
            <Glyph value="nine"/>
          </LookAheadCoverage>
          <!-- SubstCount=1 -->
          <SubstLookupRecord index="0">
            <SequenceIndex value="0"/>
            <LookupListIndex value="10"/>
          </SubstLookupRecord>
        </ChainContextSubst>
        <ChainContextSubst index="5" Format="3">
          <!-- BacktrackGlyphCount=2 -->
          <BacktrackCoverage index="0">
            <Glyph value="colon.case"/>
          </BacktrackCoverage>
          <BacktrackCoverage index="1">
            <Glyph value="zero"/>
            <Glyph value="one"/>
            <Glyph value="two"/>
            <Glyph value="three"/>
            <Glyph value="four"/>
            <Glyph value="five"/>
            <Glyph value="six"/>
            <Glyph value="seven"/>
            <Glyph value="eight"/>
            <Glyph value="nine"/>
          </BacktrackCoverage>
          <!-- InputGlyphCount=1 -->
          <InputCoverage index="0">
            <Glyph value="colon"/>
          </InputCoverage>
          <!-- LookAheadGlyphCount=1 -->
          <LookAheadCoverage index="0">
            <Glyph value="zero"/>
            <Glyph value="one"/>
            <Glyph value="two"/>
            <Glyph value="three"/>
            <Glyph value="four"/>
            <Glyph value="five"/>
            <Glyph value="six"/>
            <Glyph value="seven"/>
            <Glyph value="eight"/>
            <Glyph value="nine"/>
          </LookAheadCoverage>
          <!-- SubstCount=1 -->
          <SubstLookupRecord index="0">
            <SequenceIndex value="0"/>
            <LookupListIndex value="10"/>
          </SubstLookupRecord>
        </ChainContextSubst>
      </Lookup>
      <Lookup index="8">
        <LookupType value="1"/>
        <LookupFlag value="0"/>
        <!-- SubTableCount=1 -->
        <SingleSubst index="0">
          <Substitution in="approxequal" out="approxequal.case"/>
          <Substitution in="asciitilde" out="asciitilde.case"/>
          <Substitution in="colon" out="colon.case"/>
          <Substitution in="divide" out="divide.case"/>
          <Substitution in="emdash" out="emdash.case"/>
          <Substitution in="endash" out="endash.case"/>
          <Substitution in="equal" out="equal.case"/>
          <Substitution in="greater" out="greater.case"/>
          <Substitution in="hyphen" out="hyphen.case"/>
          <Substitution in="less" out="less.case"/>
          <Substitution in="minus" out="minus.case"/>
          <Substitution in="multiply" out="multiply.case"/>
          <Substitution in="notequal" out="notequal.case"/>
          <Substitution in="plus" out="plus.case"/>
        </SingleSubst>
      </Lookup>
      <Lookup index="9">
        <LookupType value="1"/>
        <LookupFlag value="0"/>
        <!-- SubTableCount=1 -->
        <SingleSubst index="0">
          <Substitution in="i" out="dotlessi"/>
          <Substitution in="j" out="uni0237"/>
        </SingleSubst>
      </Lookup>
      <Lookup index="10">
        <LookupType value="1"/>
        <LookupFlag value="0"/>
        <!-- SubTableCount=1 -->
        <SingleSubst index="0">
          <Substitution in="approxequal" out="approxequal.case"/>
          <Substitution in="asciitilde" out="asciitilde.case"/>
          <Substitution in="colon" out="colon.case"/>
          <Substitution in="divide" out="divide.case"/>
          <Substitution in="emdash" out="emdash.case"/>
          <Substitution in="endash" out="endash.case"/>
          <Substitution in="equal" out="equal.case"/>
          <Substitution in="greater" out="greater.case"/>
          <Substitution in="hyphen" out="hyphen.case"/>
          <Substitution in="less" out="less.case"/>
          <Substitution in="minus" out="minus.case"/>
          <Substitution in="multiply" out="multiply.case"/>
          <Substitution in="notequal" out="notequal.case"/>
          <Substitution in="plus" out="plus.case"/>
        </SingleSubst>
      </Lookup>
    </LookupList>
    <FeatureVariations>
      <Version value="0x00010000"/>
      <!-- FeatureVariationCount=2 -->
      <FeatureVariationRecord index="0">
        <ConditionSet>
          <!-- ConditionCount=1 -->
          <ConditionTable index="0" Format="1">
            <AxisIndex value="0"/>
            <FilterRangeMinValue value="1.99994"/>
            <FilterRangeMaxValue value="1.99994"/>
          </ConditionTable>
        </ConditionSet>
        <FeatureTableSubstitution>
          <Version value="0x00010000"/>
          <!-- SubstitutionCount=1 -->
          <SubstitutionRecord index="0">
            <FeatureIndex value="6"/>
            <Feature>
              <!-- LookupCount=1 -->
              <LookupListIndex index="0" value="5"/>
            </Feature>
          </SubstitutionRecord>
        </FeatureTableSubstitution>
      </FeatureVariationRecord>
      <FeatureVariationRecord index="1">
        <ConditionSet>
          <!-- ConditionCount=2 -->
          <ConditionTable index="0" Format="1">
            <AxisIndex value="0"/>
            <FilterRangeMinValue value="1.99994"/>
            <FilterRangeMaxValue value="1.99994"/>
          </ConditionTable>
          <ConditionTable index="1" Format="1">
            <AxisIndex value="1"/>
            <FilterRangeMinValue value="1.99994"/>
            <FilterRangeMaxValue value="1.99994"/>
          </ConditionTable>
        </ConditionSet>
        <FeatureTableSubstitution>
          <Version value="0x00010000"/>
          <!-- SubstitutionCount=1 -->
          <SubstitutionRecord index="0">
            <FeatureIndex value="6"/>
            <Feature>
              <!-- LookupCount=1 -->
              <LookupListIndex index="0" value="6"/>
            </Feature>
          </SubstitutionRecord>
        </FeatureTableSubstitution>
      </FeatureVariationRecord>
    </FeatureVariations>
  </GSUB>

  <DSIG>
    <!-- note that the Digital Signature will be invalid after recompilation! -->
    <tableHeader flag="0x0" numSigs="0" version="1"/>
  </DSIG>

</ttFont>
